%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: texture_front_matter.ai
%%Creator: Adobe Graphics Manager
%%For: John MacCallum
%%CreationDate: 2/16/13
%%BoundingBox: 0 0 792 1224
%%HiResBoundingBox: 0 0 792 1224
%%CropBox: 0 0 792 1224
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Special
%%TargetDevice: (hp color LaserJet 5550 ) (3010.107) 0
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%ADOBeginClientInjection: DocumentHeader "AI11"
%ADO_BuildNumber: Adobe Illustrator(R) 16.2.0 x722 R agm 4.6676 ct 5.2594
%ADOEndClientInjection: DocumentHeader "AI11"
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 1 -1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize Tabloid

      <</DeferredMediaSelection true /PageSize [792 1224] /ImagingBBox null /MediaClass null>> setpagedevice
%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [0 0 792 1224]]
[/BleedBox [0 0 792 1224]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_check_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1224 translate
pgsv
[0 -1 1 0 0 1224 ]ct
gsave
np
gsave
0 0 mo
0 792 li
1224 792 li
1224 0 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: Palatino-Roman Initial
ct_T42Dict begin
-0.465 -0.48 1.703 1.172
 256 array 0 1 255 {1 index exch /.notdef put} for  /Palatino-Roman
Type42DictBegin
[<00010000000b000b000b000b63767420dec1ba6b000000bc000005986670
676d603e945f00000654000006fd676c79661bcc2dca00005a580004607c
686561642bd76f7100000d540000003668686561fa0e820f00000d8c0000
0024686d7478c39d441000000db000001b706c6f63610e5dd55400002920
00001b746d6178700f36088900004494000000206e616d65874013930000
44b400000fe870726570feed8aee0000549c000005bb6764697200000000
000000000000000005d10000058c001a0580000503a600220000ffe30000
ffe80000ffe3fdcefffc058d0043fe5c00000362000005ab000002340000
058d00000000000003510000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000
00000000000000000000000000000000000000000000ffffffffffff00bc
000000bc0000000000000000000000000000000000000000000000000004
00050040000700050039000700c100c30072013200be0005008e00320043
001400680030005500c30223009e0011003a00a5005700d5000600880010
005b008100f80053009900ac00bd04010044008e00ef0042004a006c011f
0068008000a900d0004a00a400adff94007600b400c00031011a01290017
00afff6f0001002d008b00c30446ffcc0030ffec001200450051009100a1
00a901570000001d002a0031003100420052009500d600d600ef015a01d5
0282032bffb7000b001d0029000300330035003c003e0047006d00e00194
0391ffc0ffd5000500080041005b0063007f00a2ff4effb1004400260044
004a0073008f00a200ab00b000cc010b0159017b018501b7027c02d80375
03a404bd0516ffac00200037003b00450053005a0061006c0076008f0095
00b500bc00d500ec02d600fb001d003b003d005700650066007a008700a1
00a400ab00c600e100f0013201560166018102130233024a0264028a02bb
0313032e03a903c605e9ff4affaa00000008000a0026002800550055006b
00c700d100da013d014a019801e30247038005a6ff2dffe6ffea000a0017
0020002500470049004e00580076008f00950099009900a500b600bb00d0
00e600fe01040117011d011e018f019301b201e201ec01f90202023502f7
035e0387038f03a603bc03d403d6043a045e04fb052c0584058e059a05c6
fef0ff21ff7f0021005a005a0068006e0085008a008c008c009c00a600b4
00cf00d900df00e800ec00fa01000106010c0115012a013901690201042c
0497052a05ca06bf0800fdcdfee2ff1500030005000a000c001d00220024
002e0046004a00510057005c005c005e006a006c00770079007d007f0081
0086008b008f009500b100b300bb00be00bf00c500c600cb00d100d800da
00db00df00e200ea00eb00fe0104010a010a012d013401360139013b0144
014b014f0153016101670168017d01a901b601b701ba01bd01d201de01df
01f102240233025e02680275027502ae02dd032d034503510367038e040a
041304a204f0050005b506190620066206cd0737077d07c4fca7fe6efec8
fee9ff00ff6effe90009000900230027002a002b004e005c00660068006a
007800800080008500890092009a009c00b400b600b800bf00c500d100dc
00ef00f801080116011701380138014b0157016301670168018801920193
019b019e01ae01b301c201cf01df01e801f401f501f9020b02270227023f
0247026e0278028e02a402c102d002f502f70305030d030f031e033a033d
03590388039503df045a0543060106420708070c074b076300bb00c800ba
00000000000000000000000000000149010e0379005b00dc00e3039400b6
0249020f04e0014c001a0104035e00ae0221022900c501d6027c02c7057e
017d0039015c034602480432039e01fe0071007001c8014001920115017e
016c004502a500f303fd013302a8015001650235012403d3022903af00e8
001a031f007501420237feae01ec008f044602f202dd01c40046003000c5
01860083055000c100af00cc004b0047001a005300b2002800c300520095
00eb0267009500470168007300720083003f002302e10276005b01d90280
023600e6019c010500f201c700510490feac0099031c004c00a3006100e1
03a80410008000a2005a0457049304c7025701ac016c00510092030801bd
00d900390092001a008300bc064a021201810359015700820030002a002a
403231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b0054358b94000fff50a1bb94000fff10a592d
2c00b0054358b9001640000b1bb9001040000b592d2c2045b00043617d68
18b0004360442d2c45b04a234445b04923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2cb002254661658a46b04060
8b482d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b049
234445b04a23444565234520b00325606a20b009234223688a6a606120b0
1a8ab000527921b21a4a40b9ffe0004a45208a54582321b03f1b23596144
1cb114008a5279b34940204945208a54582321b03f1b235961442d2cb005
4358b91ef138060b1bb9187e3b210b592d2cb0054358b9333326660b1bb9
2d412d410b592d2cb0054358b93d1e12fd0b1bb93b21187e0b592d2cb005
4358b93d1eed040b1bb93b21e7830b592d2cb0054358b93333d99b0b1bb9
2d41d2c00b592d2cb0054358b91ef1c7fb0b1bb9187ec4e00b592d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4569b00943608a10
3a2d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0064365b00743
0b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162db80032
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
332c2020456944b001602db800342cb800332a212db800352c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800362c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800372c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db800382c2020456944b00160
2020457d691844b001602db800392cb800382a2db8003a2c4b20b0032653
58b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b0032653
582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b0032653582321b801408a8a1b8a235920b80003265358b0032545b80180
50582321b8018023211bb003254523212321591b2159442db8003b2c4b53
5845441b2121592db8003c2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8003d2c2020456944b001602db8003e2cb8003d2a
212db8003f2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db800402c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800412c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00422c2020456944b001602020457d691844b001602db800432cb800422a
2db800442c4b20b003265358b0401bb000598a8a20b0032653582321b080
8a8a1b8a235920b0032653582321b800c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db800452c4b535845441b2121592d0000000001000000010000
624add735f0f3cf50111080000000000a426b48000000000c9de200efc44
fc250da70963000000090001000100000000000100000695fdc800000ddd
fc44fd760da70001000000000000000000000000000006dc060001000000
000002000000020000000239008d02f8006804d9006f0400003906b80069
0639005c01aa007b02aa007902aa0079031d005604d900680200fff202aa
002d0200008804d901150400003e0400007d04000022040000220400000c
0400001d040000460400005e0400004004000034020000880200001504d9
002804d9004c04d90020038d005905fa002f0639002304e3001b05ac0047
0631001a04e300320473002c061b004006a8003102b2002f02aaffe805cf
003304e300250791002606a60031064a003104d50036064a00300558002d
0433003804e7002b0639001e05c70015080000170556001f055600170556
002402aa00a704d900e902aa005504d9006a0400000002aa00a404000052
046dffea038d005004e3005403d5003302aa00310473004704a800070254
002d01dfffbe047300210254002d0710002a04a8001c045e004404cf0024
047b004f0329002f0364004a029c002e04d3001a0485001e06ac001d0421
0024047300100400002402aa007704d9023302aa006804d9006806390023
0639002305ac004704e3003206a60031064a00310639001e040000520400
005204000052040000520400005204000052038d005003d5003303d50033
03d5003303d50033024c0029024cffe9024c0014024c001a04a8001c045e
0044045e0044045e0044045e0044045e004404d3001a04d3001a04d3001a
04d3001a04000045033300660400007f0400fff60400003804d9010c0506
004e0473002b05fa001605fa001607d5005202aa00a402aa001a0464002d
078d000006aa004905b400220464002c0464002c0464002c0400ffe5049c
003003f4001c05b4006c0696005c0464000c0231ff4202aa003002aa0014
0625004c0610002d04730028038d00670239009a04d900690464000a0400
00120464001b04e500220400006604000061080000df0200000006390023
06390023064a003107fc0048069e00350400ffff08000000040000730400
00390239002d0239002d0464000e03f4003b04730010055600170156fe29
05f4ffb202a6006202a6008104d7002a04dd002b04000046020000880239
002d04000039092700690639002304e300320639002304e3003204e30032
02b2002f02b2001402b2001a02b20022064a0031064a003106520000064a
00310639001e0639001e0639001e024c002902aa001402aafff702aa0011
02aa00300200009302aa007402aa0096030a002f0281008a02aa001404e3
00070254ffe9043300420364004a055600240400002404d902330631001a
045e004c055600170473001004d5004704cf002904d9004a04d900b00266
003b0266ffff026600010600001d0600002e060000180400000e061b0040
0473004702b2002f043300380364004a05ac0047038d005005ac0047038d
005004e30051063900230400005206390023040000520639002304000052
05ac0047038d005005ac0047038d00500631001a04e3005404e3003203d5
003304e3003203d5003304e3003203d5003304e3003203d5003304e30032
03d50033061b004004730047061b004004730047061b0040047300470473
004706a8003104a8000706a8003104a8000702b20010024cffd402b20011
024c000c02b2002f0254002d055c002f0433002d02aaffe801dfffab05cf
00330473002104e300250254002d04e300250254002d04e3002503a6002d
04e300250254002d06a6003104a8001c06a6003104a8001c06a6003104a8
001c04a8001c064a0031045e0044064a0031045e0044064a0031045e0044
0558002d0329002f0558002d0329002f0558002d0329002f043300420364
004a043300420364004a04e7002b029c002e04e7002b029c002e04e7002b
029c00190639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a0639001e04d3001a0639001e04d3001a0800001706ac001d
055600170473001005560024040000240556002404000024043300420364
004a04e7002b029c002e04d9002c0000fce80000fce80000fc900000fc74
0000fc8d0000fcac0000fd640000fc960000fcf00000fc440000fc900000
fd2d0000fcf90000fd1b0000fc7b062500530631001a061b004004730047
04e300250254002d05cf00330473002106a6003104a8001c0558002d0329
002f02aa002d0473002102aa003106a6003104a8001c038d005003d50033
0710002a0329002f029c002e0485001e06ac001d0239002d0239002d0333
01240333012402aa001102aa00a402aa00a402aa001102aa00a402aa00a4
0000fc440000fcac0000fd110000fd110000fce80000fce80000fd330000
fd640000fc960000fcf00000fc900000fc900000fcac0000fcac0000fc74
0000fc8d0000fd330000fd330000fd3300000000000000000000000002aa
002d02000088062500530639002303f4001d03f4002f05b4006c05b40092
0464000a0464ff8c0231ff420231ffe004640012046400340464002f0464
002b0000000008df006607a6006605cf003302b2002f0564002f0816002f
0879002f05c70015087900150b2b00150ddd00150808002f0556001f0808
001f0aba001f04e3002505ac00470631001a079100260254002d04a8002d
06fc002d06d9002d0485001e06d9001e092d001e0b81001e0675002d0421
00240675002408c900240254002d038d005004e300540710002a02b2002f
024c00030239008d0b87001a0a31001a08e30054078d002506c200250433
002d09500031088500310687001c063900230400005202b20014024cffe7
064a0031045e00440639001e04d3001a0639001e04d3001a0639001e04d3
001a0639001e04d3001a0639001e04d3001a063900230400005206390023
04000052078d00000610002d061b00400473004705cf003304730021064a
0031045e0044064a0031045e00440b87001a0a31001a08e30054061b0040
06a6003104a8001c0639002304000052078d00000610002d06aa00490473
00280639002304000052063900230400005204e3003203d5003304e30032
03d5003302b2ffc7024cff9702b2002f024c0000064a0031045e0044064a
0031045e00440558002d032900090558002d0329002f0639001e04d3001a
0639001e04d3001a06a8003104a80007063900230400005204e3003203d5
0033064a0031045e0044064a0031045e0044064a0031045e0044064a0031
045e004405560017047300100400003902b2002f063900230400005204e3
001b046dffea04e3001b046dffea04e3001b046dffea05ac0047038d0050
0631001a04e300540631001a04e300540631001a04e300540631001a04e3
00540631001a04e3005404e3003203d5003304e3003203d5003304e30032
03d5003304e3003203d5003304e3003203d500330473002c02aa0031061b
00400473004706a8003104a8000706a8003104a8000706a8003104a80007
06a8003104a8000706a8003104a8000702b2fff80254ffcf02b2001a024c
ffed05cf00330473002105cf00330473002105cf00330473002104e30025
0254002d04e300250254ffe704e300250254ffe704e300250254ffea0791
00260710002a079100260710002a079100260710002a06a6003104a8001c
06a6003104a8001c06a6003104a8001c06a6003104a8001c064a0031045e
0044064a0031045e0044064a0031045e0044064a0031045e004404d50036
04cf002404d5003604cf00240558002d0329002f0558002d0329002f0558
002d0329002f0558002d0329002f043300420364004a043300420364004a
043300420364004a043300420364004a043300420364004a04e7002b029c
002e04e7002b029c002e04e7002b029c001904e7002b029c001c0639001e
04d3001a0639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a05c700150485001e05c700150485001e0800001706ac001d
0800001706ac001d0800001706ac001d0800001706ac001d0800001706ac
001d0556001f042100240556001f04210024055600170473001005560024
040000240556002404000024055600240400002404a80007029c002206ac
001d0473001002aa003104e3003203d5003304e3003203d50033078d0000
0610002d079100260710002a0000fce80000fce80000fd110000fc960200
001502aa001a0200008806390023040000520400005202b20010024cffe0
024c00290639001e04d3001a042100240558002d0329002f01dfffbe0400
00520631001a04e3005403d50033043300380364004a0000fe5f0000fe78
00007fff00007fff00007fff04d9023309b2023301dfff4e063900230400
0052063900230400005206390023040000520639ff9e0400fe9806390023
040000520639002304000052063900230400005206390023040000520639
002304000052063900230400005206390023040000520639002304000052
04e3003203d5003304e3003203d5003304e3003203d5003304e3003203d5
003304e3fee703d5fe6a04e3003203d5003304e3003203d5003304e30032
03d5003302b2002f024c002902b2002f0254002d064a0031045e0044064a
0031045e0044064a0031045e0044064affad045efeb7064a0031045e0044
064a0031045e0044064a0031045e00440639001e04d3001a0639001e04d3
001a05560017047300100556001704730010055600170473001005560017
047300100200fff50200008b0200001802390090038d005c080003890800
03c5040001c5040001c4040001c402aafdb102aafdb002aafdc502aafdb3
02aafdbd02aafd6b0449003f0000000006000000061b004002b2003305cf
003304e3002504e3002506a600310558002a062a002704e7002704970081
0635003304e3005404730047047300220254002c02b9002c04a8000c0329
0036029c002e048b0041086700400b07002e08f9003c0810005007c20050
0630005005350031075c0031076600310535003107bc00310726003109b1
00310753003109de003107060031099100310495003102aa003104bc0031
04c30031051b0031072d00310733003104e9003106f800310725003106ec
00310809004a0614004a04f9002e061b002e02f5000f02aa004702b0fff3
023d002702f700310275002701bb002502bd003102f5000f018a0022015b
ffee02c5000f018a0022046d001f02f5000f02aa002202fc001e02d20022
020c00280230003401b6002302f5000502be000503eb0005028a000f02bc
000f0255000603d0002e042f0022027500270400003e02e6fff004000022
0400002503d9fff90400002004000046038d004004000040040000340400
002804000082040000290400001304000007040000110400003e04000047
040000400400003a028f002d028f000e028f001b028f0032028f0041028f
002f028f0027028f002d028f0054028f001c028f001e028f000e028f001b
028f0032028f0041028f002f028f0027028f001f028f001f028f001f01c2
005001c20025028f001f028f001f028f001f01c2005001c2002501230046
0133fffc028f003c028f005204100054067400540674001c067400540674
001c0674001e0674000e067400540674001b067400540674001e0674001b
06740041040000be040000be040000be040000be040000be040000be0400
00be040000be040000be040000be040000be040000be040000be040000be
040000be040000be0400000004e5ffe90625000b0473002e0400001e0400
001e0400001e0400001e0400001e0400001e0400001e0400ffec04000039
040000bf0437fff2058e0038058e00450400ffdf0400001805280033062e
005d08ee00290400008903cd008d038d005a0239008c0400000003660051
0593002906ac001601c00089035500a203d5006304d5009202d6008302d6
008304d500b202d600700800000004d901a2040000000800000004000000
0800000002ab000002000000015500000400000002000000019a000000ab
0000000000000000ff8602aa00dd02aa007402aa007402aa000802aaffee
02aafff802aa000002aa002602aa00850000ff7b02aa007e02aa00e502aa
ffc402aa001102aa007802aa007502aa007402aa001002aa001d02aafffa
02aa000c02aa003c02aa00940000ff8702aa008702aa00e802aaffc702aa
002402aa0082063900230639002304e8003304e3001c0441002904410029
0441000a05f2ffee04e3004904e3004904e3004904e3004907dc001c07dc
001c07dc001c04db008204db008206ac003306ac003306ac003306ac0033
05cf003305cf003305cf003305cf0033072a000005d5ffe40791002606a8
003306a80033064a00300681003304d5003305ac004705ac004704e70027
05640018056400180560003305600033056000330560003305f800300556
001f0556001f068100330612000e0626000e0612000e08a4004e08a4004e
0643000006fb003304e8003305920030063e005e08bd00330558ffef0618
000007b00033067d004c064a003005c700150424003302b2003302b2fff8
02aaffe8043300400593003005ff00330721000006da0000068100330842
000008f000330400005204000052047a004403c6003d0334004f0334004f
0334004f046a000003d5003303d5003303d5003303d500330696002e0696
002e0696002e0449003f0449003f0449003f038b005d038b005d050e004f
050e004f050e004f050e004f0431004f0431004f046b004f046b004f04ef
00000497000005df005604ab002f04ab002f047a00440516004f04cf0041
038d0050038d005003c600260435fff30435fff304b8001e04b8001e0435
fff30435fff3061a004403eb001203eb00120516004f0449000004490000
044900000732004f0732004f049c000005cd004f03d1004f0430006003e7
005b0681004f044d000004ba0037043000440364004a0254002b0254ffc4
01dfffc0060800000630002f056f0043056f00370516004f049200120492
001205ec0053047a0044047a00440485001e0324004f08e000f902f5005d
02f5005d0627002304db001c048b00330583003804d80049055600240696
00330658003002a9003305c6003306080023078f002606a60030058b0056
065800300681003304cc0033057c005d04e1002705de000605f80030054f
001f06f60025062700230627002306270023062700230627000906270023
062700230627002306270023082f0023082f0023082f0023082f0009082f
0023082f0023082f0023082f002306270023062700230627002306270023
082f00230565001005e10017060700170680000106b9000106b9000106cd
0001058c000105f000010729000b07ac001707d700170894000108bc0017
08d0001708e6001708ec000108ec000109ed00170a1800170ad500010afd
00170b1100170b2700170b2d00010b2d00010770000107de000108e90033
0345000b02a9003303b6001703e10017049e000104c6001704da001704f0
001704f6000104f6000102a9003302a90029037a000103e8000106f30042
06f3001706f3001708440001086c001707a2000107ce00170720001706c6
000105c3000106ad004205de000606ce0017081c000107ba001707880001
05de000605de000606d0000106b300010711004106ff001606ff00160850
00000878001607ae000007da001607c7000007c70000096f0016096f0016
0ac000000ae800160a1e00000a4a00160a3700000a370000072c001606d2
0000090b0046051e004404ab009204c1ffee042c004403da008e03fe0052
04b4fff80501008d026700c00490001904c100000481fffd044b007c0462
0044045e004403db004004d6004403df00410486001b05a90044049d0038
0587000a05f20035044f00400509001c05aa004406090044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e0044051e0044051e0044051e0044051e0044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e004403da008e03da008e03da008e03da008e03da008e03da
008e03da008e03da008e03da008e04b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4
fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff8026700c0026700130267
00c002670085026700c0026700b5026700580267000d0267005702670034
026700080267002a026700240267ffd30267ffd30267ffd3026700330267
fffe0267ffe4046200440462004404620044046200440462004404620044
046200440462004404620044045e0044045e00440486001b0486001b0486
001b0486001b0486001b0486001b0486001b0486001b0486001b0486001b
0486001b0486001b0486001b0486001b0486001b0486001b0486001b0486
001b0486001b05f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f2003505f2003505f2003505f2003505f2003505f2
003505f2003505f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f20035055e004305720067071c0025050800460200
0014020000140200004b02aa012202aa011302aafff402aa000b02aa010a
02aa00f702aa010a02aa00fa02aa011002aa008502aa007802aa005502aa
00b002aa001c02aa002902aa005c02aa004502aafff402aafff402aafff4
02aa006402aa002506660030049c0044069e001e052000100400008b0000
ff930000ff560000ff6a0000fea40000ff77048a001903c6003d041b0043
049c004f03c6003c035b00440431002d04ab002f028400620284000b0431
004f03c6005305df005605080044049d005603c60054049d00560431004c
035b005103c60026049d00370464000b05df001903c6fff703c6fff803c6
0014048a0019048a0019048a0019048a0019048a0019048a0019048a0019
048a0019048a0019048a001905df000a05df000a041b0043041b0043041b
0043041b0043041b0043049c004f049c004f049c004f03c6003c03c6003c
03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c0431
002d0431002d0431002d0431002d0431002d04ab002f04ab002f02840062
0284fff30284fff20284000b0284ffe40284002302840062028400120284
00620284fff20431004f0431004f03c6005303c6005303c6005303c60053
03c6005303c600530508004405080044050800440508004405080044049d
0056049d0056049d0056049d0056049d0056049d0056049d0056049d0056
049d0056049d0056064a00470431004c0431004c0431004c0431004c035b
0051035b0051035b0051035b0051035b005103c6002603c6002604e20026
03c6002603c60026049d0037049d0037049d0037049d0037049d0037049d
0037049d0037049d0037049d0037049d003705df001905df001905df0019
05df001903c6fff803c6fff803c6fff803c6fff803c6001403c6001403c6
001403c6005404a40062026a0030018600660463002e02aa008706660030
06660030049c004406660030049c004406660030049c004406660030049c
0044069e001e05200010069e001e05200010069e001e05200010069e001e
05200010069e001e05200010058a003d069b0046052d00bb056b00820000
0000000000840000008400000084000000840000011000000198000002d8
000004f00000069c0000094800000994000009fc00000a6800000b100000
0b7800000bd400000c2800000c6800000cd400000e4400000f18000010a8
0000123c000013b8000014f800001654000017880000191c00001a3c0000
1aa800001b3000001b9000001be000001c4400001dec00001f74000020b0
0000225800002378000024d40000267c000027ec0000296400002b080000
2bc800002c8400002e7000002f6c0000313c000032cc0000342400003570
000037700000396400003b8400003c9c00003df000003f1c000040f00000
42ec00004440000045a000004668000046cc00004790000047f800004824
00004884000049f800004b9000004cac00004e5000004f700000509c0000
52f0000054a400005598000056b0000058e8000059c800005c3c00005dbc
00005ed400006088000062180000634c0000650400006620000068100000
694c00006b3000006ce800006ebc00006fdc000070b0000070f8000071dc
0000726c0000729c000072d4000074080000744c00007464000074bc0000
74d4000074f80000751c0000754000007580000075a4000075e80000771c
00007744000077680000778c000077d4000077f80000781c000078400000
787400007898000078c0000078e4000079080000795800007988000079ac
000079d000007a0000007a4000007b3800007be800007ce000007e440000
7ff0000080740000816c0000834c0000852000008698000088d400008934
000089b800008a9000008d7c00008f2000008ff80000908c000091040000
918000009338000094680000952000009638000097840000985c00009908
00009a7400009b0000009cb800009e7400009fdc0000a0f80000a1880000
a1c40000a2380000a2dc0000a3cc0000a4a80000a59c0000a6700000a70c
0000a70c0000a7300000a7680000a79c0000aa1c0000ab7c0000abac0000
abd80000ac780000ad180000ad740000add00000ae640000aedc0000af0c
0000af500000af8c0000b0740000b0f80000b16c0000b3400000b5180000
b6880000b6c80000b7280000b7cc0000b9d40000ba040000ba480000ba60
0000bab80000baf00000bb380000bb7c0000bc0c0000bc440000bc880000
bccc0000bd980000bdd00000be140000be580000be9c0000bf800000c014
0000c0b80000c0f80000c1680000c1c00000c22c0000c2bc0000c34c0000
c3d80000c4500000c5980000c6c40000c7080000c7480000c7800000c7c4
0000c8340000c9c00000cb1c0000cb600000cb880000ccd40000ce8c0000
cecc0000cfa80000d0500000d1040000d1ec0000d3640000d4f00000d6bc
0000d8180000d8680000d8a80000d9040000dafc0000dc8c0000dcd00000
dd080000dd480000dd840000df240000df3c0000df540000df6c0000df84
0000df9c0000dfb40000dfcc0000dfe40000dffc0000e0140000e02c0000
e0440000e05c0000e0740000e08c0000e0a40000e0bc0000e0d40000e0ec
0000e1040000e11c0000e1340000e14c0000e1640000e17c0000e1940000
e1ac0000e1c40000e1dc0000e1f40000e20c0000e2240000e23c0000e254
0000e26c0000e2840000e29c0000e2b40000e2cc0000e2e40000e2fc0000
e3140000e4200000e4380000e4500000e4680000e4800000e4980000e4b0
0000e4c80000e4e00000e4f80000e5100000e5280000e5400000e5580000
e5700000e5880000e5a00000e5b80000e5d00000e5e80000e6000000e618
0000e6300000e6480000e6600000e6780000e6900000e6a80000e6c00000
e6d80000e6f00000e7080000e7200000e7380000e7500000e7680000e780
0000e7980000e7b00000e7c80000e7e00000e7f80000e8100000e8280000
e8400000e8580000e8700000e8880000e8a00000e8b80000e8d00000e8e8
0000e9000000e9180000e9300000e9480000e9600000e9780000e9900000
e9a80000e9c00000e9d80000e9f00000ea080000eb780000ebc00000ec00
0000ec380000ecbc0000ece80000ed340000edc00000eedc0000eff00000
f05c0000f0940000f0dc0000f19c0000f23c0000f26c0000f4240000f61c
0000f6340000f6500000f6680000f6800000f6980000f6b00000f6c80000
f6e00000f6f80000f7100000f7400000f8a40000f9a00000fbc40000fdd4
0000fec400010030000102f400010480000105cc000106c4000108100001
0858000108a000010944000109e400010a1000010a5000010a9800010ac0
00010b0000010b4800010bb400010c0000010c4800010c9000010cd80001
0d1800010db800010e4400010f6000011074000110ac000110e400011130
0001117c000112000001122c000112d00001137000011414000114140001
14140001141400011444000114800001163c00011654000116640001167c
0001168c000116a4000116b4000116cc000116dc000116f4000117040001
171c0001172c00011744000117440001175c000117740001178400011794
000117ac000117cc000117e4000117f40001180c0001182c000118540001
186c0001187c00011894000118b4000118c4000118d4000118e4000118f4
000119040001191c0001193c00011954000119640001197c0001199c0001
19c4000119dc000119ec00011a0400011a2400011a3400011a4400011a54
00011a6400011a7c00011a9400011aa400011ac400011ae400011b040001
1b1c00011b3400011b4c00011b6400011b7c00011b9400011bac00011bc4
00011bdc00011bf400011c0c00011c2400011c3c00011c5400011c740001
1c9400011cb400011cd400011cf400011d1400011d3400011d5400011d74
00011d9400011db400011dd400011dec00011e0400011e1c00011e340001
1e4c00011e6400011e7c00011e9400011eb400011ed400011eec00011f04
00011f1c00011f3400011f4c00011f6400011f8400011fa400011fbc0001
1fd400011fec000120040001201c000120340001204c000120640001207c
00012094000120ac000120c4000120dc000120f40001210c000121240001
213c000121540001216c000121840001219c000121b4000121cc000121e4
000121fc000122140001222c000122440001225c000122740001228c0001
22a4000122bc000122d4000122f40001231400012334000123540001236c
00012384000123a4000123c4000123dc000123f400012404000124140001
242c000124440001245c000124740001248c000124a4000124bc000124d4
000124ec000125040001251c000125340001254c000125640001257c0001
2594000125ac000125c4000125dc000125f4000126140001263400012654
000126740001268c000126a4000126bc000126d4000126f4000127140001
272c000127440001275c000127740001278c000127a4000127bc000127d4
000127ec000128040001281c000128340001284c000128640001287c0001
2894000128b4000128d4000128ec000129040001291c000129340001294c
000129640001297c00012994000129b4000129d4000129ec00012a040001
2a1c00012a3400012a4c00012a6400012a7c00012a9400012aac00012ac4
00012adc00012af400012b0c00012b2400012b3c00012b5400012b6c0001
2b8400012ba400012bc400012be400012c0400012c2400012c4400012c64
00012c8400012c9c00012cb400012ccc00012ce400012cfc00012d140001
2d2c00012d4400012d6400012d8400012d9c00012db400012dcc00012de4
00012dfc00012e1400012e3400012e5400012e7400012e9400012eb40001
2ed400012eec00012f0400012f1c00012f3400012f4c00012f6400012f7c
00012f9400012fac00012fc400012fdc00012ff40001300c000130240001
30440001306400013084000130a4000130bc000130d4000130ec00013104
0001311c000131340001314c000131640001317c00013194000131ac0001
31c4000131dc000131f40001320c000132240001323c000132540001326c
000132840001329c000132b4000132cc000132e4000132fc000133140001
332c000133440001335c000133740001338c000133ac000133cc000133ec
0001340c0001341c0001342c000134440001345c0001346c0001347c0001
348c000134a4000134b4000134cc000134dc000134fc0001351c0001353c
0001355c0001357c00013594000135b4000135d4000135ec000136040001
361c00013700000138e8000139000001391800013a8400013c1800013db8
00013e7c00013f1000013f2000013f3000013f4000013f5000013f680001
3f8000013f9800013fb000013fc800013fe0000140000001402000014040
0001406000014080000140a0000140c0000140e000014100000141200001
41400001416000014180000141a0000141c0000141e00001420000014220
00014240000142600001427800014290000142a8000142c0000142d80001
42f00001431000014330000143500001437000014390000143b0000143d0
000143f00001441000014430000144480001446000014478000144900001
44a8000144c0000144d8000144f000014510000145300001455000014570
00014590000145b0000145d0000145f00001461000014630000146480001
46600001467800014690000146a8000146c0000146d8000146f000014708
000147200001473800014750000147600001477000014780000147900001
47a00001489c000148d000014904000149380001496c000149c800014a24
00014af000014bc400014cd000014dd00001503800015038000150380001
51c800015344000155e4000157b80001595000015b4c00015ddc00015f88
0001612c00016264000163d0000165b80001680000016a2c00016b9c0001
6ce800016f040001709c00017298000173ac0001763c000178ec00017afc
00017d2c00017f58000181b0000183a800018694000189a800018bc40001
8e70000190d800019420000196bc00019a3800019cac0001a0600001a1fc
0001a2ec0001a4880001a6200001a6380001a8d00001a8e80001aafc0001
ad1c0001af740001b1a80001b4f40001b7f00001b9b80001bbbc0001bbd0
0001bd3c0001be940001bf580001c0e80001c1c40001c2940001c4880001
c5d80001c6bc0001c7680001c87c0001c9480001cb480001ccc80001cde8
0001cf680001d0a80001d1a00001d3680001d4300001d56c0001d66c0001
d7640001d8400001d9080001d9e40001db840001dcd00001ddd80001df10
0001dfcc0001e0ec0001e26c0001e37c0001e5400001e6b00001e7540001
e91c0001ea600001eb880001ec900001ed9c0001eef00001f0c00001f1ec
0001f3440001f4000001f5c80001f71c0001f8400001f9780001fb340001
fc880001fd1c0001fe900001ffc40001ffd800020098000201a40002031c
0002033000020344000203580002036c0002038000020394000203fc0002
04280002046800020504000205a8000205bc000205d0000205e4000205f8
0002060c000206a0000206e0000208e000020a5800020b4400020dac0002
106000021334000216480002197400021ca800021ed000022200000224b4
000227c800022b8800022e1c00022f7c00023150000233280002356c0002
37200002391400023b0800023d6c00023fec00024264000244340002462c
0002484800024a8000024d1000024f0400024f2c00024f9c000251740002
531800025354000253a80002543c000254b80002552c00025574000255b8
0002573000025a4c00025c8c00025dd000025f7400026108000261fc0002
644c000265b40002694c00026cbc00026d2800026ee000026fd800027018
00027054000271b4000273a8000274500002749c000274b4000275b80002
762800027654000276c0000277080002781c00027c6400027cc400027cec
00027d1400027d1400027d1400027d1400027d1400027d1400027d140002
7d1400027d1400027d1400027d1400027dbc00027e5c00027e9c00027edc
00027f2000028038000280a8000280f00002814400028264000283180002
83e00002846c000284cc000284f800028594000285cc000286080002864c
00028764000287f40002883c0002888c000289ac00028a5400028b2c0002
8bb800028c1400028c4000028ce000028dec00028f34000290c800029304
000293d8000293f000029504000296500002981c00029acc00029cd00002
9ef80002a1500002a3580002a3700002a4fc0002a7000002a8c00002a8d8
0002a8f00002a9080002aab00002aac80002ac9c0002ae600002b0600002
b1d40002b3ac0002b6040002b8300002b9780002bb6c0002bd140002bdf4
0002bfcc0002c0cc0002c20c0002c3780002c4780002c4900002c4a80002
c4c00002c7140002c8100002c9040002cab00002cc1c0002ce000002cf98
0002d2500002d4d80002d65c0002d9000002da940002dbf40002dcb00002
de900002e04c0002e2c80002e59c0002e7480002e8fc0002ea000002eb20
0002ec2c0002ee340002ef080002f0540002f1580002f2b40002f4c00002
f6800002f8380002fa4c0002fd300002fea0000300540003017400030184
0003024c000302640003039c00030498000305d0000307c00003091c0003
0ab400030c5000030dd400030dec00031054000312bc000315240003168c
00031878000319b0000319c8000319e0000319f800031b0c00031b240003
1c8000031ddc00031f680003206000032070000320800003229c000323c4
000324f0000326a400032778000329380003294800032a3000032a480003
2b8c00032d1400032dfc00032e1400032fc4000330e00003322000033378
000335040003367800033834000339a400033b4000033cf800033f140003
408400034190000342f00003448400034620000348600003496c00034abc
00034b7000034d0c00034dbc00034fb80003527c00035420000356100003
577c00035998000359b000035bec00035d7c00035f2800036020000360e4
000363e4000364300003647c00036584000367d0000368a4000369140003
6a9c00036b7400036d6c00036f2400036fe8000371800003728c0003747c
00037674000377f00003793800037af000037c8800037d5c00037e600003
7f58000381ac000382b00003843c000384540003846c000384840003849c
000384b4000384cc000384e4000384fc0003851400038534000385540003
857400038594000385b4000385d4000385f4000386140003862c00038644
0003865c000386740003868c000386a8000386c4000386e0000386f80003
87100003872800038744000387600003877c00038798000387b4000387d0
000387e80003880000038818000388340003884c00038864000388880003
88ac000388cc000388ec0003890c0003893000038950000389700003898c
000389a8000389c0000389dc00038bb400038bd000038bec00038c040003
8c1c00038c3400038c5000038c6800038c8000038c9800038cb000038ccc
00038ce800038d0400038d2000038d3c00038d5400038d6c00038d840003
8da000038db800038dd000038dec00038e0800038e2000038e3c00038e54
00038e7000038e8800038ea000038eb800038ed400038ef0000390e40003
92e00003951c0003976c000399bc00039c0c00039e5c0003a0f80003a36c
0003a5e80003a8a40003ab780003ae480003b11c0003b3ec0003b7080003
b9fc0003bbf80003bdec0003c0200003c1280003c2f40003c3b80003c508
0003c60c0003c7f80003c9340003c9f80003ca880003cb740003cc040003
ccec0003cf140003d0440003d1b40003d2980003d3e00003d4f80003d664
0003d8640003d93c0003db0c0003dcd00003de600003e0080003e1e40003
e3940003e3ac0003e3c40003e3dc0003e3f40003e40c0003e4240003e43c
0003e4540003e46c0003e4840003e49c0003e4bc0003e4dc0003e4fc0003
e51c0003e53c0003e55c0003e57c0003e59c0003e5b40003e5cc0003e5ec
0003e6040003e6240003e63c0003e65c0003e6740003e68c0003e6a40003
e6bc0003e6d40003e6ec0003e7040003e71c0003e7340003e74c0003e764
0003e77c0003e7940003e7ac0003e7c40003e7dc0003e7f40003e80c0003
e8240003e83c0003e85c0003e87c0003e89c0003e8bc0003e8dc0003e8fc
0003e91c0003e93c0003e95c0003e9740003e9940003e9ac0003e9cc0003
e9e40003eb780003eb900003eba80003ebc00003ebd80003ebf00003ec08
0003ec200003ec380003ec500003ec680003ec800003ec980003ecb00003
ecc80003ece00003ecf80003ed100003ed280003ed400003ed580003ed70
0003ed880003eda00003edb80003edd00003ede80003ee000003ee180003
ee300003ee480003ee600003ee780003ee900003eea80003eec00003eed8
0003eef00003ef080003ef200003ef380003ef500003ef680003ef800003
ef980003efb00003efc80003efe00003eff80003f0100003f0280003f040
0003f0580003f0700003f0880003f0a00003f0b80003f0d00003f0e80003
f1000003f1200003f1400003f1600003f1800003f1a00003f1c00003f1e0
0003f2000003f2200003f2380003f2580003f2780003f3dc0003f4d00003
f69c0003f8240003f8800003f8b80003f8f40003f9280003f95c0003fa94
0003fc000003fc940003fd3c0003fdd00003fe6c0003fea00003fed00003
ff8400040038000400ec000401a00004020c000402f8000403c8000404e4
0004062400040764000407b0000407dc0004097c00040b0800040c9c0004
0e4000041018000410a4000410e400041120000411b00004127c000413b0
000415bc0004168c000417f00004198c00041ad000041c0400041db80004
1e5800041efc00042020000420f40004221800042390000424b800042608
000427b40004293c00042aa400042b8400042c7000042d2400042e380004
2f4c00043018000430f00004310800043120000431380004315000043168
0004318000043198000431b8000431d0000433a8000436a0000436b80004
36d0000436e800043700000438d0000438e80004390000043aa000043ab0
00043ac800043ae000043af800043b1000043b2800043b4000043b580004
3b7000043d9000043da800043dc000043dd800043df000043e0800043e20
00044090000440a8000440c0000440d8000440f000044108000441200004
41380004415000044288000442a0000442b8000442d0000442e800044300
0004431800044330000443480004447000044488000444a0000444b80004
44d0000444e8000445000004451800044530000445480004456000044578
00044590000445a8000447240004473c0004498c000449a4000449bc0004
49d4000449ec00044a0400044a1c00044a3400044a4c00044c3000044c48
00044c6000044c7800044c9000044dc800044de000044df800044e100004
4e2800044e4000044e5800044e7000044e8800044ea00004502c00045044
0004505c000450740004508c000450a4000450bc000450d4000450ec0004
51040004511c0004513400045288000452a0000453e4000454ac0004573c
000457f40004580c000458240004583c000458540004586c000458840004
589c000458b4000458cc000458e4000458fc000459140004592c00045944
0004595c000459740004598c000459a4000459bc00045c2000045df80004
5f5c0004607c0001000006dc00b4001000c2000700020010001300460000
07e806fd000400010000006e052e0001000000000000006c000000010000
000000010008006c0001000000000002000700740001000000000003001d
007b0001000000000004000800980001000000000005000700a000010000
00000006000e00a70001000000000007003100b500010000000001020009
00e60001000000000103001000ef000100000000011f001400ff00010000
000001230015011300010000000001280017012800010000000100020008
013f0001000000010007002e014700010000000101020009017500010000
000101030013017e000100000001011f001a019100010000000101230021
01ab0001000000020002000801cc0001000000020007003b01d400010000
000201020009020f000100000002010300170218000100000002011f0013
022f0001000000020123001f024200010000000300020007026100010000
00030007002f02680001000000030102000802970001000000030103000f
029f000100000003011f001502ae0001000000030123002002c300010000
00040002000702e30001000000040007003902ea00010000000401020009
032300010000000401030011032c000100000004011f0020033d00010000
000401230018035d00010000000500020006037500010000000500070035
037b0001000000050102000903b00001000000050103001103b900010000
0005011f001003ca0001000000050123001803da00010000000600020007
03f20001000000060007002f03f900010000000601020009042800010000
0006010300110431000100000006011f002104420001000000060123001d
04630001000000070002000a04800001000000070007003b048a00010000
00070102000904c50001000000070103001504ce000100000007011f0016
04e30001000000070123001f04f900010000000800020006051800010000
000801020009051e000100000008010300100527000100000008011f0021
05370001000000080123001d055800010000000900020006057500010000
000900070033057b0001000000090102000905ae00010000000901030011
05b7000100000009011f001005c80001000000090123001705d800010000
000d0002000805ef00010000000d0007003305f700010000000d0102000a
062a00010000000d01030015063400010000000d011f0011064900010000
000d01230015065a00010000001200020008066f0001000000120007002e
067700010001000b0002000a06a500010001000b0102000806af00010001
000b0103001006b700010001000b011f001406c700010001000b0123001e
06db0001000200130002000606f90001000200130102000a06ff00010002
0013010300080709000100020013011f000c07110001000200130123000a
071d00010003001700020004072700010003001701020004072b00010003
001701030009072f000100030017011f0009073800010003001701230018
074100010004000c00000047075900010004000c0002000407a000010004
000c0007002b07a400010004001f0000005707cf00010004001f0007002e
082600010005000a00000047085400010005000a00020004089b00010005
000a00070026089f0001001900210002000408c500010019002101020004
08c90001001900210103000a08cd000100190021011f000808d700010019
00210123000c08df000300010409000000d808eb00030001040900010010
09c30003000104090002000e09d30003000104090003003a09e100030001
0409000400100a1b0003000104090005000e0a2b0003000104090006001c
0a39000300010409000700620a55436f7079726967687420a92031393931
2d39392c2032303036204170706c6520436f6d70757465722c20496e632e
20436f7079726967687420a920313939312d3932205479706520536f6c75
74696f6e732c20496e632e20416c6c207269676874732072657365727665
642e50616c6174696e6f526567756c617250616c6174696e6f3b20372e30
643465363b20323031312d30342d323750616c6174696e6f372e30643465
3650616c6174696e6f2d526f6d616e50616c6174696e6f20697320612072
6567697374657265642074726164656d61726b206f66204c696e6f747970
652041474c6967617475726573436f6d6d6f6e204c696761747572657343
686172616374657220416c7465726e61746573436f6d6d61204469616372
6974696320466f726d73436564696c6c612044696163726974696320466f
726d735374616e6461726450616c6174696e6f2065737420756e65206d61
7271756520648e706f738e65206465204c696e6f747970652041474c6967
6174757265734c696761747572657320636f7572616e746573416c746572
6e617469766573206465206361726163748f726573466f726d6573206469
61637269746971756573206465206c612076697267756c655374616e6461
726450616c6174696e6f206973742065696e2065696e676574726167656e
657320576172656e7a65696368656e20646572204c696e6f747970652041
474c696761747572656e476562728a7563686c69636865204c6967617475
72656e416c7465726e6174697665205a65696368656e4b6f6d6d6120616c
73206469616b726974697363686573205a65696368656e4e6f726d616c65
50616c6174696e6f208f20756e206d61726368696f207265676973747261
746f206469204c696e6f747970652041474c656761747572654c65676174
75726520636f6d756e6943617261747465726920616c7465726e61746976
69466f726d6520646961637269746963686520706572206c652076697267
6f6c654e6f726d61616c50616c6174696e6f2069732065656e2067657265
6769737472656572642068616e64656c736d65726b2076616e204c696e6f
747970652041474c696761747572656e4e6f726d616c65206c6967617475
72656e416c7465726e6174696576652077656572676176652076616e2074
656b656e734469616b7269746973636865206b6f6d6d6174656b656e734e
6f726d616c50616c6174696e6f208a722065747420726567697374726572
617420766172756d8a726b6520669a72204c696e6f747970652041474c69
6761747572657256616e6c696761206c69676174757265725465636b656e
616c7465726e617469764b6f6d6d61206469616b72697469736b6120666f
726d6572526567756c617250616c6174696e6f20657320756e61206d6172
63612072656769737472616461206465204c696e6f747970652041474c69
676164757261734c696761647572617320636f6d756e6573466f726d6173
20616c7465726e6174697661732064652063617261637465726573466f72
6d6173206469616372927469636173206465206c6120636f6d61416c6d69
6e64656c696750616c6174696e6f20657220657420726567697374726572
657420766172656dbe726b652074696c68bf72656e6465204c696e6f7479
70652041474c6967617475726572416c6d696e64656c696765206c696761
7475726572416c7465726e617469766520736b726966747465676e4b6f6d
6d61206d6564206469616b72697469736b207564666f726d6e696e674e6f
726d616c4c69676164757261734c696761647572617320436f6d756e7346
6f726d617320416c7465726e617469766173206465204361726163746572
6573466f726d61732044696163729274696361732064612056927267756c
6156616e6c696750616c6174696e6f206572206574207265676973747265
727420766172656d65726b6520666f72204c696e6f747970652041474c69
6761747572657256616e6c696765206c69676174757265725465676e616c
7465726e6174697665724b6f6d6d616469616b72697469736b6520666f72
6d65724e6f726d61616c6950616c6174696e6f206f6e204c696e6f747970
652041473a6e2072656b69737465729a697479207461766172616d65726b
6b694c696761747575726974546176616c6c69736574206c696761747575
7269744d65726b6b6976616968746f6568646f74436f6d6d612044696163
726974696320466f726d735374616e6461726450616c6174696e6f206573
7420756e65206d617271756520648e706f738e65206465204c696e6f7479
7065204147838c834d83858389815b838a834b8360838388ea94ca934982
c8838a834b8360838395b68e9a82cc836f838a8347815b83568387839383
4a8393837d835f83438341834e838a83658342834a838b837d815b834ebc
d0b7c7c5e9b373a672bfefb6b5b6b0b160a5ceb373a672a672a4b8b4c0a5
cea672a7ceb372c249bcd0adb5b2c5c0cfb9ddc7d5c0dac0cfb9dd20c7d5
c0dab9aec0da20b4ebc4a1c4deb8b620b9dfc0bd20b1b8bab020c7a5bdc3
20c7fcbdc428632920313939312d39392c2032303036204170706c652043
6f6d70757465722c20496e632e2028632920313939312d39322054797065
20536f6c7574696f6e732c20496e632ed9c7cfea9850616c6174696e6f8c
a0e7eaa0e5c7d1e3c9a0e5d3cce4c9a0caced5a0984c696e6f7479706520
41478c28436f707972696768742920313939312d39392c20323030362041
70706c6520436f6d70757465722c20496e632e2028436f70797269676874
2920313939312d3932205479706520536f6c7574696f6e732c20496e632e
50616c6174696e6fa0d9e4c7e5caa0caccc7d1e9a0cbc8caa0d4cfe7eca0
d4d1e3ca204c696e6f7479706520414728632920313939312d39392c2032
303036204170706c6520436f6d70757465722c20496e632e202863292031
3939312d3932205479706520536f6c7574696f6e732c20496e632ef8e2e9
ec50616c6174696e6f20e4e9f0e5a0f1e9eeefa0f8f9e5eda0f9ec204c69
6e6f74797065204147b3a3b9e6c1acd7d6b9abb9b2b5c4c1acd7d6d7d6b7
fbb1b8d1a1b6bab5e3d6d8d2f4d0cecabd0043006f007000790072006900
6700680074002000a900200031003900390031002d00390039002c002000
320030003000360020004100700070006c006500200043006f006d007000
75007400650072002c00200049006e0063002e00200043006f0070007900
720069006700680074002000a900200031003900390031002d0039003200
20005400790070006500200053006f006c007500740069006f006e007300
2c00200049006e0063002e00200041006c006c0020007200690067006800
740073002000720065007300650072007600650064002e00500061006c00
6100740069006e006f0052006500670075006c0061007200500061006c00
6100740069006e006f003b00200037002e00300064003400650036003b00
200032003000310031002d00300034002d0032003700500061006c006100
740069006e006f0037002e0030006400340065003600500061006c006100
740069006e006f002d0052006f006d0061006e00500061006c0061007400
69006e006f00200069007300200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f00660020004c0069006e006f0074007900700065002000410047000000
b8003c2bb800322bb802bab26e231fb802c0b273321fb802bfb26e241fbd
02b502b30014001f02b402b3b2141fdfb802b3b4010402131fb802a4b7d2
1f1fc360311f00ba01bc0001028eb27c181f4109029002850018001f028f
02840018001f028ab2cb181fb80288b2a6181fb802864039761a1f2fa63f
a64fa65fa66fa67fa68fa69fa6afa6bfa60a3f76af76bf76c0f1041f7c2f
7c3f7c03ff7c012f7c3f7c4f7c5f7c5fcba0cb0610411c02850001000f02
84001f0284004f02850050028500cf0284000500000285004f0284006f02
84008f02850090028500a002850006009d0155b2071fb1b80184b2031f67
b801afb2081fc1bc0123000d001f0142017bb6051f95d7071fd7bc01b200
4f001f010b0108b20d1fd7bc01b2004f001f013501b2b40d1f110840411d
0233021200d9000d020100d9000d01e500d9000d01a900d9000d019e00d9
000d017000d9000d016700d9000d015d00d9000d015b00d9000d0139400b
d90dc4d90d8cd90d78d90db8012f400b5d0def5d0dc65d0d795d0d411302
0c00a2000d01bd00a2000d01a500a2000d018600a2000d016800a2000d01
3000a2000d011c401aa20de9a20dc8a20d70a20d69a20de35a0de15a0d63
5a0d575a0db8012cb20f0009410901f700600801001f01f30089019a001f
01f2b2d2891fbc01ee0084019a001f01a2b286721fb8019fb286cd1f4115
019d00860801001f019c0086019a001f019b00600401001f019a00600801
001f0197007a0401001f0193b284891fbc018d00840125001f018cb284e4
1fb8018ab277cd1fbc018400640125001f0161b2d2891fb8015fb284ab1f
b8015eb284cd1fbc015a0068019a001f0138b2862d1f41110134008902ab
001f012d006802ab001f012b00640156001f012a00640201001f011bb286
cd1fb80118400977bb1ffe86791ffcd2b80401b21ffbd2b80125b21ff884
b80156b61ff677241ff568b80401b21ff464b80156b21fec89b80201400b
1feb84621fea84891fe777b80801b21fe464b80401400f1fd1d2e41fd084
891fcf849e1fc577b8019a40171fbd86811fbc779e1fb864931fb764811f
aa84621fa864b80801b21fa1d2b80401b21f9e68b80201b21f92d2b80201
b61f8b84cd1f8764b80125b21f7f64b80801400b1f7e86431f7d84931f75
84b80801b21f7477b8019ab21f6f68b80401b41fd260191fb80191b26018
1fb8028b401760291f6857281f86603c1f7a6e2f1f6d64e41f5e84931fb8
02874010a92d1fa977281f9f77af77bf7703896eb8010040271f6e603b1f
d06001606e1e1f306e406e506e03606e706e806e906e0455180918099f02
9f030290be02130007009001ed00070090013d40430790e60790da079090
07908f07908207906a07906207905f07905c072408220820081e081c081a
08180816081408120810080e080c080a080808060804080208000814b8ff
e04032000001001416000001001606100000010006040000010004100000
01001002000001000200000001000002010802004a0030410b0233004002
33005002330003008002330090023300020173744bb0c063004b6220b0fb
5323b80105515ab005234218b9000101ff858d16763f183f123e11394644
3e113946443e113946443e113946443e11394660443e113946443e113946
60442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b73014b5079bc001f01980007001f0194b6071fe8071f8d072b2b
2b2b4b5379bc00900198000700900194b60790e807908d072b2b2b2b181d
b0964b5358b0aa1d59b0324b5358b0ff1d5974752b742b2b742b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00456953424b5058b1080042592b2b2b2b2b2b2b
2b2b2b73747573747573732b2b2b2b2b2b752b2b2b742b2b2b2b2b0000>
[16157 16169 16337 16321 16357 16245 16037 16229 16341 15637 15849 16061 16057
16149 16017 16357 16369 12173 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> Palatino-Roman AddT42Char 
1 8792 38 <00010047ffe4057305aa002600a040543220322142064208450b450c451c
421d422042215a065a075a0c6a19632063217b1974207421880b8b19881d
83219c189c199021cc0f1b780788068a080315941aa41ab41ac41ad41ae4
1a061a680d0300012622b80118401e040916f4154a15001f264001211180
009000c000e000f00005000a1f860ab90288002710f6ed10d45d3c1ad81a
39111239762f18ed003feddcd8393fed71c43130005d015d25070e012322
242e0235100021321e01170607060723272e01230e030710002132373637
05732775e0849bfef6c77e4201bd01815b9bdf19160b10063f010ac5be8e
c6976001017201308975504fb15d3b354e91b4d37e013f01a3153b053735
5570766260024595e5adfed1fe8f261a3800>Palatino-Roman AddT42Char 
1 9080 39 <0002001a000005dc058f0025003a00aa40279b309f31023d08347332a913
58161057110201030003267328a924582000082e86101a3f1a021ab80116
b73c26563456386000b8025c400a115d0a5603b32f070107b90286003b01
10fc5de4e4e4e4fde4e410f65ded003f3ce4fdf4c41112393fedd4e4fde4
31304379402c2931171f1c1b1d1b02062c2d2b2d2a2d03063026291e2e6a
0131182e6a012d1b286a001e1f2f19326a011817103c2b103c2b012b2b2b
2a2a8181015d333536373637363511342726272627262735163332243332
04121514020e02232227262322371633323e0335340224232207060f0111
13165a3a2706040706040a070e2168927056012952f5012ad062a8c0d3b8
3d68882a3d9d6e7a7ec189804585fef4ea7b7f030204030130211b4479ce
500198628453140d060e013f06087dfedad498fef6c7743b040465132c50
9cf382ba010b8e13317d91fe71feca470000>Palatino-Roman AddT42Char 
1 9852 41 <0001002c00000434058f0047009d40276a236a247a237a248c238c24fb23
fb24080b230b2402247f207f22562300210121210b180c7f0bb802894037
0947491373182d60395d015d3f5644564176480b0b1a11181aa92d582b48
2b3200135811a909580358060057010234573a573758353908003f3ce4ed
ed3fedc4e4e4fde4111239762f18e4fdc41112392f0110f4e4e4e4e4fd3c
e41076d418f4ed1112392f5d3ce4eded313000715d133516333224333216
1706072326272e012322070607060715163332373e013f01330717232726
272627262322071514171e02171526232207353e0137363736131134272e
022c986a4b01844449793119073f0910349965656c0602010470567f4c1d
110a083f07073f070b05081e39c9474b04021734767f7e71d976340a0c03
010303031733054d400608030455da794112110c362f1bcade030d051749
3ee4f5406d080e070d04ca88815f2411024008084002110f144d15010701
cf88825f23110000>Palatino-Roman AddT42Char 
1 11208 45 <0001ffe8fe7b027b058d00270042b559236a230208b80191401f26195713
57165818140229f1185d1e562160145d0021600f569f0c010c762810f45d
e4edc4e4fde4e4e4003f3cf4ededd4ed3130015d0337353427371e013332
3e01351134272e02273516333237150e01070607140311140e0223221803
03131d311e363a1a04021734769e8a92977634090d030438859c4914fe80
450e17300d15112b5bc2036588825f2311024006064002110f144d14fef8
fd32a4beab580000>Palatino-Roman AddT42Char 
1 12140 48 <00010026ffed0762058d004e00da408a2605263136316a0a6a0bf9310608
0907080b0b772c2d142c2c2d08050809050560363514363635090b08082d
2c31353236403121320b05323104362c29562c600f5d1f5d15561a564f18
0118f15039583677015d405d4b56465648764f3608352d2c0907073e0110
57005703580d58050b0f0301021e5724573d5741573f582158233e40031f
08323109003f3c3f173ce4e4edededed3f173cf4e4eded111217390110f4
e4e4e4e4fde410f45de4e4e4e4fde411121739101ac81a11123911123939
12113907102b100810c00710052b1008c0c03130015d1335163332371617
0901123716333237150e0107060706031114171e02171526232207353e01
373637361311010607060723262f01011114171e0217152707353e013736
3736131134272e0226696061595849017b01568c2f6a49439677330a0d02
01040403173377ca5343e57734090d020104fea7512e2143270d0b44fe22
0403173377f1f976340a0c03010303031733054d400404c897fcf402cb01
247c04044002110f144d14fef8fe3188815f2411024009094002110f144d
15010702defd2ea9674ba326179103e1fd4388815f241102400808400211
0f144d15010701cf88825f231100>Palatino-Roman AddT42Char 
1 15236 55 <0001002b000004bd058d0038006eb900030289b2005701b801bc400f2b56
3156255d2e601c561756205d1ab801bcb20e570db8028940240f0b01000b
500bcf0bdf0bff0b050b9a3a0d011731770b077303022057265723562521
08003f3ce4eded3fe43cfd3cdcc40110f65d71f4edf4e4e4e4fde4e4e4f4
ede43130132326271617163332373637060723272e02272e012b01061511
14171e02171526232205353e01373637341311342f012322070607060773
3e01096de9bd3f44f7b3520c04400808060b0b0eac327a0a0303173377b3
5a27feef7734090d0304020695814c18070b090442ef5c04060406040470
db6057180a03030a60a3fdb788815f2411024008084002110f144d150107
02472a32a90a030a115c>Palatino-Roman AddT42Char 
2 2408 68 <00020052ffef03cf03c20033004100ac4031060b0c404940692c7625792c
7637763884258a2c9b2ce425e426e4270e09251925021c562a1d416e180e
56201030100210b802854015434000217f018f019f010301013b7a202330
230223b8028e402a4200402a411d34212a1d2a0920052e152e252e352e45
2e05f42e012e830907175a1c1a58180a3e84200b003fed3fe43ced3fed5d
71111239392f1acd10c9101acc0110f65dfd392f5d1ac91a10fc5de4c4fd
3c3ce4313000715d13273635342736373633321617161507111417161716
1f011526232207370e0123222635343e0137362437362e012322060f0106
050e010706070615141633323637d93501017f513e4d729c261a0408060d
0a2041523e3c6405cc4c3a79872f42223a010580013072523b590a121b01
be82b82617111a524943834102ad0e17282a19531d1556503861b7fed630
150f07060206390707b09a27816b457243101b3e0f5f6a44200b243cbf16
361d1122323d4a534d4d0000>Palatino-Roman AddT42Char 
2 3188 70 <00010050ffe9036403ca0029009a40538b0c9a0c9a1b9a1c9224a324da0c
ea06ea0ce3230a352449094920422459095920502453256a056a068c1b8c
1c8424d606f9060f132501176416a4000013201330138013f0130513132b
07227a200730070207b8028e401c2a1613b81e830f07400029210109261a
262a263a264a26052683040b003fed713dd4181ad8391a3fedfdcc0110f6
5d18ed1112392f5d3cf4ed313001715d005d25070e01232226353436373e
01373633321716170e010723262726272e0123220e0115141e0133323637
036428458755d2f9433121b925445f5a482e2e0c0a08390606040e247143
547b4460a56633614c73432522fddd75ad2f21690f1d130c1c4d4f686118
0f0c1c2945966f88dc6519230000>Palatino-Roman AddT42Char 
2 3472 71 <00020054fff004a305cc002e003f00e540740041b916bb17b93be61de537
06293b293c34203421343744374438533753387a237c30882383279327a4
27b427c916c923c427c934c93cd816d327d637d638d83ce527ea30e638fc
1c1e3b2115181518151e0113562a5628152f6e0e6b05b30f090100092009
5009600970099009a009c0090809b80290401041367a0f1e4f1e02201e30
1eef1e031eb8028e400c403d2f393215281a25005a01b8012c4011040032
8325070e5a1258130f0a39841a0b003fed3f3ce4ed3fed3ff5ed11123939
111239390110f65d71ed10fc5d71e4e4fd3c3ce4e4cc11123907101ac831
30005d015d01353e013717060f0111141e0217152623220736370e010706
23222e01353436373e0233321617113427262726132e0123220e01151416
33323e0137363502a76f99490d04050407122a687a322b85030228872650
3d71be673f301bc077463f79390c040b142f449548528a49b680436a500b
08054e390c21180955f3a0fd8e66951d120936070745751d74251470d585
64b3311c72331f2001078b1e0b0509fd8c4b4554aa77b7ce386c422cad00
>Palatino-Roman AddT42Char 
2 3892 72 <00020033ffe8039103c800240032008340579a2ed409d50eeb08e60de60e
06451f501f631ff93104061e01181d252b25871c1d1d2130306412070040
242101100109211a212a213a214a21052183060b00a42d7a18564f166f16
af160316cb34251d7a200a010a7c3310f65dfdc410fe5de4ede4003fed71
3dd438181ac81a393fed1112392f3cfdc4111239313001715d005d250706
070e0123222e01353436373e01373633321e0115140706070623211e0233
323637011617163332373635342623220603742045202f794384d6773f28
1d7a3c4f5c70b5540448396c6cfebf025fa75a3d7959fd8f1c4e9538852a
01806b718a9b482b0e151d6edb9373b92c2053182166b06f1c280e04088f
b1542734018803030505180d9e94a2000000>Palatino-Roman AddT42Char 
2 4180 73 <00010031000002b705d2003a007d404c6e167d168d169c16bb16cc16db16
eb16080100031c580319f600581e223a3a0d300714840d002b5a315a2e58
302c0a1d2c1d23101039255618236e39000039303756306b034f395f3902
393b10d45d3cece41112392f10fd3ce410d4111239392f003f3ce4eded3f
fdc01112392f3c3ce4fd3ce41112393130015d1335363735343637363736
373633321f01072e0123220e011d013332371707262322071114171e0217
1617152623220735373e013736373413114c4e3c211e2d61411f29372729
04171f3d2936441f6a504d0a1457292a530501080d0f1e84e9332ed35f15
17060b0306030e2921253c826b2a3e603f10150da6091a182c527ecf0606
670404fe9a42af3e220f0509093907073901010d0a14330d0112015e0000
>Palatino-Roman AddT42Char 
2 5076 75 <00010007000004900638005a00ac4033b523b524bb56bb57e42be42ce42d
07122312471248242324472448352c352d7a438a439a430b574c413eb341
893a6b3256002fb8028540125c4f561bb321564c6e006b126b07560c5609
b80284400e5b40472121212424213e2a125a13b8012c4016180045842a07
395a565a015a3a3e57033c585958000a003fe4e4173cededed3fed3ff4ed
11123939071a10c91a0110fce4e4e4e4fde4e4e410fc5de4e4fde4111239
3130005d015d3335373e0137363736131134272627262726233536373633
321615140f01060f01113e0137363736373633321e011d0117161516171e
011716171526232207363d01342e0123220e01070e011d01121716171e01
171617152623220d5e1617060b020106060407050b0f7be2580d07070802
010501020e820c130b132634315ca5400303020a041010066272342c890e
226957375648190c080501020a0410100768b2443b3901010d0a14330d01
120205a7b2780e0a04073b1c2a060908070d21b37e9cfedc0b720b12060a
0a0e578481b08a811030160a0d030102390505948cf87466512040251233
4d75fefd1532170a0d03010239070000>Palatino-Roman AddT42Char 
2 5512 76 <0002002d000002260580000b002f005e401060067006800690060406fe00
040c5a0db8018740170f071c5a225a1f58211d0a09fe035610561d6b0f31
0131b80285400b126e0c6b216b28562c562ab90284003010f4e4e4e4e4fd
e45de4e4f4ed003f3ce4eded3ff4ed3fed5d313001321615140623222635
34360335363717061d01121716171e01171617152623220735373e013736
3734133534272e0101212f41422e2f4242c5c28416080501010a05101006
69985b50b65f1517060b03060a061f0580422f2e42422e2f42fdb739163e
10d571b6fefc153217090d0401023907073901010d0a14330d0112b0951c
0f0f0000>Palatino-Roman AddT42Char 
2 6036 78 <00010021fff6048305d200500146409f46244625432646314535050a310a
32023302340235023602380c3c0c3d0c3e1b31143314342b252b31243333
334033403440355a3d5a3e6c3d6c3e6c3f732f73307033703470357b3c7b
3d7b3e832f83308033803480358e3c8e3d8e3ebb40dc3ddc3e2c123c803c
923c03e23cf23c029d3c013532322f413c3222323522263532326e413c14
41322f413c2f2a32353238413c423222222126262a2a38423cb8ffe84019
3c4f380138521ab3455621426e07560c56136b006b60090109b802844010
5132382b404142212221214d26125a13b8012c401516002b5a2a26064c5a
015a4f584d000a385a393c0b003fd4ed3f3ce4eded3f3ced3ff4ed111239
2fc41ad4c41a1112390110f45de4e4e4e4fd3ce4e410d45dc0381112392f
c011123910c01112391112391112390708102b1001c0070810c0070810c0
057171723130015d005d3335373e01373637361311342726272627262335
36373633321615140f01060f01111736373637163332371506070607060f
0116171e0233150e01072e012726270715121716171e0117161715262322
275e1617060b020106060407050b0f7be2580d07070802010501020b3564
43ea4d1514513a10163d60876651c7963d3a3d4a6642224063cb830b0501
010b0410100768846b683901010d0a14330d0112019fa7b2780e0a04073b
1c2a060908070d21b37e9cfe6e06215439db030338030507273d705153c3
99330a2d0e17101c3b66d075053bfefc153217090d04010239080000>Palatino-Roman AddT42Char 
2 6604 79 <0001002d0000022405d2002e004fb30f300130b8028540142b6b1bb32356
216e07560c56126b006b60090109b80284b32f125a13b8012c400b16002a
5a015a2d582b000a003f3ce4eded3ff4ed0110f45de4ede4e4fde4e4e4e4
5d31303335373e0137363736131134272627262726233536373633321615
140f01060f0111121716171e0117161715262322335e1617060b02010606
0407050b0f7be2580d07070802010501020501010b041010076888676239
01010d0a14330d0112019fa7b2780e0a04073b1c2a060908070d21b37e9c
fdf9fefc153217090d0401023908>Palatino-Roman AddT42Char 
2 6828 80 <0001002a000006ef03c3007e010c403ba33ba33ce42df42404d526d62702
842601131d13261349134a136c231d236c3524794579688a450b49252526
6c211c1c1d1c1d2526047b22105a11b8012c402b155647842b076a842207
7a5d573b04015a3f585a587d587b5c58403c05000a2642251d661c40b343
6e3b80b80285b5345600310131b80291402d005801586b505625734d6e0f
5c1f5c2f5cbf5ccf5c055c6b635600660166007b017b6b73566e5619561c
706e66b80291400e106b006b0c560756600970090209b90284007f10f45d
e4e4e4e4e4fd3ce4e4e4e45d105de4e45dfde4e4e45df45de4e4c4fde411
1239111239003f173ce4e4e4fd173c3fed3fedf4f4ed111217390507101a
c90710c93130005d0171725d3335373e0137363734133534272e02073536
373633321615140706073736373e01333216173736373e0133321617161d
0117161516171e011716171526232207133735342e012322070e011d0117
161716171e01171617152623220735373e01373637361335342e0123220e
0107061d01121516171e01171617152623222a5f1517060b030603030d20
72ca5d1407070801040283190617562f6096286e250e1a602f729a160e03
03020a04111006687e2e2c850903226d4853433220030201020a04101007
68935948be5f1617060b0201052864463c6b3a060a06020a04101106688a
61563901010d0a14330d011277505c3b160b01391c2d0a0a0a0709305f78
16030d165e5c6622080f1a794d33a9688b79153217090d04010239060601
146c56a87b4c30256491438b79153217090d0401023908083901010d0a14
330d01124e817747334c2b45613dfefc153217090d04010239080000>Palatino-Roman AddT42Char 
2 7456 81 <0001001c0000049b03c3004b00a7402dbb47bb48e422ea3b04161d163a16
3b241d243a243b352135227a378a379a370b48343e31b334892d6b285600
25b8028540124d405618561c3e6e006b106b07560c560009b80284400e4c
403b1d211d1c1d1c311f105a11b801874016155639841f072c5a475a015a
2d3148034a582f58000a003fe4e4173cededed3fedf4f4ed11123939071a
10c91a0110fc5de4e4e4e4fd3ce4e410fc5de4e4fde41112393130005d01
5d3335373e0137363734133534272e020735363736333216151407060737
3633321e0117161d0114171e011f011526232207363d0134272e0123220e
011d01121516171e01171617152623221c5f1517060b030603030d2072ca
5d14070708010303ba52495191490c07070515166b624138820e0c117855
4b7c3506020a04101106687a63543901010d0a14330d011277505c3b160b
01391c2d0a0a0a070924749f1e42644c2dceb1822f1e170303390707f741
a89d314352475d6e79fefc153217090d0401023907000000>Palatino-Roman AddT42Char 
2 7840 82 <00020044ffe1041a03c7000f001d00b74057b602bc09b512ba19c502cc09
c312cb19d901da04d60ee504e80cec0df907fb09f915f916f51c13041a01
9512a408a412aa19e411e6160649081b64030714640a0b177a0006200630
060306cb1f107a2000300002007c1e10f45ded10f65ded003fed3fed3130
43794038011d082612260e0f0d0f0c0f030619261509175f01130b105f00
1a04175f011c02105f001607145f00110f145f0018051b5f011d011b5f01
2b2b2b2b012b2b2b2b2b2a2b2b81005d01715d13340033320015140e0123
222e01272637141e0133323635342e0123220644011ddfd2010888f89574
a1641a2ebd529b5b749c5d90577b9901cce0011bfef8d192f2894e763e6d
c67bfe75b8bf9fe75fb2>Palatino-Roman AddT42Char 
2 8956 85 <0001002f0000030003c3003c008540230b280b290b2aa41fa420a421d628
d629fb28fb290a2b282b29022838161d3823115a12b80187402c17562c7a
2307385a015a3b5839000a402921285626263e0a3832561a561d306e116b
006b08560d565f0a010ab90284003d10f45de4e4e4e4fd3ce4e4cc111239
2ff41ac81a003f3ce4eded3fedf4f4ed111239111239313000715d333536
373e01373637123d0134272e02073536373633321615140706073e01373e
0133321f010607232e012322061d0114171e02171617152623222f710911
11050a020603020d2172ca5d140707080105012d4c111e4e2a2a29060f02
2d173d2e4d6c0501080d0f1e84b07c80390202030d0c1731010b0c77505c
3b160b01391c2d0a0a0a07093d8034660f1a1f120e8565302c7f7f6742af
3e220f0509093907>Palatino-Roman AddT42Char 
2 9264 86 <0001004affe5032203ca003d010a40a03929392a392b792c882c9a219a22
952e952fa631a632ba12ba13b916ba21ba22b425b426c929c92adc29dc2a
e40eeb12f50cf50d1a040c040d02520d540e570f5a29592a5d2b5b2c592d
080a161916291603b40eb40fbb2aba2d04a40ea40fab2aaa2d0420241d03
000f0e18082d2a3324301d401d021d1bf3246418072000a000b000030038
f30864330b0e0f0b142d2a30271e5a1d561b491b3014a50b010bb8029240
1420303030bf300330cb3f015a00563956aa270127b80292b52014301402
14b9028e003e10f45ded5df4f4ed10f65dfd5d111239762f18f4fd111239
3911123939003fedf4c45d3fedf4c45d1112393911123939123911123900
5d5d3130015d0072715d13331e0533323635342e02272e0235343e013332
16170607232e0423220615141e011f011e02151406232227262726353437
3e015d3c010a18323b3d3e6683294dfe2538422753b2693fa63407033905
0d1636553e586b1f342fa67e5f3adfbb568f4f0604020906012e3a44412d
19086c5e2a40243a0d153c5c364f8553231a6f73492e2429206846273823
0e29202e614487c91a0f060307070a2b52000000>Palatino-Roman AddT42Char 
2 9704 87 <0001002efff2028c04fb003100834021ea29012e272e282e293d273d283d
294d274d284d29092820400121000805030707b80254402803124700582f
f60a581003061f1c8420250b112020332e08b30a1756166e000556032a56
5f2e012eb90284003210f45de43ce4ccfde43ce41112392fc4003fc8fdc0
3f3ce4fde476c41810f411123939101ac81a0138313001715d1335363734
27363717060316333237363717072623220703061e02173236371706070e
0123222e0227363736351123222e643b066841180b0d5010095e341a0715
3f35355e06030a1c2d362933270c2f2c26422b353f342205010301293203
102a261eee4224291453fee501020103075d0101fe69953a2b1a07070e27
25280e09182b424744511013019f>Palatino-Roman AddT42Char 
2 9988 88 <0001001affea049f03c4006200d840481708170914371438143927112712
2713243724382439c409c40ac437c4380f0c380c390c3a2208263a2064bb
37ed1008111811071438380707090709383d3509074e05224a5a234bb801
874044274e07005a035805010a35840e0b09170738313f0f4b014b6b0558
073d5642563f6e016b52b35c560f5a01205a6f5aaf5ae05aff5a055a642b
b3316e1a561456236b0017b90284006310f45dece4e4fde410d45d71e4e4
ecfde4e43ce4e45d111239111239003fed3f3ce4ed3fc4f4c4fdc4111239
391139390709101ac901111239383130015d005d25152623220736370607
06070e01232226272e013534363d01342726272627262322273536373633
32161514070607061d01141e013332363736373e0137363d013427262726
2726232227353637363332161514070607061d0117161716171e01171604
9f83434a4c06033c5313122b563c516d271d1f0503020704090f263720d7
611009070901040306215f46305f261c1d160e020503020704090f263720
d7611009070901030406020301010a051010063939070751653053130918
152c2d21694a233e1eab1a6942140a060a01391835090a0a080c205ba739
c37a633b211f17271d1f1e5857541a6942140a060a01391835090a0a080c
205fa339898b79153217090d04010000>Palatino-Roman AddT42Char 
2 10800 90 <0001001dfff5067f03bb0042011540b70b000b010a1a0a1b043104320433
04380439043a083e250c250d241c241da540c93cd83cf83cf73df841153d
87171b141b3d3b171b17141721471c212424c53a3414343a343d6e1c2114
1c423d1c212124211747171b14146e0400140404002421343a2e14170400
081c5a3d041b241b601b701b801bb41b061b461b3a00213a83043b013b2e
440083170b421f425f4203420843241417340407423d1c1b070d292f0307
5a0a582c580c2a2e0308063a3b42032117000a003fc0c0173c3f173ce4e4
fd173c3f3cc0111239391139390110d6d45dc0fd10d6d45dfdc01112393d
762f5dc018ed1112391239111239123907102b100876d0180802c0070810
2b0701102b100876d0180802d00708102b3130015d0527032e0327351633
32371506070e011514171316173713363733161713161737363736353426
273516333237150e0107060f02060706072327030f01060f0101ad2a5d28
531b274c6e7e86745d1c13111d5d17214c93342e314218733b1e4b492917
276e983a46783a280f1a37692d0d401c0e5e30e460712718210b8b013586
fa2610073a07073a010604150e1764febe515eae01497577b73bfede924a
c5be86491e1c19023a07073a011316227efa7021aa48367d023dcffb573d
5c000000>Palatino-Roman AddT42Char 
2 11284 91 <00010024000003ec03c50038010940ad0513051405163515351635173619
430743084314431543164417441844194422442356175618562275177518
752295149515d634e621e622e623f6341e24142733083035472222f61905
1419161427060830050519332235061905083024223516190547306e1427
14271427221d3505190127142b1108300e1d47002b012b3a35110e0f0139
22351e27142b1108300e0519010e5a0fa411071b581e5a1d19062b015a2e
58385835302c03000a003f173ce0e0fd3c3f3cede43ff4ed111239111239
111239391112390110d63cc4c0c010d45d76c41811123911123939111239
11123907102b7608c008c00510c008c008c0071008c008c01810052b1076
c008c008c03130005d33353237363713272e012726232207273637161716
1f0137363716333237150607060f02171612171e01331526232207262f01
060726232224301b243dea5544812a101609170c74772620374f4a3e4985
341a18332c162e69603e2518d12b161e2c46383b414033986fa528302f39
0e1447011f7e66a0190902390d1a2327477a75505dc0030338010f1f8173
513823fedf2e170c390404514be481ff04000000>Palatino-Roman AddT42Char 
1 0 0 <0002010000000500050000030007005bb10504b80128b2000607bb012800
02000101d0400b0303000a0947474a020605b80128b60303027b000704b8
0128b401004908d5b901dd00182b4e10f43c4df53c10fd3c10f53c4e1045
6544e6003f3c4d10fd3cf53c10f53c3130211121112521112101000400fc
2003c0fc400500fb002004c0>Palatino-Roman AddT42Char 
Palatino-Roman /CharStrings get begin
/space 3 def
/C 38 def
/D 39 def
/F 41 def
/J 45 def
/M 48 def
/T 55 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/h 75 def
/i 76 def
/k 78 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/w 90 def
/x 91 def
end
Palatino-Roman /Encoding get
dup 32 /space put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 74 /J put
dup 77 /M put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/DFQKRY+Palatino-Roman /Palatino-Roman findfont ct_VMDictPut/DFQKRY+Palatino-Roman*1 [32{/.notdef}rp /space 34{/.notdef}rp /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u /.notdef /w /x 135{/.notdef}rp]DFQKRY+Palatino-Roman nfDFQKRY+Palatino-Roman*1 [48 0 0 -48 0 0 ]msf308.414 284.813 mo(The Delicate T)sh609.797 284.813 mo(extur)sh720.281 284.813 mo(e of T)sh836.25 284.813 mo(ime)shDFQKRY+Palatino-Roman*1 [24 0 0 -24 0 0 ]msf522.618 349.22 mo(John MacCallum)sh398.859 457.694 mo(For octet with clicktracks and conductor)sh%ADOBeginClientInjection: EndPageContent "AI11"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11"
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/DFQKRY+Palatino-Roman*1 uf/DFQKRY+Palatino-Roman uf/Palatino-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 2 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (2)]
[/TrimBox [0 0 792 1224]]
[/BleedBox [0 0 792 1224]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_check_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1224 translate
pgsv
[0 -1 1 0 0 1224 ]ct
gsave
np
gsave
0 0 mo
0 792 li
1224 792 li
1224 0 li
cp
clp
%ADOBeginClientInjection: EndPageContent "AI11"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11"
grestore
grestore
pgrs
%%PageTrailer
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 3 3
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (3)]
[/TrimBox [0 0 792 1224]]
[/BleedBox [0 0 792 1224]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_check_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1224 translate
pgsv
[0 -1 1 0 0 1224 ]ct
gsave
np
gsave
0 0 mo
0 792 li
1224 792 li
1224 0 li
cp
clp
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: Palatino-Italic Initial
ct_T42Dict begin
-0.41 -0.469 1.738 1.184
 256 array 0 1 255 {1 index exch /.notdef put} for  /Palatino-Italic
Type42DictBegin
[<00010000000b000b000b000b637674204b1ec33e000000bc000005e66670
676d074470e6000006a4000006a6676c7966ad9aab3700005e5000047bb8
6865616481b2babc00000d4c00000036686865617818e91000000d840000
0024686d74784f9d93ef00000da800001c846c6f63610ead035800002a2c
00001c886d6178700f7b0821000046b4000000206e616d655d7288880000
46d40000117470726570aaec67c900005848000006066764697200000000
000000000000000005ce0000058c001a0567001403c3000e0000ffdd0000
ffe80000ffe6fdcf000005ce0012ff1f0000033d0000059b000000000000
000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000015800000000
00000000000000000000000000000000000000000000ffffffffffff0099
00000099000000000000000000000000000000000000000000000000003a
00050006000800640002006800840074007d0030005f009e006d0095004d
0034009e000400800056011300a000b20013004c00a50030004e00640223
001e0027003b00440049008f009100e9017d04000032007e00d9ffc40015
0094009b00b300b601320058007b00c1ffeb00aa00000001000a00230027
0040004a009b00ba00cd00f201490446ffb8ffc400400047009000c30003
00050032005000670078007c0084008c009000bfff7b001a002d00d4013d
019d01e6ff94ffaaffe400280029003a0044004c00630069009b00c800d7
00010008000b001200130032003d006a006c009800a800ab00d500f00174
0174017b028cff4a002f004000480051005a005d0060007e009900c200cd
00e90100010601080113013001780184018fff2dffa200200022002f003c
004c005f00660068007f009400a700ac00ae00af00d200d300f801ee0218
02680325035005c80008000a001f0036003a004a004d0055005e0073009c
009f009f00b100c400f70100010c010e013b013c015201b002df030f0376
03b503c4ff9bffa2ffdeffff0004001900490051005b0064006f0089008e
008e0090009100910097009c009e00b500bf00c700d400f400f701050133
013701560179019d01a901bd01e5020f0233023302350582059afed8ff78
ffa6001e002f00320034003a003b00460046004e005b005f0063006a0074
007c008a009600ab00c300ca00cc01170118011d011e013101500162016c
01840189018f01eb0203022402550262029202c002f9030c0355038203a6
03c403ed03f7043e048004b404d6057dfdcdff15ff63ffb9ffd8ffe2ffe5
000100030007001300130025003c003f0045004900560057006300640065
006600770078007a007f0080008100840086008900910096009e00a500a6
00ac00b400c000c500c500dc00de00ec00f000f3010c010d011101170124
01300138013c0145014a01620167016b018f01960199019e01aa01ae01c7
01d302ac01f301ff02330236023f025102610268026d028f029202a902a9
02ab02f003320332037c038203ac03b903dc041e04a304fa04fd05a405cc
05cd060506310658075afcd0fe9ffeaffeb8fec4ff00ff0bff4eff6dff88
ffd2ffe9fff300050009000f0017001d0032005e0068006b00810092009d
00a600a700ac00ba00bf00c100c400cb00d600dd00e900eb00eb00f100f5
0108010e010f011f011f012001220130013c013e013e014d01510154ffff
01610163017d018c019e01ab01b101b201d701de01df01e001e901f7020a
02100210021c0248025f0266026702670268027c027c0281028b029502b1
02bc02c802d602dc02dc02eb02f102fc03090318032d033003330335033d
033f0358035d035d0388039203b403b603da03dd0400042f044404470455
046504ed0500050b051d0528054405630566057605a105b406cb071a0731
0767079607b3009900a80097000000000000000000000000000000720072
0072feb7037a001c00a000dd00280098fe16017e016e00b600f402000184
00f701320122007000690116ff7c032b004f52a2009ffe61ff0e04170311
00a7007001530405ff33014f0225fea003da00ba01600628033702600112
fef500cb005afedb00a3013404ad0208012f016d024701a000b3039103e9
024800e901ed00e1036700bd020f019502f6025c0350fe7a013203f2023b
020604cc0532054c049a00820303022100e303150351010801d3025b01b6
0252027d036cffff00a0008a007800880061025d021c017a003d004a0083
001f02e0027d004e0490024201bd01800067031c004c00a3006c030501bd
0064003600290066004a00820030002a002a0000403231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0462370b101463e
01b0462370b10246453ab10200080d2d2c45b04a234445b04923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b011
2bb0472344b0477ae4182d2cb801a65458b00943b801005458b9004aff80
b14980444459592d2c8a03458a8a87b0112bb0472344b0477ae4182d2c2d
2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b049234445
b04a23444565234520b00325606a20b009234223688a6a606120b01a8ab0
00527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb114
008a5279b34940204945208a54582321b03f1b235961442d2cb110114323
430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b
2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121
592d2c0120b003252349b04060b0206320b000525823b002253823b00225
6538008a63381b212121212159012d2c4569b00943608a103a2d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c21
210c6423648bb84000622d2c21b08051580c6423648bb82000621bb20040
2f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2cb4000100000015b00826b008
26b00826b008260f10161345683ab001162d2cb4000100000015b00826b0
0826b00826b008260f1016134568653ab001162db800322c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db800332c2020456944
b001602db800342cb800332a212db800352c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db800362c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db800372c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db800382c2020456944b001602020457d691844
b001602db800392cb800382a2db8003a2c4b20b003265358b0401bb00059
8a8a20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a
8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321
b801408a8a1b8a235920b80003265358b0032545b8018050582321b80180
23211bb003254523212321591b2159442db8003b2c4b535845441b212159
2db8003c2c4bb800095058b101018e59b801ff85b800441db9000900035f
5e2db8003d2c2020456944b001602db8003e2cb8003d2a212db8003f2c20
46b003254652582359208a208a49648a204620686164b004254620686164
525823658a592f20b00053586920b000545821b040591b6920b000545821
b0406559593a2db800402c2046b00425465258238a592046206a6164b004
2546206a61645258238a592ffd2db800412c4b20b0032650585158b08044
1bb04044591b21212045b0c05058b0c0441b2159592db800422c20204569
44b001602020457d691844b001602db800432cb800422a2db800442c4b20
b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920
b0032653582321b800c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
452c4b535845441b2121592d0000000100000001000050bb42da5f0f3cf5
0111080000000000a57d7a8000000000c9de200efcb6fc3f0de909780002
00090001000100000000000100000695fdc800000dc5fcb6fdc80de90800
01b300000000000000000000000007210600010000000000020000000200
000002aa009d0400011c04d900580400001d071d00690639006602aa011e
02aa007102aa000f031d00d504d900680200fff602aa002d0200006a025e
fff3040000370400005a04000004040000060400ffff0400000a04000051
04000057040000360400002c0200005c0200ffbd04d9002804d9004c04d9
00200400010505fa004e05c7ffff04e300480556005d0639005104e3004c
0473001205c7006c0639000802aa001202aaffba0556002c0473002d078d
ffe20639000c0639007804e3001c063900790556001b0473006904e30073
063900bf05c700ac078d006305c70020055600940556002e02aa002504d9
00fd02aa001004d900680400000002aa00f0038d002403b4003f03420044
04000033031d00250239fed20400ffd50400001a023900490239ff78038d
00160239004c0639003b04730041038d00270400fff603b4003d031d0030
031d001702aa006b0473004d0400002605c7002b040000080400ffef038d
000002aa005b04d9023302aaffeb04d9006905c7ffff05c7ffff0556005d
04e3004c0639000c06390078063900bf038d0024038d0024038d0024038d
0024038d0024038d002403420044031d0025031d0025031d0025031d0025
0239004902390049023900170239004804730041038d0027038d0027038d
0027038d0027038d00270473004d0473004d0473004d0473004d04000079
033300e10400008c0400ff8904000020040000ae040000280400fecb05fa
001605fa00160800006b02aa016702aa00d20464002c0787ffff0639004f
05b400220464002c0464002c0464002c055600c6049c001603f4001c05b4
006d069600790464000c0231ff4202aa007b02aa009b06250051051b0010
038dffdf0400009a02aa004804d900690464000a040000120464001b04e5
00230400007304000072080000be0200000005c7ffff05c7ffff06390078
08390090055a00280400fff108000110040000e1040000f2023900cc0239
00c40464000e03f4003b0400ffef055600940156fe2905f4ffb202aa0076
02aa00770439fecd045cfed9040000530200009502390013040000340800
006905c7ffff04e3004c05c7ffff04e3004c04e3004c02aa001202aa0012
02aa001202aa001206390078063900780652000006390078063900bf0639
00bf063900bf0239004902aa009e02aa00b502aa00be02aa00f202aa019d
02aa014502aa001602aa00c502aa004e02aa00ee0473ffeb0239fff30473
0069031d00170556002e038d000004d9023306390058038d002405560094
0400ffef04e3002c0400fff604d9004a04d900b00266007c0266001a0266
00380600003d0600003e060000450400ffe505c7006c0400ffd502aa0012
04730063031d00050556005d034200440556005d034200440400002e05c7
ffff038d002405c7ffff038d002405c7ffff038d00240556005d03420044
0556005d03420044063900510400003304e3004c031d002504e3004c031d
002504e3004c031d002504e3004c031d002504e3004c031d002505c7006c
0400ffd505c7006c0400ffd505c7006c0400ffd50400ffd5063900080400
001a063900080400fffe02aa00120239002802aa00120239003402aa0012
02390023055400120472004902aaffba0239ff7805560021038dff610473
002d0239004c0473002d0239ff7d0473002d0239004c0473002d0239004c
0639000c047300410639ffef0473ffc60639000c04730041047300410639
0078038d002706390078038d002706390078038d00270556001b031d0030
05560019031dffb70556001b031d003004730069031d001704730069031d
001704e3007302aaffcd04e3007302aa006b04e3007302aa000e063900bf
0473004d063900bf0473004d063900bf0473004d063900bf0473004d0639
00bf0473004d063900bf0473004d078d006305c7002b055600940400ffef
0556002e038d00000556002e038d000004730069031d001704e3007302aa
ffac04d9002c0000fd7a0000fd580000fd0f0000fced0000fcfb0000fd08
0000fdd60000fd0c0000fd740000fcb60000fd010000fd9a0000fd5f0000
fd980000fcfa062500530639005805c7006c0400ffd50473002d0239ff9e
0556002c038d00160639000c047300410556001b031dffb202aa0026038d
00160239fed20639000c0473004103420044031d00250639003b031d0030
02aa006b0400002605c7002b023900cc023900c403330180033301ab02aa
00be02aa016702aa00f002aa00be02aa016702aa00f00000fcb60000fd08
0000fd7f0000fd7f0000fd7a0000fd580000fd760000fdd60000fd0c0000
fd740000fd010000fd0f0000fd080000fd080000fced0000fcfb0000fd76
0000fd760000fd7600000000000000000000000002aa0026020000d20625
005305c7ffff03f4001c03f4002e05b4006d05b400930464ffff0464ff7f
0231fee80231ff840464000b0464002d0464004904640047000000000889
00e107a600e10556002c02aa00120554001207fe00120871001205c700ac
087100ac0b1b00ac0dc500ac0871001205c70020087100200b1b00200473
002d0556005d06390051078dffe2023900490472004906ab004906390049
0400002606390026087200260aab00260639004904000008063900080872
00080239004c03420044040000330639003b02aa00120239004902aa009d
0b8f005109c60051078d0033071d002d06ac002d0472004c08e3000c0872
000c06ac004105c7ffff038d002402aa00120239004906390078038d0027
063900bf0473004d063900bf0473004d063900bf0473004d063900bf0473
004d063900bf0473004d05c7ffff038d002405c7ffff038d00240787ffff
051b001005c7006c0400ffd50556002c038d001606390078038d00270639
0078038d00270b8f005109c60051078d003305c7006c0639000c04730041
05c7ffff038d00240787ffff051b00100639004f038dffdf05c7ffff038d
002405c7ffff038d002404e3004c031d002504e3004c031d002502aa0012
0239ffa902aa00120239004906390078038d002706390078038d00270556
001b031d00300556001b031d0030063900bf0473004d063900bf0473004d
063900080400001a05c7ffff038d002404e3004c031d001606390078038d
002706390078038d002706390078038d002706390078038d002705560094
0400ffef040000f202aa001205c7ffff038d002404e3004803b4003f04e3
004803b4003f04e3004803b400350556005d034200440639005104000033
063900510400003306390051040000330639005104000033063900510400
ffe604e3004c031d002504e3004c031d002504e3004c031dff9904e3004c
031dff8104e3004c031d0016047300120239fed205c7006c0400ffd50639
00080400001a063900080400001a063900080400001a063900080400ff6b
063900080400001a02aaff7a0239ff3802aa0012023900490556002c038d
00160556002c038d00160556002c038d00160473002d0239ffeb0473002d
0239ffeb0473002d0239ff230473002d0239ff15078dffe20639003b078d
ffe20639003b078dffe20639003b0639000c047300410639000c04730041
0639000c047300410639000c0473003806390078038d002706390078038d
002706390078038d002706390078038d002704e3001c0400fff604e3001c
0400fff60556001b031d00300556001b031d001d0556001b031d00270556
001b031dff6904730069031d001704730069031d001704730069031d0017
04730069031d001704730069031d001704e3007302aa006b04e3007302aa
006b04e3007302aaff7d04e3007302aaff5b063900bf0473004d063900bf
0473004d063900bf0473004d063900bf0473004d063900bf0473004d05c7
00ac0400002605c700ac04000026078d006305c7002b078d006305c7002b
078d006305c7002b078d006305c7002b078d006305c7002b05c700200400
000805c7002004000008055600940400ffef0556002e038d00000556002e
038d00000556002e038d00000400001a02aa006b05c7002b0400ffef0239
fed204e3004c031d002504e3004c031d00250787ffff051b0010078dffe2
0639003b0000fd7a0000fd580000fd7f0000fd0c0200ffbd02aa00d20200
009505c7ffff038d0024038d002402aa00120239002102390049063900bf
0473004d040000080556001b031d00300239ff78038d0024063900510400
0033031d0025043300700364006e0000ff1e0000fe6100007fff00007fff
00007fff04d9023309b202330239ff7805c7ffff038d002405c7ffff038d
002405c7ffff038d002405c7ffff038dff9a05c7ffff038d002405c7ffff
038d002405c7ffff038d002405c7ffff038d002405c7ffff038d002405c7
ffff038d002405c7ffff038d002405c7ffff038d002404e3004c031d0025
04e3004c031d002504e3004c031d002504e3004c031d002504e3004c031d
ff6f04e3004c031d002504e3004c031d002504e3004c031d002502aa0012
0239004902aa00120239000906390078038d002706390078038d00270639
0078038d002706390078038dff9606390078038d002706390078038d0027
06390078038d0027063900bf0473004d063900bf0473004d055600940400
ffef055600940400ffef055600940400ffef055600940400ffef0200fff9
0200005f0200ffc002aa00a0040001080800035a080003df040001e00400
01c4040001c402aafe3502aafdd602aafe3902aafdc802aafe1002aafdfc
0686fff9000000000600000005c7007802aa00130556002e047300300473
00300639000d05560021062c009d04e4009d04f2005f05fc007f04000033
0400ffd5038d00160239ffb70285004c04730045031dff9902aafffd0387
ffe70856006b0a4f007807da009d071c004406a9004406030044045bfed2
0660fed20682fed204aefed206d5fed20608fed20837fed20653fed20866
fed205dcfed207f6fed20436fed20239fed2041ffed2044efed20443fed2
0644fed2066afed2049bfed20602fed2063efed205c8fed206bf0018054a
001804d6006c0592006c02aa008c0265003e027e00720223005002b60046
0223005a01e8ff9e026e00040293003801bc006a01dbffde02640038016b
005c03f4004d02f900610259005002b500550262005002000059020e0045
01d4007d02da005b02760029038a002d027d0019027d0011021a0012034d
0046036e00520223005a04000054034c008304000005040000060400ffff
0400000a0400005103690057040000350400002e0400004c0400007d0400
00370400000e0400000c0400000e04000066040000390400004204000018
028f005a028f003c028f005a028f006e028f0093028f0046028f0064028f
0033028f0078028f0028028f0028028f000b028f0015028f003d028f0058
028f001f028f0033028f0046028f0046028f00460188009b0188003b028f
0000028f0000028f00000188005a0188ffda011d0064011d0023028f0064
028f007e03f6008d0674008d067400650674008d067400650674005b0674
003c0674008d0674005a0674008d0674005b0674005a067400930400008e
0400008e0400008e0400008e0400008e0400008e0400008e0400008e0400
008e0400008e0400008e0400008e0400008e0400008e0400008e0400008e
040000a305ac00160712005b0472ffc80400001e0400001e0400001e0400
00300400003004000058040000220400005704000041031d004a0437fff5
0556005d0556005d040000060400001204e30021062e0004081600210400
0096044b009d04000107023900b1040000000432ff5d071d00a006ac0017
02aa011e0400011c0355001c04d5009202d6008302d6008304d500b202d6
007008000000040001050400fff108000000040000000800000002ab0000
02000000015500000400000002000000019a000000ab0000000000000000
ff4602aa011702aa016702aa00f002aa009d02aa00d202aa007302aa00ee
02aa00f202aa014a0000ff4002aa001b02aa019d02aa00c502aa00be02aa
005002aa016702aa00f002aa009e02aa00d202aa00db02aa00ee02aa00f2
02aa014a0000ff4002aa001b02aa019d02aa00c502aa00be02aa005005a4
ffc805a4ffc80527003604e30049045400360454003604540036055fff22
04ed003604ed003604ed003604ed00360850001c0850001a0850001c04dc
005304dc0053062400a8062400a8062400a8062400a80556002e0556002e
0556002e0556002e066f00b704faff2207b2fffc065e0036065e0032065e
008a0639003604f50036058c008a058c008a050800b6055600e6055600e6
04b4006b04b4006b04b4006b04b4006b0695008a05eb003e05eb003e0647
0036053400b5053400b5053400b50889003608970036060900b6071b0036
04e800360591005d065e007f08d30036056affe405fd0079069efff8065e
008a065e008a05b400c90460003602d2003602d2003602b8ffbc0472006b
05a10090051a0023068c00b6065900b6063a00360740ff2208770036038d
0025038d002503d4005d0327003802af002b02af002b02af002b03af003a
031d0025031d0025031d0025031d002505f3001105f3001105f30011070a
0000070a0000070a000002ebffe402ebffe4047300510473005104730051
047300510493004a0493004a0493004a0493004a044fffee03f3ffdb060f
ffee0491005804910058038d0027047300450400fff60341004403410044
0639003e0400ffef0400ffef046d003c046d003c0400ffef0400ffef0506
003a041a0000040000080491005303c9002e03c9002e03c9002e064e0053
06580053046000000561005303dd00530323ffee031d002505c9005503fd
ffd2041a006403530038031d00180239004c0239004c0239ff78058bffc8
06030058046d0082046d008204730058061f0058061f0058059b000b03b3
003a03b3003a03d2fffd02d9000007c6ffda01a1003d01a1005205a4ffc8
04e300490454003605ac001604ed003605560046065e00360661008d02d2
00360556002e05b2ffc907b2fffc0639001f05bf005b065e008a06390036
04f50036055d0016050800b6058f00950695008a05eb003e05fa002505a4
ffc805a4ffc805a4ffc805a4ffc805a4ffc805a4ffc805a4ffc805a4ffc8
05a4ffc80824ffc80824ffc80824ffc80824ffc80824ffc80824ffc80824
ffc80824ffc805a4ffc805a4ffc805a4ffc805a4ffc80824ffc804ed0036
050bffea052affec059fffec05b6ffdf0617ffd8064effdc04ed0028053d
ffed065e0036065effcc06aeffe70708ffd8074effe9078affd807a8ffe6
078affd9078affea0950001b0950fff10982ffec0982ffdf09beffd809be
fff009dcffe309dcfff4065e003206c2ffed08b0003602d2003602d20036
02d2ffcc0322ffec039affec039affdf03feffd803feffd203feffcf03fe
ffe002d2003602d2003602d200320336ffed065e0078065e0001065e0001
072600010758000106f4000106f40001065e0028065e003e04f5ffcc058f
000e058f009505f3fff70701ffe90701fff006edfff4058f0095058f0095
05f30028061100010712005b071200190712002a07c6ffd807c6ffcb0776
ffec0776ffdc0776ffe30776ffd6099900300999001f0a39ffd80a39ffcb
09e9ffe209e9ffd209e9ffe309e9ffd6071200210712005b0985005b04c1
0037041afff204a9001c03fb004103f20072040b006b0440004504e80090
027d00870493004a04f3004103fbfffd0463005d03e5003a048b00530405
005d046b003a042a005d0463004a0554003804e100090591004a05ba0038
03dd005d04f700580575003805ba003804c1003704c1003704c1003704c1
003704c1003704c1003704c1003704c1003704c1003704c1003704c10037
04c1003704c1003704c1003704c1003704c1003704c1003704c1003704c1
003704c1003704c1003704c1003704c1003704c1003704c1003704c10037
03f2007203f2007203f2007203f2007203f2007203f2007203f2007203f2
007203f20072044000450440004504400045044000450440004504400045
044000450440004504400045044000450440004504400045044000450440
004504400045044000450440004504400045044000450440004504400045
044000450440004504400045027d0087027d0067027d0087027d0087027d
0087027d0087027d0087027d0056027d0087027d0060027d007d027d0087
027d0072027d005d027d003f027d005d027d0087027d007e027d004203e5
003a03e5003a03e5003a03e5003a03e5003a03e5003a03e5003a03e5003a
03e5003a048b0053048b00530463004a0463004a0463004a0463004a0463
004a0463004a0463004a0463004a0463004a0463004a0463004a0463004a
0463004a0463004a0463004a0463004a0463004a0463004a0463004a05ba
003805ba003805ba003805ba003805ba003805ba003805ba003805ba0038
05ba003805ba003805ba003805ba003805ba003805ba003805ba003805ba
003805ba003805ba003805ba003805ba003805ba003805ba003805ba0038
05ba0038055e004305720067071c0025055e005d021d0000021d0000021d
000001a1003501a1010701a1002e01a1002e01a100bb01a1007e01a100bb
01a100cc01a100a001a100d101a1006301a1005901a6005d01ab005601a1
003001a1005a01a1006b01a1002e01a1001a01a1001a01a1005a01a10045
0639007803f20027066b00c204ce0051040000890000ff210000ffcb0000
ff7f0000ff3d0000ffb40408ffd00395004903e8006204620049037a0049
03320049044e006204e9005202680049021affc204250049034e0049059e
001e04be00340485006203990049048500620412004903350062039f0085
0488008f03f1005a0570005a0416001e0383003c0382001e0408ffd00408
ffd00408ffd00408ffd00408ffd00408ffd00408ffd00408ffd00408ffd0
0408ffd004ffffd104ffffd103e8006203e8006203e8006203e8006203e8
0062046200490467004a0467004a037a0049037a0049037a0049037a0049
037a0049037a0049037a0049037a0049037a0049044e0062044e0062044e
0062044e0062044e006204e9005204c80049026800490268004902680049
026800490268004902680049026800490268004902680049021affc20425
004904250049034e0049034e0049034e0049034e0049034e004903640047
04be003404be003404be003404be003404be003404850062048500620485
006204850062048500620485006204850062048500620485006204850062
060700620412004904120049041200490412004903350062033500620335
00620335006203350062039f0085039f008504b00085039f0085039f0085
0488008f0488008f0488008f0488008f0488008f0488008f0488008f0488
008f0488008f0488008f0570005a0570005a0570005a0570005a0383003c
0383003c0383003c0383003c0382001e0382001e0382001e038e0049042a
0049029500b701e50068045a005802aa001b05c7ffeb038d002505c7ffeb
038d002505c7ffeb038d002505c7ffeb038d002505c7ffeb038d002505c7
ffeb038d002505c7ffeb038d002505c7ffeb038d002505c7ffeb038d0025
05c7ffeb038d002505c7ffeb038d002505c7ffeb038d002504e30048031d
002504e30048031d002504e30048031d002504e30048031d002504e30048
031d002504e30048031d002504e30048031d002504e30048031d002502aa
00130239004c02aa00130239002506390078038d002706390078038d0027
06390078038d002706390078038d002706390078038d002706390078038d
002706390078038d00270639007803f200270639007803f2002706390078
03f200270639007803f200270639007803f20027063900c2047300510639
00c204730051066b00c204ce0051066b00c204ce0051066b00c204ce0051
066b00c204ce0051066b00c204ce0051055600950400ffef055600950400
ffef055600950400ffef05c300780712005b04e2005d053b005d00000000
00000074000000740000007400000074000001240000019c000002d00000
04cc0000068800000870000008b800000934000009ac00000a7800000adc
00000b3c00000b6c00000bb400000bec00000cec00000e2000000f580000
10d800001260000014280000159000001650000017cc00001950000019cc
00001a6000001ac000001b1000001b7000001c6c00001e1400001f9c0000
215c0000229c000023ec0000258c00002704000028c000002b7c00002c9c
00002d9000002fec0000313c0000337c0000357c0000366c000037f40000
398800003b8000003d2c00003ec00000407c000041d4000043bc00004614
000047a8000048c0000049a0000049d800004ac400004b1800004b540000
4ba000004d2c00004e5400004f740000516800005288000053f0000055e4
000057f80000592000005a4c00005c4c00005d4c00006014000062340000
62f00000648c0000663000006758000068c800006a1400006c3c00006d70
00006f7c0000717c00007338000074a8000075a4000075d0000076cc0000
774800007760000077780000793000007948000079600000797800007990
000079a8000079c0000079d8000079f000007a0800007a2000007b9c0000
7bb400007bcc00007be400007bfc00007c1400007c2c00007c4400007c5c
00007c7400007c8c00007ca400007cbc00007cd400007cec00007d040000
7d1c00007d3400007d4c00007e3c00007eb400007fdc0000814c000082cc
0000831c00008418000085a40000876c000088b400008ae000008b2c0000
8ba000008c5c00008e9400009030000091080000919c0000921400009290
000094a4000095dc0000968c000097a8000098e0000099b400009a580000
9b9400009c1000009d6c00009f0c0000a0880000a17c0000a2100000a24c
0000a2b40000a38c0000a4a80000a5440000a5dc0000a6780000a7180000
a7180000a7300000a7480000a7600000a9400000aa700000aab00000aaf4
0000ab980000ac380000ac980000acf40000ad900000ae080000ae200000
ae380000ae700000af580000afb00000b0080000b1fc0000b3d40000b538
0000b5800000b5e00000b6840000b88c0000b8a40000b8bc0000b8d40000
b8ec0000b9040000b91c0000b9340000b94c0000b9640000b97c0000b994
0000ba600000ba780000ba900000baa80000bac00000bb9c0000bbf00000
bc7c0000bcb00000bd100000bd580000bdcc0000be7c0000bf000000bf78
0000bfcc0000c1540000c2880000c2a00000c2b80000c2d00000c2e80000
c3300000c4ac0000c5ec0000c6040000c61c0000c76c0000c8c00000c8f0
0000c9ac0000ca740000cb440000cc2c0000cddc0000cfcc0000d1e80000
d3340000d34c0000d3640000d37c0000d5b80000d7400000d7580000d770
0000d7880000d7a00000d9ac0000d9c40000d9dc0000d9f40000da0c0000
da240000da3c0000da540000da6c0000da840000da9c0000dab40000dacc
0000dae40000dafc0000db140000db2c0000db440000db5c0000db740000
db8c0000dba40000dbbc0000dbd40000dbec0000dc040000dc1c0000dc34
0000dc4c0000dc640000dc7c0000dc940000dcac0000dcc40000dcdc0000
dcf40000dd0c0000dd240000dd3c0000dd540000dd6c0000dd840000dd9c
0000de580000de700000de880000dea00000deb80000ded00000dee80000
df000000df180000df300000df480000df600000df780000df900000dfa8
0000dfc00000dfd80000dff00000e0080000e0200000e0380000e0500000
e0680000e0800000e0980000e0b00000e0c80000e0e00000e0f80000e110
0000e1280000e1400000e1580000e1700000e1880000e1a00000e1b80000
e1d00000e1e80000e2000000e2180000e2300000e2480000e2600000e278
0000e2900000e2a80000e2c00000e2d80000e2f00000e3080000e3200000
e3380000e3500000e3680000e3800000e3980000e3b00000e3c80000e3e0
0000e3f80000e4100000e4280000e4400000e5b00000e5f40000e6340000
e66c0000e6f00000e71c0000e76c0000e7f80000e9140000ea300000ea9c
0000ead40000eb140000ebe40000ec900000ecc00000ee780000ee880000
eea00000eebc0000eed40000eeec0000ef040000ef1c0000ef340000ef4c
0000ef640000ef7c0000efac0000f0a80000f1600000f2e00000f4500000
f5480000f6b00000f82c0000f8dc0000f9b80000fb7c0000fde40000fe28
0000fe6c0000fecc0000ff2c0000ff580000ff980000ffdc000100080001
00480001008c000100f8000101480001018c000101d40001021800010258
000102b800010344000104600001057c000105b4000105ec0001063c0001
068c0001070c0001073800010798000107f8000108580001085800010858
00010858000108880001091c00010ad800010af000010b0000010b180001
0b2800010b4000010b5000010b6800010b7800010b9000010ba000010bb8
00010bc800010be000010be000010bf800010c1000010c2000010c300001
0c4800010c6800010c8000010c9000010ca800010cc800010cf000010d08
00010d1800010d3000010d5000010d6000010d7000010d8000010d900001
0da000010db800010dd800010df000010e0000010e1800010e3800010e60
00010e7800010e8800010ea000010ec000010ed000010ee000010ef00001
0f0000010f1800010f3000010f4000010f6000010f8000010fa000010fb8
00010fd000010fe800011000000110180001103000011048000110600001
107800011090000110a8000110c0000110d8000110f00001111000011130
000111500001117000011190000111b0000111d0000111f0000112100001
1230000112500001127000011288000112a0000112b8000112d0000112e8
000113000001131800011330000113500001136c000113840001139c0001
13b4000113cc000113e4000113fc0001141c0001143c000114540001146c
000114840001149c000114b4000114cc000114e4000114fc000115140001
152c000115440001155c000115740001158c000115a4000115bc000115d4
000115ec000116040001161c000116340001164c000116640001167c0001
1694000116ac000116c4000116dc000116f40001170c000117240001173c
000117540001176c0001178c000117ac000117cc000117ec000118040001
181c0001183c0001185c000118740001188c0001189c000118ac000118c4
000118dc000118f40001190c000119240001193c000119540001196c0001
19840001199c000119b4000119cc000119e4000119fc00011a1400011a2c
00011a4400011a5c00011a7400011a8c00011aac00011acc00011aec0001
1b0c00011b2400011b3c00011b5400011b6c00011b8c00011ba800011bc0
00011bd800011bf000011c0800011c2000011c3800011c5000011c680001
1c8000011c9800011cb000011cc800011ce000011cf800011d1000011d28
00011d4800011d6800011d8000011d9800011db000011dc800011de00001
1df800011e1000011e2800011e4800011e6800011e8000011e9800011eb0
00011ec800011ee000011ef800011f1000011f2800011f4000011f580001
1f7000011f8800011fa000011fb800011fd000011fe80001200000012018
00012038000120580001207800012098000120b8000120d8000120f80001
21180001213000012148000121600001217800012190000121a8000121c0
000121d8000121f800012218000122300001224800012260000122780001
2290000122a8000122c8000122e800012308000123280001234800012368
0001238000012398000123b0000123c8000123e0000123f8000124100001
242800012440000124580001247000012488000124a0000124b8000124d8
000124f80001251800012538000125500001256800012580000125980001
25b0000125c8000125e0000125f800012610000126280001264000012658
0001267000012688000126a0000126b8000126d0000126e8000127000001
27180001273000012748000127600001277800012790000127a8000127c0
000127d8000127f000012808000128200001284000012860000128800001
28a0000128b0000128c0000128d8000128f0000129000001291000012920
0001293800012948000129600001297000012990000129b0000129d00001
29f000012a1000012a2800012a4800012a6800012a8000012a9800012ab0
00012b4000012cd800012efc00013158000132c00001338c000134600001
3528000135c0000135d0000135e0000135f0000136000001361800013630
00013648000136600001367800013690000136b0000136d0000136f00001
371000013730000137500001377000013790000137b0000137d0000137f0
0001381000013830000138500001387000013890000138b0000138d00001
38f0000139100001392800013940000139580001397000013988000139a0
000139c0000139e000013a0000013a2000013a4000013a6000013a800001
3aa000013ac000013ae000013af800013b1000013b2800013b4000013b58
00013b7000013b8800013ba000013bc000013be000013c0000013c200001
3c4000013c6000013c8000013ca000013cc000013ce000013cf800013d10
00013d2800013d4000013d5800013d7000013d8800013da000013db80001
3dd000013de800013e0000013e1000013e2000013e3000013e4000013e50
00013f5000013f8400013fb800013fec0001402000014080000140e00001
41b400014288000143540001442000014630000146300001463000014780
000148f800014ac000014c5000014dbc00014fac000151f80001538c0001
554000015698000157dc00015a0000015c9c00015e1000015f3c00016038
00016254000163e400016564000166800001691400016c2400016dcc0001
6f840001714000017368000174e40001779c0001797800017b3400017d60
00017fac00018298000184040001860c0001878c000189a800018b780001
8c3000018d9800018e9000018fbc00019214000193b80001954800019748
00019894000199e800019c9400019f2c0001a1080001a2d40001a3840001
a47c0001a5dc0001a69c0001a7cc0001a9080001a9a80001ab7c0001ac3c
0001ad200001ae040001aed40001af440001b04c0001b0fc0001b2100001
b3240001b3f40001b4800001b5f80001b6cc0001b7780001b9000001bb18
0001bc200001bd240001bdec0001c00c0001c1c80001c3300001c46c0001
c5380001c6480001c7800001c8ec0001ca180001cb900001cc280001ce38
0001cfb80001d0e40001d1900001d2880001d3a00001d46c0001d58c0001
d6d80001d7680001d9680001dabc0001dbe80001dd400001de600001dfc8
0001e0580001e2300001e3a00001e3b40001e4480001e5440001e6880001
e69c0001e6b00001e6c40001e6d80001e6ec0001e7000001e7700001e79c
0001e7dc0001e87c0001e9200001e9900001e9bc0001e9fc0001ea9c0001
eb400001ebcc0001ec080001eddc0001eecc0001ef800001f1700001f3e8
0001f5c40001f8500001fafc0001fda80001ffbc0002025c000204dc0002
07f000020ad800020d6000020e7c000210340002120000021448000215b0
000217b40002197400021b5800021dbc00021fac0002219c000223e00002
2640000228e400022b7400022d8800022db000022e4000022f9000023114
00023150000231a400023230000232b00002332800023370000233b40002
3524000237a80002397000023acc00023c6800023e4800023f74000241d8
0002439c0002470800024a0400024b1000024bd400024d3c00024d7c0002
4db800024f7c0002518c0002523400025270000252d00002541c0002548c
000254b800025524000255680002567c00025acc00025b2c00025b580002
5b8400025b8400025b8400025b8400025b8400025b8400025b8400025b84
00025b8400025b8400025b8400025c2400025cc800025d0400025d3c0002
5d8000025e8c00025f1400025f5800025fa0000260bc0002615c00026224
000262b00002630c00026338000263d40002641400026450000264940002
65a00002663400026680000266cc000267e80002688c00026950000269dc
00026a5400026a8000026b1c00026c4400026c5c00026dfc00026fe80002
70cc000270e40002720800027390000274cc000274e4000274fc00027514
00027764000279380002795000027a8000027c7400027da000027db80002
7dd000027de800027f3c000280bc0002826c000284200002857c000286a0
0002884400028a1c00028bc800028d1400028ec000029028000291040002
92b8000293b8000294f0000296740002976c000297840002979c000297b4
000299e400029b7000029d2800029eec0002a0800002a1fc0002a3c00002
a6080002a8700002a9fc0002ac540002add80002af4c0002b0e00002b374
0002b5040002b7300002b9840002bb200002bcd80002bdf40002bee80002
bfb00002bfc80002c0800002c1f00002c2f40002c4bc0002c6b40002c848
0002ca100002cc0c0002cecc0002d0700002d2480002d3c40002d5780002
d6cc0002d84c0002d9b00002db100002dc680002de500002dfd40002e164
0002e2bc0002e4780002e4900002e5f40002e7a80002e7c00002e8f00002
ea900002ec180002ede80002ef8c0002f1300002f22c0002f3540002f4b4
0002f5a80002f6e00002f7b40002f9200002fa4c0002fc240002fd580002
fef00003002c00030110000302cc0003046c00030618000307fc00030944
00030acc00030c9000030e8c000310480003114c000312cc000314cc0003
164400031820000319c800031c1c00031f24000320d0000322fc00032454
0003256c000326a000032848000329e800032b5c00032c6800032df80003
2f4c000330d4000331d00003339000033568000336d8000338a800033a90
00033c7800033e7c0003405c000341c0000343440003441c000344b00003
47100003475c000347b4000347c4000349b0000349c0000349d0000349e0
00034abc00034c9400034e4000034f080003505c0003515c0003516c0003
52c400035400000354100003542000035430000354f80003550800035658
0003588800035a1400035bd000035be800035c0000035c1800035c300003
5c4800035c6000035c7800035c9000035ca800035cc800035ce800035d08
00035d2800035d4800035d6800035d8800035da800035dc000035dd80003
5df000035e0800035e2000035e3800035e5000035e6800035e8000035e98
00035eb400035ed000035ee800035f0000035f1800035f3000035f480003
5f6400035f7c00035f9800035fb000035fcc00035fe80003600800036028
00036048000360680003608c000360ac000360cc000360ec000361040003
611c000361340003614c000361640003617c00036194000361ac000361c4
000361e0000361fc00036218000362340003624c000362640003627c0003
6294000362ac000362c4000362dc000362f40003630c000363240003633c
000363540003636c000363840003639c000363b4000363cc000363e40003
63fc000364140003642c000364440003645c0003647800036490000364a8
000364c0000364dc000364f8000365100003652800036540000365580003
657800036598000365bc000365e000036600000366200003664000036660
0003667800036690000366a8000368540003697c00036ae000036c800003
6d9400036f50000370d40003722c000372ec000372fc000373a8000374a0
000376cc00037800000378f400037a7400037c0400037cdc00037e3c0003
7fd4000380b40003829c00038420000385cc0003874c000388c000038a58
00038a7000038a8800038aa000038ab800038ad000038ae800038b000003
8b1800038b3000038b4800038b6000038b8000038ba000038bc000038be0
00038c0000038c2000038c4000038c6000038c7800038c9000038cb00003
8cc800038ce800038d0000038d2000038d3800038d5000038d6800038d80
00038d9800038db000038dc800038de000038df800038e1000038e280003
8e4000038e5800038e7000038e8800038ea000038eb800038ed000038ee8
00038f0000038f2000038f4000038f6000038f8000038fa000038fc00003
8fe0000390000003902000039038000390580003907000039090000390a8
000390c0000390d8000390f0000391080003912000039138000391500003
91680003918000039198000391b0000391c8000391e0000391f800039210
0003922800039240000392580003927000039288000392a0000392b80003
92d0000392e8000393000003931800039330000393480003936000039378
00039390000393a8000393c0000393d8000393f000039408000394200003
943800039450000394680003948000039498000394b0000394c8000394e0
000394f80003951000039528000395400003955800039570000395880003
95a0000395b8000395d0000395e800039600000396180003963000039648
0003966800039688000396a8000396c8000396e800039708000397280003
97480003976800039780000397a0000397c00003992000039a1400039be0
00039d9000039e6000039ef800039f9000039fc400039ffc0003a1280003
a2780003a30c0003a3a40003a4380003a4d00003a5040003a5380003a5ec
0003a69c0003a7540003a80c0003a8740003a95c0003aa380003ab480003
ac7c0003adac0003adf40003ae200003afb40003b14c0003b3500003b53c
0003b7600003b7e80003b8240003b8600003b8ec0003b9b40003ba9c0003
bc640003bd2c0003be400003bf780003c0780003c19c0003c32c0003c3cc
0003c46c0003c56c0003c6300003c7c00003c9000003ca240003cb600003
cd1c0003ce700003cff40003d0e80003d2640003d3740003d4d00003d668
0003d73c0003d8000003d8180003d8300003d8480003d8600003d8780003
d8900003d8a80003d8c80003d8e00003da840003dc300003dc480003dc60
0003dc780003dc900003de380003de500003de680003dfc00003dfd00003
dfe80003e0000003e0180003e0300003e0480003e0600003e0780003e090
0003e2580003e2700003e2880003e2a00003e2b80003e2d00003e2e80003
e5180003e5300003e5480003e5600003e5780003e5900003e5a80003e5c0
0003e5d80003e6ec0003e7040003e71c0003e7340003e74c0003e7640003
e77c0003e7940003e7ac0003e89c0003e8b40003e8cc0003e8e40003e8fc
0003e9140003e92c0003e9440003e95c0003e9740003e98c0003e9a40003
e9bc0003e9d40003eb580003eb700003ed240003ed3c0003ed540003ed6c
0003ed840003ed9c0003edb40003edcc0003ede40003f0100003f0280003
f0400003f0580003f0700003f19c0003f1b40003f1cc0003f1e40003f1fc
0003f2140003f22c0003f2440003f25c0003f2740003f4800003f4980003
f4b00003f4c80003f4e00003f4f80003f5100003f5280003f5400003f558
0003f5700003f5880003f6f00003f7080003f8680003f9200003fb580003
fc0c0003fd940003ff8c0004012c000403580004049000040688000407c0
000409b800040b7800040dd000040f5000041190000413380004156c0004
16bc000418ac000419f800041be800041db40004200c000421a4000423f0
000425bc000427e80004294c00042ac400042c7000042e2000042fe40004
31a800043340000434f40004368c0004384800043a6800043c7c00043e5c
00044054000441e4000443ac0004455c000446e80004485c000449d80004
4b7800044ccc00044ea400045070000451f8000453940004551c000456ac
0004586800045a5800045c2800045e0c00045fd00004616c000461840004
619c000461b4000461cc000461e4000461fc000462140004622c00046244
0004625c000464b000046654000468c400046a8c00046aa400046abc0004
6ad400046aec00046b0400046b1c00046b3400046b4c00046b6400046b7c
00046cc800046ef0000470140004726c000473b0000475c0000477a00004
78f000047aa000047bb8000100000721008b001000da0007000200100013
0046000007e806a6000400010000007b05ca0001000000000000006c0000
00010000000000010008006c000100000000000200060074000100000000
00030024007a0001000000000004000f009e0001000000000005000700ad
0001000000000006000f00b40001000000000007003100c3000100000000
0102000900f40001000000000103001000fd000100000000011f0014010d
000100000000012300150121000100000000012800170136000100000001
00020008014d0001000000010004001101550001000000010007002e0166
00010000000101020009019400010000000101030013019d000100000001
011f001a01b00001000000010123002101ca0001000000020002000601eb
0001000000020004000f01f10001000000020007003b0200000100000002
01020009023b000100000002010300170244000100000002011f0013025b
0001000000020123001f026e00010000000300020007028d000100000003
0004001002940001000000030007002f02a40001000000030102000802d3
0001000000030103000f02db000100000003011f001502ea000100000003
0123002002ff00010000000400020007031f000100000004000400100326
00010000000400070039033600010000000401020009036f000100000004
010300110378000100000004011f002003890001000000040123001803a9
0001000000050002000603c10001000000050004000f03c7000100000005
0007003503d600010000000501020009040b000100000005010300110414
000100000005011f00100425000100000005012300180435000100000006
00020007044d0001000000060004000f04540001000000060007002f0463
00010000000601020009049200010000000601030011049b000100000006
011f002104ac0001000000060123001d04cd0001000000070002000604ea
0001000000070004000f04f00001000000070007003b04ff000100000007
01020009053a000100000007010300150543000100000007011f00160558
0001000000070123001f056e00010000000800020007058d000100000008
0004001005940001000000080102000905a40001000000080103001005ad
000100000008011f002105bd0001000000080123001d05de000100000009
0002000605fb0001000000090004000f0601000100000009000700330610
00010000000901020009064300010000000901030011064c000100000009
011f0010065d00010000000901230017066d00010000000d0002000a0684
00010000000d00040013068e00010000000d0007003306a100010000000d
0102000a06d400010000000d0103001506de00010000000d011f001106f3
00010000000d012300150704000100000012000200080719000100000012
0004001107210001000000120007002e073200010001000b0002000a0760
00010001000b01020008076a00010001000b01030010077200010001000b
011f0014078200010001000b0123001e07960001000200130002000407b4
0001000200130102000a07b80001000200130103000807c2000100020013
011f000c07ca0001000200130123000a07d60001000300170002000807e0
0001000300170102000407e80001000300170103000907ec000100030017
011f000907f50001000300170123001807fe00010004000c000000470816
00010004000c00020004085d00010004000c0004000d086100010004000c
0007002b086e00010004001f00000057089900010004001f0007002e08f0
00010005000a00000047091e00010005000a00020004096500010005000a
0004000d096900010005000a00070026097600010019002100020004099c
0001001900210102000409a00001001900210103000a09a4000100190021
011f000809ae0001001900210123000c09b6000300010409000000d809c2
000300010409000100100a9a0003000104090002000c0aaa000300010409
000300480ab60003000104090004001e0afe0003000104090005000e0b1c
0003000104090006001e0b2a000300010409000700620b48436f70797269
67687420a920313939312d39392c2032303036204170706c6520436f6d70
757465722c20496e632e20436f7079726967687420a920313939312d3932
205479706520536f6c7574696f6e732c20496e632e20416c6c2072696768
74732072657365727665642e50616c6174696e6f4974616c696350616c61
74696e6f204974616c69633b20372e30643465363b20323031312d30342d
323750616c6174696e6f204974616c6963372e306434653650616c617469
6e6f2d4974616c696350616c6174696e6f20697320612072656769737465
7265642074726164656d61726b206f66204c696e6f747970652041474c69
67617475726573436f6d6d6f6e204c696761747572657343686172616374
657220416c7465726e61746573436f6d6d61204469616372697469632046
6f726d73436564696c6c612044696163726974696320466f726d73497461
6c6971756550616c6174696e6f204974616c6971756550616c6174696e6f
2065737420756e65206d617271756520648e706f738e65206465204c696e
6f747970652041474c69676174757265734c696761747572657320636f75
72616e746573416c7465726e617469766573206465206361726163748f72
6573466f726d657320646961637269746971756573206465206c61207669
7267756c654b757273697650616c6174696e6f204b757273697650616c61
74696e6f206973742065696e2065696e676574726167656e657320576172
656e7a65696368656e20646572204c696e6f747970652041474c69676174
7572656e476562728a7563686c69636865204c696761747572656e416c74
65726e6174697665205a65696368656e4b6f6d6d6120616c73206469616b
726974697363686573205a65696368656e436f727369766f50616c617469
6e6f20636f727369766f50616c6174696e6f208f20756e206d6172636869
6f207265676973747261746f206469204c696e6f747970652041474c6567
61747572654c6567617475726520636f6d756e6943617261747465726920
616c7465726e6174697669466f726d652064696163726974696368652070
6572206c6520766972676f6c654375727369656650616c6174696e6f2063
75727369656650616c6174696e6f2069732065656e206765726567697374
72656572642068616e64656c736d65726b2076616e204c696e6f74797065
2041474c696761747572656e4e6f726d616c65206c696761747572656e41
6c7465726e6174696576652077656572676176652076616e2074656b656e
734469616b7269746973636865206b6f6d6d6174656b656e734b75727369
7650616c6174696e6f204b757273697650616c6174696e6f208a72206574
7420726567697374726572617420766172756d8a726b6520669a72204c69
6e6f747970652041474c696761747572657256616e6c696761206c696761
74757265725465636b656e616c7465726e617469764b6f6d6d6120646961
6b72697469736b6120666f726d65724375727369766150616c6174696e6f
204974616c696350616c6174696e6f20657320756e61206d617263612072
656769737472616461206465204c696e6f747970652041474c6967616475
7261734c696761647572617320636f6d756e6573466f726d617320616c74
65726e6174697661732064652063617261637465726573466f726d617320
6469616372927469636173206465206c6120636f6d614b75727369765061
6c6174696e6f206b757273697650616c6174696e6f206572206574207265
67697374726572657420766172656dbe726b652074696c68bf72656e6465
204c696e6f747970652041474c6967617475726572416c6d696e64656c69
6765206c6967617475726572416c7465726e617469766520736b72696674
7465676e4b6f6d6d61206d6564206469616b72697469736b207564666f72
6d6e696e674974876c69636f50616c6174696e6f204974876c69636f4c69
676164757261734c696761647572617320436f6d756e73466f726d617320
416c7465726e6174697661732064652043617261637465726573466f726d
61732044696163729274696361732064612056927267756c614b75727369
7650616c6174696e6f206b757273697650616c6174696e6f206572206574
207265676973747265727420766172656d65726b6520666f72204c696e6f
747970652041474c696761747572657256616e6c696765206c6967617475
7265725465676e616c7465726e6174697665724b6f6d6d616469616b7269
7469736b6520666f726d65724b75727369766f69747550616c6174696e6f
206b75727369766f69747550616c6174696e6f206f6e204c696e6f747970
652041473a6e2072656b69737465729a697479207461766172616d65726b
6b694c696761747575726974546176616c6c69736574206c696761747575
7269744d65726b6b6976616968746f6568646f74436f6d6d612044696163
726974696320466f726d734974616c6971756550616c6174696e6f204974
616c6971756550616c6174696e6f2065737420756e65206d617271756520
648e706f738e65206465204c696e6f747970652041478343835e838a8362
834e838a834b8360838388ea94ca934982c8838a834b8360838395b68e9a
82cc836f838a8347815b835683878393834a8393837d835f83438341834e
838a83658342834a838b837d815b834eb1d7c5e9b373a672bfefb6b5b6b0
b160a5ceb373a672a672a4b8b4c0a5cea672a7ceb372c249bcd0adb5b2c5
c0ccc5c5b8afc3bcc7d5c0dac0cfb9dd20c7d5c0dab9aec0da20b4ebc4a1
c4deb8b620b9dfc0bd20b1b8bab020c7a5bdc320c7fcbdc4286329203139
39312d39392c2032303036204170706c6520436f6d70757465722c20496e
632e2028632920313939312d3932205479706520536f6c7574696f6e732c
20496e632ee5c7c6e450616c6174696e6f20e5c7c6e49850616c6174696e
6f8ca0e7eaa0e5c7d1e3c9a0e5d3cce4c9a0caced5a0984c696e6f747970
652041478c28436f707972696768742920313939312d39392c2032303036
204170706c6520436f6d70757465722c20496e632e2028436f7079726967
68742920313939312d3932205479706520536f6c7574696f6e732c20496e
632e50616c6174696e6fa0d9e4c7e5caa0caccc7d1e9a0cbc8caa0d4cfe7
eca0d4d1e3ca204c696e6f7479706520414728632920313939312d39392c
2032303036204170706c6520436f6d70757465722c20496e632e20286329
20313939312d3932205479706520536f6c7574696f6e732c20496e632ef0
e8e5e950616c6174696e6f20f0e8e5e950616c6174696e6f20e4e9f0e5a0
f1e9eeefa0f8f9e5eda0f9ec204c696e6f74797065204147d0b1cce5c1ac
d7d6b9abb9b2b5c4c1acd7d6d7d6b7fbb1b8d1a1b6bab5e3d6d8d2f4d0ce
cabd0043006f0070007900720069006700680074002000a9002000310039
00390031002d00390039002c002000320030003000360020004100700070
006c006500200043006f006d00700075007400650072002c00200049006e
0063002e00200043006f0070007900720069006700680074002000a90020
0031003900390031002d003900320020005400790070006500200053006f
006c007500740069006f006e0073002c00200049006e0063002e00200041
006c006c0020007200690067006800740073002000720065007300650072
007600650064002e00500061006c006100740069006e006f004900740061
006c0069006300500061006c006100740069006e006f0020004900740061
006c00690063003b00200037002e00300064003400650036003b00200032
003000310031002d00300034002d0032003700500061006c006100740069
006e006f0020004900740061006c006900630037002e0030006400340065
003600500061006c006100740069006e006f002d004900740061006c0069
006300500061006c006100740069006e006f002000690073002000610020
007200650067006900730074006500720065006400200074007200610064
0065006d00610072006b0020006f00660020004c0069006e006f00740079
00700065002000410047b8003c2bb800322bb902ec02ee4034191f800680
07025006500702400640070230063007021006100702d006d00702800680
0702df02df03027f027f0302cf02cf0302b80132b297221fb802d0b26630
1f410a015c01e20004001f013d018b0005001f01be010fb20a1fb3b8011b
b2891f77b80124b5411fb39a931fb8011ab2fd121fb801d5b3fd0f1f77b8
0124b2411f77b801244016411f0100010100090102000800464600000012
11084041230266022c012e000d020b012e000d01f6012e000d0127012e00
0d02240154000d02120154000d01fb0154000d01f80154000d01b1015400
0d01a30154000d022300cb000d01ae4017cb0df8cb0dddcb0dbacb0da7cb
0d96cb0d6ccb0d6bcb0d412b023001b4000d022b01b4000d021a01b4000d
01b801b4000d018c01b4000d015d01b4000d00e001b4000d00de01b4000d
00af01b4000d00a801b4000d00a401b4000d008a01b4000d008401b4000d
008001b4000d0234b40fd50f0009bb023400d5000d0201b285561fb80200
b285791fb801feb285ab1fbc01fa006f0801001f01a4b285721fb801a2b2
859e1fbc01a100850801001f01a0b208101f410d019f006f0801001f0198
005c0201001f0197005c0125001f0194b25c931fb80192b25c791f410901
8e00640156001f018b006e02ab001f0189b26e9e1fb8015bb285521fb801
5ab2855a1fb80156b2632d1f4109015200640156001f014f006e0401001f
014cb26e791fb8014bb26e721fb80130b285ab1f4109012c00c80801001f
0126005c0801001f0125b264721f4117012300640401001f0121006e02ab
001f010b00610801001f0106008802ab001f0105006e0801001f00f50158
0201b21ff26fb80401b21ff163b80801b61fef64bb1fed64b80401b21fda
c8b80801b21fd864b802abb21fd688bc0401001f00c9015802abb61fc664
181fbcc8b802abb61fbb64ab1fb96eb80401b21fb86eb80101400f1fb76e
721fae853f1fa65cab1f9d6eb8019ab61f9c6eab1f94c8b802abb61f926e
ab1f8c66b80801400b1f895c9e1f7f5ccd1f7963b80156b21f786eb802ab
b61f7264301f6988b80401b21f685cb80101b21f6064b8040140151f5d5c
671f5b64bb1f6471281f8871421f7155301fb802d1b2633b1fb902d202d3
b2341fcfba02d300df02d340090285662e1f7a61961fb801584023633c1f
6163301faf63bf6302af66018066808502551f091f090402311f9f029f03
0290b801c640490790e50790d007909807908707908607907c07907b0790
7307906a07905e079059072408220820081e081c081a0818081608140812
0810080e080c080a080808060804080208000814b8ffe040320000010014
160000010016061000000100060400000100041000000100100200000100
0200000001000002010802004a006f41090266007f0266008f0266000300
af026600010173744bb0c063004b6220b0f65323b8010a515ab005234201
b0124b004b544218b9000101ff858d16763f183f123e113946443e113946
443e113946443e113946443e11394660443e113946443e11394660442b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b
732b014b5079410c001f02100007001f01f30007001f01530007001f0139
00072b2b2b2b4b5379410c009002100007009001f3000700900153000700
90013900072b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d5974
73732b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004569534201
4b5058b108004259435c58b1080042591610703eb0124358b90add3f121b
ba00ae03f1000b2b59b00a2342b00b2342003f3f182b103c012f060cb006
2342b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b0
0d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342
b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342012b2b
2b2b2b2b2b2b2b2b2b2b00737475737374747474742b000000>
[16065 16373 16329 16369 16357 16145 16325 15833 16337 16309 16133 16285 16265
16217 16361 16161 16261 17709 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> Palatino-Italic AddT42Char 
1 2160 10 <0001011e0412024f05dd000a001bb90001013cb2050008b801afb3002101
0b10d61ac8fd003fed31300123133e01333216151407015b3d7d102d1e2b
2e1d0412017630252d252229>Palatino-Italic AddT42Char 
1 2780 15 <0001fff6fedd018400f9000a002c400f012100fa80040304210706970b04
07b801bab30021010b10d61ac8fdc80010fcc01ac8381afd1ac831301327
3e01373637170602070610306b267b3e142cc34afedd1338e2b41f1c1b68
fece4d000000>Palatino-Italic AddT42Char 
1 2924 17 <0001006afff6013e00e8000b001b400a0397090a400650060206b80132b1
000c10d6fd5d003fed31303734363332161514062322266a483229314731
2834623a4c332d4250380000>Palatino-Italic AddT42Char 
1 6604 30 <0002ffbdfedd018f03d1000b001600404017099703070d210cfa80100310
21131297174f005f000200b80132b2061013b801bab30c210d1710d61ac8
fdc8d4ed5d0010fcc01ac8381afd1ac83fed313013343633321615140623
222603273e0137363717060207bb4832293147312834ee10306b267b3e14
2cc34a034a3b4c332d425038fbc61338e2b41f1c1b68fece4d000000>Palatino-Italic AddT42Char 
1 7700 36 <0002ffff000005840594002d003000e4409f0609060a190919303a093a30
4809483058095830690a6c156c16691e780a7d157d16781e880a891b891c
891d891e980a981ea80aa81eb80ab81bb81cb81db81eb624b626d705f505
f622253030212f1f471e1e660a09140a090a301e302e2047212164070814
0708070708011e0a0a1109300801098f110111321e212a200a070208111f
20712f2e2e2a30300908022a161103015513582c5812152b00080300173f
3ce4e4fd173c3f3cc81112392f3cfd3c11121739111239390110d65dd4c4
d8c011123910c811123910072b1076c0c008c0181007052b1076c0c008c0
3130015d233536373e013f0101331316171e01171617152522073536373e
0135342f01032103060706151416171617152522012103015a0c0710425d
02b45fa70c090715150663fef61acd6c1c1310010c27fe0d9e570c041527
115dfef24301dd01b84c3b0805031062900447fb48551b121103010a3b08
083b04050514190e0f7c0128fef9981f0c0a0c110402043c08027d024500
0000>Palatino-Italic AddT42Char 
1 11132 44 <00010012000002ce05860026009f407a09000901060e060f09220923160e
160f6b006b017a0e7a0f73227323830083018b128b139400940199089a12
9a13ab12ab13b912b913ca12ca13d500d501db09db0adb0bd90ed90fdc12
dc13e418e4192800055607470e0a560808661c1a141956121a471e562210
1c28130e551058120f022201552558230008003f3ce4fd3c3f3ce4fd3c01
10d02bc0e076d018c0e02b10e0c076d018f0c83130015d33373637363736
1213363534262f013705323707060706070607060b010615141716170726
232212066d100b09115d45231823770a01294688046a0f0b060a06203952
200e1c86078e70703b040906102001e101a3d43820180305380404380506
04080c1c8efeb4fe33c3351b0810023b0800>Palatino-Italic AddT42Char 
1 13932 51 <0001001c000004bb058b003f00ce408d75247525792d03251825193a2945
1e451f5a005a01592d690369046905692d790479057a0e7a0f7824782587
0e870f8c298c2d911e911fa908b634d519f500f5011d0d2e0125251b3331
563247333b3556333366060814010556064708560e100a2b85c01bf01b02
1b41330806010f4025242127712147213b2f31582f7113580e55170f023b
01553e58003c08003f3ce4fd3c3f3cede4fde4111239762f18ed1ad8c41a
11123939390110d65dedd42bc8f076d018f0c82b10f0c81076d018e40111
12392f313001715d005d33353e0137363736131235342726273732171633
32373633321e0115140e01070623222627351633323e0135342e01232207
0b0106070615141e0117152623221c7a1e0a10290b513e131d8704069050
40444c7e348f8d594e80455f6e35542d4453559b5b3c89663d5a435d2704
0218486d9c612040070e111ad53901e0017036200b120337040202043e97
5961c38d253217193f2960c16d597c4211fe95fdf8ed27150e1c1d0d043b
0700>Palatino-Italic AddT42Char 
1 15660 55 <0001007300000514058b003f00cc409823002301230623342335233b233c
4a004a0164136414751375147b3b7b3c860086018413841493139314ab03
ab04ab06a213a214aa3baa3cb113b114dc15dc16d33bd33c221512121312
142513251405135516c0140114142f3b345632472f563131660809140b56
09470800065610082555243f206f20af20bf200420410908313204010b14
242f0b711bc12016023b5501553e583c0008003f3ce4eded3f3cf4fd3cd4
3c111217390110d45dd4edd02bf0c81076d018e42b10e476d0e0c810d02f
5dc4ed313001715d33373637363736373613123722070607060706072336
371617043332253637363706070607233635342726272627262306070302
070615141617161707262322e405891b0b050e26134a32167ea24b120d0b
1224381e044350012b81130135a0200f29110b051738020603090f2496aa
0c1563340b041423127e0ad052653d080e060916c46301ab011bc606030b
07182894fc530502070502020104483a21ac55125610080508020b367afd
d0fec568211118130503063d0700>Palatino-Italic AddT42Char 
2 2560 62 <00010025ff2e029905ce0021006a4030490149025403561555175419541a
8906aa06a615ba06da01da02e816e519e51af90611166304051408560156
04470505b802e240150d1d141d47100d23050400091d5f001e090e5f0d10
003fedc4d4c4ed111239390110d42b76c0182b1076d018e0e02b3130015d
17273637121312363f0116333237070e0107060706030207061514171617
072623222e0912103c33531d050d563f12ba03b012050806184057162220
18a50a715f5ed10b42540148014f0227de580a05043a0e0607081664fe6e
fdd498eb101e0b080b3b08000000>Palatino-Italic AddT42Char 
2 2840 64 <00010010ff30028505ce00210078403b071a161a371a47164717471a561a
661a761a861aa51ab61ac616c71ac71bd616d71ad61be808fb08f80a150b
470a0a631a19141d56165619471a1ab802e240150010141047100022191a
0015015f001e15105f1110003fedc4d4c4ed111239390110d42b76c0182b
1076d018e0e02b1076c03130015d17373637363736373613361336353426
2737163332371706070a0107060f012623221009a01509060a06113c0875
1b2fad087e3a2b990b1c1432770c120c0e4f4f37ce3b070803080a184901
7c3402edb00e231d063b05050b816efee0fd005c86970b060000>Palatino-Italic AddT42Char 
2 3296 68 <00020024ffe9034f03d10033004800b0406a390e4e0e4e10ab01ab02bd01
bd02cd01cd02dd01dd02e70beb100d1a021c1002360f35103646a40ea40f
af46a44707720e010001012b090c0b47103417613f3f2b56346325271427
47104024215f256025bf25cf2504254a473442370c0b2313202524377220
0700b501b801a0b6305c425c06130b003fc4ededf5ed3fedd4c011123939
39111239390110d45d1ac81a2b76d0182bf001c02fed102b76c0c0c00110
c82fc0005d3130005d01715d2517070607062322263534372706070e0107
062322272635341237363736373633321617371706070607060706151417
16333236032e01232207060706070615141e013332373e0203440b96472a
0e0c122242074b2b4ea14213111b101b5d40203b614e35402c4d3c401640
311e0b130b0208070c10335125522d572d151933253a09120813274daa6e
d52b74331207261c6af7036a325d881e081a2a648001587f402d4a1d130e
162612ddc5763b5d54100b140b071a02b512111d0d356a83cc9b1b1a0d1a
35c6fc000000>Palatino-Italic AddT42Char 
2 3692 69 <0002003fffe8036405cf0027003a0077404b2b1938003919491946254626
691907201b5619471818633a00142500473a109028af28bf280328307a4f
0a5f0a020a3c3728342b0018191404061020b621d5402521240034680607
2b100b003fcd3fed3f1ac81af5ed11121739111239390110d65dfdd45d2b
d076d018c02b1076d0f0c83130015d0136373e02333217161514070e0223
22272635343736373613363534272627373e013717060703141633323736
123534272623220e04012845243c80842f2a15254b39a7d356573d3d0402
152371210f158305927545190e11dd5147513e5284170f262f5a64593635
02995b263e52251f3a7da9b68cb67035353c161811609e0274ba2919080c
022a131f22153156fba146503648016f9a5e1f162252787aea00>Palatino-Italic AddT42Char 
2 3988 70 <00010044ffe6032603d5002c0095405f7f007c2c8203820494039404a203
a226a22aa22bb203b226b22ab22b0e1a0d1a211a22290d292129228c0e8c
0f8c219d0e9d0f9d209d21ad0ead0fad21100b7a4024016f249f24af2403
240101101619b51840160170169016a01603162e19b80137b71f72130740
002101b802a0b32872070b003fedfd1ac81a3fede40110d45d71d4ed102b
c4012fd45d71ed3130015d005d2517060706070623222e0135343e013736
3736333216170607233734272e01232206070615141716333236373602d5
0f6a375346343948733e3a5d2f608645443356241c122f010b0d5539667d
2e3923305d2c5d3d25e92c56233517123c8c676ee99b2750391e1a1b7092
6d220f13206692b5856a374d1d2316000000>Palatino-Italic AddT42Char 
2 4276 71 <00020033ffec03dd05d2003a0050010440aa280d241724182419261a261b
244138083809380a4a0b4c0d4a324a334a345631710c894089419c019c02
9c03a930a94fb417b442c5171b0f0e01160f1610161a161b200d200e260f
400d500d7419741a743f7440794d800d9719971a97409741da4e14450e55
0e750e030d48302c00010132157a45d045e045f0450345322356203b470c
4f4f632c301432304710402b21002c902ca02c032c524d3b483d0c0d2012
1e3d721e0700b501b801a04010365c485c06120b27b628d5402c212b0000
3f1ac81af5ed3fc4ededf5ed3fed1112393939111239390110d45d1ac81a
2b76d0d0182b10c076d0d018f00110c05d2fed10c82fc0080210c0005d31
30005d01715d25170e01070623222635343637270e010706232226353412
37363736373633321737363534262327373e013717060706030607061514
163332373603262322070e02070615141e013332373e023736039c133b9b
381f11121e0d37054bd6674128283445372a36556d353f32722c0e192662
057b6f53191027186b350f04100d122043985d64492f21334d14210c130e
191d4d8d712218dd253570180e2930204df10180de382375557501216a51
324e311718fb51141f18012810202b143cc57efe03fb65201a1b15142802
8f31150e43da568d772d260e0e2684ac63460000>Palatino-Italic AddT42Char 
2 4776 72 <00020025ffe802f803d00021002c00934069980d982a982ba102a121b202
b221c002c021d90ce52bf615f52b0d090e0415041603082c192c9c0b9c0c
9c2bd70a06060a0122211a471a0410296e100740002101471f72040b221a
1c614f085f088f089f08bf080508082d132661014f135f136013c013d013
05132e10d65dc4ed1112392f5dfdd0c0003fed76d4181ac81a3fed111239
762e181ac9313001715d00715d25170e0123222e01353412363736373633
3216151406070e010f0106151416333236013e0235342623220e01029f0d
73e14e3371414c4c425b6748434b612b2635bc66821357413a90feb980b8
5333293a7748e227696a35706771011188354b3022504834662533581d1f
663a626239015c185b833c3336458a000000>Palatino-Italic AddT42Char 
2 5064 73 <0001fed2fdc9035b05ca003c00aa4061aa08ba08fa2ffa30042a2f2a3002
1a2729273904390539064a044a054a064a074a1e4a205b045b055b065a1e
5a208b078e1589169a069f079f149f159a16981719253819030363192414
241019192d0d2f2d0f000d013f0d8f0d020d3e1dc10319b802d440174001
21244f395f397f390339390b2b13680b01325c2b0e003fed3fed1112392f
5dc41ac91afdc4e40110d45d71c4d4c41112392f2bc02b11123939313001
5d00715d1337363736373e023736333217060f012e0123220e0107060736
3736371706072623220703020e010706232227363f011633323e0137361b
012623224e097b3532060d41c535242e3e44281116194d2a2f4128172112
7f14222409170c382c294577415e9b5535332027220d192c3b233e3c1d32
31543b142303032d2d22f4162f509a18101b6c3a0723282a4a6f99600302
040b0c41350302fdd2fed6e9b22c1c1364400638225670bd011f01f20100
>Palatino-Italic AddT42Char 
2 5424 74 <0003ffd5fdcf03ef03cc00390046005500ff407b092207237a2c76317c47
764c765079547e55832d853189398c478949854c8550992c9431944c9450
a92aa92bab39a34cbc39b24c1a061206131612161326122613351235133b
383b4939554a0e4b474b555a0e5a475a556b0e6b476b557a0e722a7b2b74
2ccb19cb1ad919d91a1c260710094721000033091a581eb802a140401958
143dea0914093310446e10074eea330e0726141e04200c47005204286104
04200c52612f2f20364b6136413a61bf0c010c4161602070209020032020
56571112392f5dfdd45ded10d4ed1112392fed1112392fed111239391112
1739003fed3fed111239392fed2fe4fde4111239101ac811123939313001
5d005d252e0135343736370623222635343e013332171617363336371707
262322071615140e03070615141716171e0115140e0123222635343e0113
141633323e01353426232206130e0215141633323736353426270166200d
101c5d1c137d866fde755e3e2f215c081c2d04101c14213304263947753b
381d1d9653385df2a3b9ac46c04667564b6a376253777d655896408f8a98
5a42292f2522190b121a2b5201827676cb80221a34030307056402042218
446b5945420e35262521227c446a32438b6b8c673f807b02356d6f5ab259
696acefd421661723c5a7b46334b274e28000000>Palatino-Italic AddT42Char 
2 5924 75 <0001001affe903bf05ce0048013b40d04f074e084f104d120429193a1974
2d742e8b2c872d872eda19ea19fa190a0a030d040d140d43193827016903
6a0869127d047b1378147a2c7934793579417b4386018903892c8d2d8a34
8a3589379519b923ca23c825c534c535c836d636e923e924e925e637f923
f924fa25f93728400f21100c060347015602026345141446564547105610
141401141f35563847393963242314232d24472310001f011f1f2f1f4f1f
5f1f941fa11fc01f071f4a45463f3539383240060203010c171514001c24
232a1c3f5c1c074601000b2cb52db801a0400d2a5c320b0cb60dd5401021
0f00003f1ac81af5ed3fedf5ed3fc0c03fed111239391112393939111239
393911123939391112390110d45d712bd076d0c018102b1076d018e40110
d05d2be076d018e02b10e076d018d0c401101ac81a3130015d005d017117
2712373612373635342e01233736371706070b011736373e013736333216
1514070607060706151416333237170e0107062322263534371336373635
34262322070e020f0206270d4a2b374f10020f286e05e367141308585107
502f51a7563c2017210507234025110f0b26871436b33f120e131e154b28
0d0414131e2155bf6b1d2b6713130e011dc5f701be74110d131307292430
144c28fe6cfe7b04663359781f15221a1419228cfeb452190f1166252e79
1c08282c28560140a850190f1113112cbed37ee51605>Palatino-Italic AddT42Char 
2 6456 76 <00020049ffe8021b05a5000b0033008b40139a0c9a0eba0eba1804892789
28892ce52a0400b801304022060614210d0d2c472b2b6319181421194710
18a9140114351419181d102b2c302509b801a5b403010cb50db801a0b740
305c100720b521b801a0b31d5c250b003fedf5ed3fed1af5ed3fed111239
3911123939390110d45dd02b76d018c82b1076d418c8012f2f10c02fed31
30015d005d01343633321615140623222601273e01333217161514070607
021514163332363717060706232226353436371235342623220706015c46
2d23293c32232efefe11b17822130a0e070d2a6d0f0d143d5114a252271a
19270e1c750b0a0c11080520384d2b26345730fdf0287b3a0d1324111f3c
9ffe6b4915131d3c287c2a142e29204e6601a464150f07040000>Palatino-Italic AddT42Char 
2 7564 79 <0001004cffea01fb05c70029007740482a082a092a0a2a0b3b083b093b0a
3b0b6f006f016f02a809a520a521a5220f01171713560d0c0c631f1c1401
1f101b21001c011c2b1e1f251c090c0d03061717b618d51b0100b501b801
a0b3255c060b003fedf5ed3ff5ed11121739111239390110d45d1ac82bd0
c02b10c0f0c0012f2f3130015d25170e0107062322263534373613123736
37363534262327373e0137170603020706151416333237363701c4111ac0
3c1d191c21070a553d102811041b2a5c05608e531a147e660f03140c090b
1637db29178b190d292c25243c0179010e53cb7c1b1a1c1701290a242210
5bfdaefe1f6d130e1518050924000000>Palatino-Italic AddT42Char 
2 7820 80 <0001003bffe805dc03cc006c019140bc070407693835394d4a354a4c5803
6935694c79357c3e7c3f7c407c41794c840189358f3f8e40894c855a855b
846b9603950f9110932c963f995e966aca4cca4dc55cca5dd94dea4bea4d
fc08f949f94af9602907340735073609570402673a1f3a2b4a1f492bda20
da2ceb20eb2c09ab4001407010011010d908010856044701560303636a1c
146b566a471c561a185b565cd95f015f565d5d6357291429585657472956
282550564d474a564c4c633534144035473410319a180118b802a6b39a25
0125b802a6402d1f312f315f319431a03105316e504d4c45645f575c5d6a
646b35343a22252829181a1c6b22080403010b0fb510b801a0401a0b5c15
5a525c2e5a645c2207016b000b5b585a0b3fb5b4400140b801a0b33a5c45
0b003fedf55ded3fc0c03fc0c03fedf4edf4edf5ed111239393911123939
39393939111239391112393939393911123939390110d45dfc5dfc5d102b
d076d018c02b10e076d018e010d0f076d018e0102b10e071d018e010d0f0
76d018e02b10e076d018f071c8012f5d2f5d3130005d01715d1727373637
3637363534262322070607273e0137363332161514070603363736373633
321615140706073e013736333216151407060702151416333237363f0117
0e01070623222635343e01373e0135342623220e03070607273612373635
3427262322070e0307066b0e3920181f0f07110c0f1d373a0e30a7381d15
151708023a61416e734d3a19180b083265d5724e3319180d16404b110b0d
1016254e102dad3419151724082d312815110c1a789a6246283d4f0e2f59
110c0a070d1b283d906d46244e0c11cc7a73946f331b1d17101c292b266d
160a181a182d0efeec85416c3d281617273f2bdc8cb73523181a1e3e6aed
fee93b141507081836272674150a28241c309fc5a48e0c12143e959bdfee
0a130ea7018978561e160c09161f90b3f8c60d000000>Palatino-Italic AddT42Char 
2 8532 81 <00010041ffe9041803c8004d013d40ca3920c921db21ea21fa2105092101
04020529052a02310232053e044a1828183f2728273f7a03740d740e7a1d
7a1e7928793f7a498a03891d891e8a288a3f89499803981d9928993f9849
a72aa648a649b649e502f6022407400a410a42484104a00eb00ec00ed00e
f00e050e48324a1d1cd6050105560301560202631d4a144c564a471d5610
1c05187018b018f0180418263f474040632928142832294728105026010a
262f264f265f269126a02606264f45403f384405030208014a181e1d0014
2628292d140db50eb801a0400e085c14445c23074c01000b31b532b801a0
b32d5c380b003fedf5ed3fc0c03fedd4edf5ed1112393939111239393939
111239393911123939390110d45d722bd076d0c018102b181076c0180110
d45dd02be076d018e02b10e0d0e0710110c0762f762f5d313001715d0071
5d1727361336353426232207060f0127373e01373633321716151407060f
01173e013736333216151403021514163332373637170607060706232226
3534373637123534262322070e0207060706760d4439290e0d0c0d19254f
0d5d36771c0e10150c0f04081e2d0757e47d5a2c1b21455d0f0c0f21453a
115536612e13151c21080f3c491412212f4da66e2a1021491111d40126d8
431611040916342945264208050d131d131c2c79b9028edb3929222045fe
f5fe9c3f141111272d2845243e120825261e2c4ce9011a3f1e171a29abc1
9839b20c>Palatino-Italic AddT42Char 
2 9076 82 <00020027ffe9034503d10012002100544041350735083911391246074608
55075508680c9b03960e96199a20a90cab1ee80ce90dfc07120b071a0702
1f6e0607176e100b1361b00001001c61bf0acf0a020a2310d45dfdd45ded
003fed3fed313001715d13343e0333321e011514070e0223222637141e01
33323e0235342623220227345c86a84e4882483d317ec76378909f2a553b
415f5d2a5c5a909b011f7bd79e79493f85749a9a7a976b9ba960643444b6
f7627d83fea80000>Palatino-Italic AddT42Char 
2 10096 85 <00010030ffea030f03d1002d009c40519904ba04b819bc27be28da04fb05
070b051a052b0503691b691c7b1b7b1c8b1b8b1c9b1b9b1c080e0e070347
0101632c2a141017192a2c4710001620402321222f2001202f2a25191207
0403000b0db50eba01a000250130400a1e5a0b5c1207012c000b003fc0c0
3fedf4edf5ed1112393939113911390110d65dd41ac81a10d45d2b76d018
013939392b2b1076d0d0d0012f3130005d01715d17273637363736353427
2623220727363736333216151407060736373e01333217060f0126232207
0e01070607067612321a32190e08050b2287188765462212160e16256a6c
444822121611111b1e252229428d2b18335a160ea96fd9a861251a0b0862
2170362618191b477ea4b982522a0b588506281c2cd59752f814>Palatino-Italic AddT42Char 
2 10392 86 <00010017ffdf02c003cf003a00c54054742f7430743170328b189b18c611
d411e60fe631e635f9140c64306431022e2f12110409280f221f222f2203
22286e401e211b070003100320035003040347096e400021380b11120d15
2f2e332bab2bbb2b022bb802d240224f1501150004ea03747f008f000200
003b331e7423ea4f225f220222a00db00d020db802d3400a7f338f33022f
3301333c10d65d71ed5dd45dede41112392f71f4ed10d45ded5d11123939
11123939003f1ac81afd76c45d183f1ac81afdc45d111217393130015d00
5d373e0137330716171633323e0135342e01272e0235343e033332161706
0706072326272e012322061514171e01171e0115140e0223222617171004
320130293637436e392336587e5c352d5978593b3a652c0e06040d2f0102
235f3b5e732625e8273a3c4185995b376217676641a82711163a693e2c40
190d132e5f3d396053481c191a2f241680522927266c4d3d2425230f1756
3c47806f4c190000>Palatino-Italic AddT42Char 
2 10760 87 <0001006bffe7028f051e003200ad4050fa01fa02020a010a02022c0f2c26
29273a083a093a0a5916591b591c591d6a17c9150c2310101714470c560f
d90f010f63261e1426012926471e4019211a4710234b1e011e34191e4011
21102458260fb802d440152258140f1e1f1e3f1e4f1e5f1e7f1e061e0600
b501b801a0b32e5c060b003fedf5ed10d45dd4e4fd3ce4d41ac81a10c401
10d05dcc2b76d0181ac81a1076d018d0c0102b7110e176d0c418c0012f2f
3130015d00715d25170e0107062322263534363f01361307373e01373e01
3f0217060706071633323717072227060207061514163332373637021d17
5ab32a17161a26080a2d1730ab05513b270f0d18574618280308292d1b63
2a0a182aae124d0c0516100d0e1d2cee24497e120a3138183d34cd6d0104
041e1f19144e51ba252312a10c23cb020d08620553fe715a24141717050c
1e00>Palatino-Italic AddT42Char 
2 11092 88 <0001004dffe6040e03d00048015240dc333634384600433745384648a436
c628f233f0340a0638133314341438433805151d261d3b0a3b423b43450b
4a366a427941831f8320833188419d0b952096319b369c3f9a419b42ab38
b60bba42bb43bb44bb48c70bc420cd27c728c942c948d727da42ea27e933
e934eb35ea36ec38f733fc382a090b040c040d05330d3808400b444a3e08
27010141474040630a0b140b47100a4b08a90802081a2e56324717563333
631d1c141d102720561d471c56104019212f1a4f1a5f1aa01a041a4a1d1c
231a322e34332b1716140f17080b0a0f054441403e3b4700b501b801a040
0b475c05071a17190726b527b801a0b6235c2b0f5c3b0b003fedd4edf5ed
3fc0c03fedf5ed1112393939391112393939111239391112393939391112
39390110d45d1ac81a2bf076d018f001c82b102b10e476d018e00110d45d
d02b76d0182b1076d018c8012f2f313001715d00715d1327363736333216
151407021514163332373e01373e01373637170706020706151416333236
3717060706232226353437363f012706070e010706232226353437363736
353426232261145c963e211319108c110d121c49b44b2d44211a6f0f3627
490a04120e0e2f6316aa47341d131f04081e290666144bc1571c151c2c27
3919100e0c2102ef274553221d191742fdc76417150f27bb7948d0b1041c
0fb58efeb244222019161a4b2689281d2522141e2f8ab00392195ca9290d
373a4e9de887571c10100000>Palatino-Italic AddT42Char 
2 11644 89 <00010026ffe303cc03c6003d007d4035892b9a2bb412033d011c5c240738
36c13ba6400a2107c101c109030613722f0b22281f360a334009210a301e
211f1f18103db50100b8010840121063331863602870289028a028bf2805
283f10d65dfdd4edf4c4ed1112392f1ac81ada1ac81a111239111239003f
ed3fd4e4e41ac81afdf5c43ffd10c43130015d1337363332171633323717
06070e0215141633323736123534272623220727363f013633321e011514
0e01070e0123222e01353412370623272207060726542e27242c7c2e3732
1257193849225b444d4b657e1b142a1a1c161f123f13152742254478475e
af3b36703c83ae3235594039153202c3ee0f040d111b722657a79e4a6f6b
425701567d4922191123191243092b583960d7d4526b5f407a4d920115c0
09030b205e000000>Palatino-Italic AddT42Char 
2 11952 90 <0001002bffe5059103c7005c0103408d5002500350046a186a19cb18cb19
dd18dd19091d181d192c182c193d183d1906071f1c001c011c021c031c0d
1c0e161f2d002d012d022b032b0d2b0e251b251c261f3b1b3b214b0e4b1b
4b21592059215a49692069211b1e380a4f00010002305c38075856c159a6
400b2108c102c10a0406281472424e0b363b33560b52400a210b0b104633
332d255cb50200b80108b2106352b802d640104648461c401e211f631c25
63df460146b802d5400f2d63603b703b903bbf3bcf3b053b5e10d65dfdf4
5dedd0fd1ac81a11123910f4edf4c4ed1112392f101239da1ac81a111239
111239003fc4fdc43fd4e4e41ac81afdf5c43ffd10c45d1112393130015d
00715d13363736333217163332371706070e01151417163332373e023736
37363717070e010706151416333237361235342623220727373637363332
161514070e01070623222e01353437070e0107062322272635343e013706
23272206072b0e392e241e902e1d353d115a2d4646271e2d18182862541e
3925474f0e3318370a084d3444435d74392a1c201a3b082b1f1a3f523f4c
cf5b443928552d145a2e743521284a2f3d4ca443365a6a32222a02b8688e
0c0903131d6d4b77e67c6734270c1676a567bfe90a1e0ba953f7503b345a
5b3d540149804c47101d3808300a62678498b9f22e242f5d3c5864a04b72
180f3a4d8767d1e4450e021f7200>Palatino-Italic AddT42Char 
2 12476 91 <00010008ffe703cc03d00048012340a1d71cd21e02450d4b0f4633423686
0d861d8533d91dd632097b207b2189208921853585369921992296319435
9436ea3bff03fc04ff05f61bf61c11921e9a32020c410c42141c141d4516
4517431b431c4b2f4b3050165017501b501c5a2f5a30692f693068439944
a532a533a135bb30bb31bb41e9441b4732013243321e4a1e011e630d4314
0d0d1e0d430d431e32041a47292d5c240715b516125c1a073bb53cb801a0
4038375c400b04075c470bd60dd643020d431e32043c16213b3c1521a016
01163c1628034004210300402921280026602670269026a02605264a10d6
5dd41ac81ad4d41ac81a111239392f5d1ac02fc81a111217395d003fedc4
3fedf0ed3fedd4ed3fedc4111217390708102b711009c0713031015d0072
5d017100713f01363f011716333237363736370227262322060f0127373e
0133321716173736373e01333217060f012e012322070607060716171617
1633323637170607062322262702070623220813040227171b15231b2e42
225e2a31182a1d332b1a24781a3b21623225177032392a461e1f1f110e1b
0f1b16211e2931206622101b23161c1c3d44177c4d2525414c1ea55d333c
2f0264202c073a11111c562c9801254c25192d1a15ab12115942d6a94938
2a1f11515d061b121017392592cd426b2517213d24762f179ee9feed4c2a
0000>Palatino-Italic AddT42Char 
2 12988 92 <0001ffeffdcb03e703cc005200c74075ce2601040c04472a3d2a442a4939
3d38443c4e3c4f493d5a3d5b4e5b4f6b3d6b436e4e6e4f74017a3d793e7a
4393019a23b725b726df05d525d526df4fec0f1e31631725261a19471717
3c0d0e473c3c6345471445474745404021415447454d413c3e302f352a1a
19170e042113413e400725b526b801a0400e215c2a063561130b0001076e
4d0e003fedd4c43fed3fedf4ed3fc0c01112173911123939113911123939
0110d61ac81ad0c0072b1076d0c01810c4012f76d0d018d4c010ed313001
5d005d03371706151416333236373e01371306070e012322272635343736
35342726272623220706072736373633321615140706151417163332373e
0137363736373637170607060306070e01070e0123222e0135340c631502
4d37244f202b66404d494c83551c2016230e1807040a070a1e6011081b75
6338211d2312160c0a11111126692f4e3622393b5c161c1b2f5242213d83
5e468d3f2c562bfe8e4307130c3e50252632e3d601166f52903321326026
7adba7431e1309064a0d0524643e23324d41d1f56e33120d09156c467296
5bef091d143b5088fee6e560b8e85a443d2b4b2b0f000000>Palatino-Italic AddT42Char 
3 10180 171 <000300befff606e900e8000b0017002300324009030f1b972115090a1e41
090132001801bf00120132000c01bf00060132b1002410d6fdf6fdf6fd00
3f3c3cfd3c3c313037343633321615140623222625343633321615140623
2226253436333216151406232226be483229314731283402ac4733293047
30293302ab48322a3047302934623a4c332d425038343a4c332d42503834
3a4c332d425038000000>Palatino-Italic AddT42Char 
1 0 0 <0002010000000500050000030007004840090504e8000607e80201b80256
400d0303000a0605e8030704e80100b8024fb2020203bc01340009010f01
e600182b10f63c10fd3cf53c10f53c003f3c10fd3cf53c10f53c31302111
21112521112101000400fc2003c0fc400500fb002004c0000000>Palatino-Italic AddT42Char 
Palatino-Italic /CharStrings get begin
/space 3 def
/quotesingle 10 def
/comma 15 def
/period 17 def
/semicolon 30 def
/A 36 def
/I 44 def
/P 51 def
/T 55 def
/bracketleft 62 def
/bracketright 64 def
/a 68 def
/b 69 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/h 75 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/v 89 def
/w 90 def
/x 91 def
/y 92 def
/ellipsis 171 def
end
Palatino-Italic /Encoding get
dup 32 /space put
dup 39 /quotesingle put
dup 44 /comma put
dup 46 /period put
dup 59 /semicolon put
dup 65 /A put
dup 73 /I put
dup 80 /P put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 201 /ellipsis put
pop
end
%ADOEndSubsetFont
/DFQKRZ+Palatino-Italic /Palatino-Italic findfont ct_VMDictPut/DFQKRZ+Palatino-Italic*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle 4{/.notdef}rp /comma /.notdef /period 12{/.notdef}rp /semicolon 5{/.notdef}rp /A 7{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u /v /w /x /y 79{/.notdef}rp /ellipsis 54{/.notdef}rp]DFQKRZ+Palatino-Italic nfDFQKRZ+Palatino-Italic*1 [14 0 0 -14 0 0 ]msf151.5 204.192 mo(\311what )sh197.17 204.192 mo(I am concerned with is the delicate texture of Time, void of all embroidered events. [\311] Physiologically the sense of Time is a)[4.66211 3.68408 6.21387 10.8896 3.68408 5.70117 6.21387 7.78613 5.70117 5.44824 5.44824 7.78613 5.44824 7 3.68408 10.1104 3.88965 4.66211 7 3.68408 3.88965 5.44824 3.68408 4.66211 7 5.44824 3.68408 7 5.44824 3.88965 3.88965 5.70117 6.21387 4.66211 5.44824 3.68408 4.66211 5.44824 7 4.66211 7.78613 5.20215 5.44824 3.68408 6.21387 3.88965 3.68408 7.78613 3.88965 10.8896 5.44824 3.5 3.68408 7 6.21387 3.88965 7 3.68408 6.21387 3.88965 3.68408 6.21387 3.88965 3.88965 3.68457 5.44824 10.8896 6.48047 5.20215 6.21387 3.88965 7 5.44824 5.20215 5.44824 7 3.68408 5.44824 7 5.44824 7.78613 4.66211 5.44824 3.5 3.68408 4.66211 14 4.66211 3.68408 8.55176 7 7 5.44824 3.88965 6.21387 3.88965 6.21387 7 3.88965 5.70117 6.21387 3.88965 3.88965 7 3.68408 4.66211 7 5.44824 3.68408 5.44824 5.44824 7.78613 5.44824 5.44824 3.68408 6.21387 3.88965 3.68408 7.78613 3.88965 10.8896 5.44824 3.68408 3.88965 5.44824 3.68408 0 ]xsh897.898 204.192 mo( sense of continuous becoming, )[3.68408 5.44824 5.44824 7.78613 5.44824 5.44824 3.68408 6.21387 3.88965 3.68408 5.70117 6.21387 7.78613 4.66211 3.88965 7.78613 7.78613 6.21387 7.78613 5.44824 3.68408 6.48047 5.44824 5.70117 6.21387 10.8896 3.88965 7.78613 7 3.5 0 ]xsh151.5 220.992 mo(and if 'becoming' has a voice, the latter might be, not unnaturally)sh521.058 220.992 mo(, a steady vibration;)sh%ADOBeginSubsetFont: Palatino-Roman Initial
ct_T42Dict begin
-0.465 -0.48 1.703 1.172
 256 array 0 1 255 {1 index exch /.notdef put} for  /Palatino-Roman
Type42DictBegin
[<00010000000b000b000b000b63767420dec1ba6b000000bc000005986670
676d603e945f00000654000006fd676c79661bcc2dca00005a580004607c
686561642bd76f7100000d540000003668686561fa0e820f00000d8c0000
0024686d7478c39d441000000db000001b706c6f63610e5dd55400002920
00001b746d6178700f36088900004494000000206e616d65874013930000
44b400000fe870726570feed8aee0000549c000005bb6764697200000000
000000000000000005d10000058c001a0580000503a600220000ffe30000
ffe80000ffe3fdcefffc058d0043fe5c00000362000005ab000002340000
058d00000000000003510000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000
00000000000000000000000000000000000000000000ffffffffffff00bc
000000bc0000000000000000000000000000000000000000000000000004
00050040000700050039000700c100c30072013200be0005008e00320043
001400680030005500c30223009e0011003a00a5005700d5000600880010
005b008100f80053009900ac00bd04010044008e00ef0042004a006c011f
0068008000a900d0004a00a400adff94007600b400c00031011a01290017
00afff6f0001002d008b00c30446ffcc0030ffec001200450051009100a1
00a901570000001d002a0031003100420052009500d600d600ef015a01d5
0282032bffb7000b001d0029000300330035003c003e0047006d00e00194
0391ffc0ffd5000500080041005b0063007f00a2ff4effb1004400260044
004a0073008f00a200ab00b000cc010b0159017b018501b7027c02d80375
03a404bd0516ffac00200037003b00450053005a0061006c0076008f0095
00b500bc00d500ec02d600fb001d003b003d005700650066007a008700a1
00a400ab00c600e100f0013201560166018102130233024a0264028a02bb
0313032e03a903c605e9ff4affaa00000008000a0026002800550055006b
00c700d100da013d014a019801e30247038005a6ff2dffe6ffea000a0017
0020002500470049004e00580076008f00950099009900a500b600bb00d0
00e600fe01040117011d011e018f019301b201e201ec01f90202023502f7
035e0387038f03a603bc03d403d6043a045e04fb052c0584058e059a05c6
fef0ff21ff7f0021005a005a0068006e0085008a008c008c009c00a600b4
00cf00d900df00e800ec00fa01000106010c0115012a013901690201042c
0497052a05ca06bf0800fdcdfee2ff1500030005000a000c001d00220024
002e0046004a00510057005c005c005e006a006c00770079007d007f0081
0086008b008f009500b100b300bb00be00bf00c500c600cb00d100d800da
00db00df00e200ea00eb00fe0104010a010a012d013401360139013b0144
014b014f0153016101670168017d01a901b601b701ba01bd01d201de01df
01f102240233025e02680275027502ae02dd032d034503510367038e040a
041304a204f0050005b506190620066206cd0737077d07c4fca7fe6efec8
fee9ff00ff6effe90009000900230027002a002b004e005c00660068006a
007800800080008500890092009a009c00b400b600b800bf00c500d100dc
00ef00f801080116011701380138014b0157016301670168018801920193
019b019e01ae01b301c201cf01df01e801f401f501f9020b02270227023f
0247026e0278028e02a402c102d002f502f70305030d030f031e033a033d
03590388039503df045a0543060106420708070c074b076300bb00c800ba
00000000000000000000000000000149010e0379005b00dc00e3039400b6
0249020f04e0014c001a0104035e00ae0221022900c501d6027c02c7057e
017d0039015c034602480432039e01fe0071007001c8014001920115017e
016c004502a500f303fd013302a8015001650235012403d3022903af00e8
001a031f007501420237feae01ec008f044602f202dd01c40046003000c5
01860083055000c100af00cc004b0047001a005300b2002800c300520095
00eb0267009500470168007300720083003f002302e10276005b01d90280
023600e6019c010500f201c700510490feac0099031c004c00a3006100e1
03a80410008000a2005a0457049304c7025701ac016c00510092030801bd
00d900390092001a008300bc064a021201810359015700820030002a002a
403231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716
1514131211100f0e0d0c0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b0054358b94000fff50a1bb94000fff10a592d
2c00b0054358b9001640000b1bb9001040000b592d2c2045b00043617d68
18b0004360442d2c45b04a234445b04923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00743b006430a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2cb002254661658a46b04060
8b482d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b049
234445b04a23444565234520b00325606a20b009234223688a6a606120b0
1a8ab000527921b21a4a40b9ffe0004a45208a54582321b03f1b23596144
1cb114008a5279b34940204945208a54582321b03f1b235961442d2cb005
4358b91ef138060b1bb9187e3b210b592d2cb0054358b9333326660b1bb9
2d412d410b592d2cb0054358b93d1e12fd0b1bb93b21187e0b592d2cb005
4358b93d1eed040b1bb93b21e7830b592d2cb0054358b93333d99b0b1bb9
2d41d2c00b592d2cb0054358b91ef1c7fb0b1bb9187ec4e00b592d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4569b00943608a10
3a2d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0064365b00743
0b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162db80032
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
332c2020456944b001602db800342cb800332a212db800352c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800362c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800372c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db800382c2020456944b00160
2020457d691844b001602db800392cb800382a2db8003a2c4b20b0032653
58b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b0032653
582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a235920
b0032653582321b801408a8a1b8a235920b80003265358b0032545b80180
50582321b8018023211bb003254523212321591b2159442db8003b2c4b53
5845441b2121592db8003c2c4bb800095058b101018e59b801ff85b80044
1db9000900035f5e2db8003d2c2020456944b001602db8003e2cb8003d2a
212db8003f2c2046b003254652582359208a208a49648a204620686164b0
04254620686164525823658a592f20b00053586920b000545821b040591b
6920b000545821b0406559593a2db800402c2046b00425465258238a5920
46206a6164b0042546206a61645258238a592ffd2db800412c4b20b00326
50585158b080441bb04044591b21212045b0c05058b0c0441b2159592db8
00422c2020456944b001602020457d691844b001602db800432cb800422a
2db800442c4b20b003265358b0401bb000598a8a20b0032653582321b080
8a8a1b8a235920b0032653582321b800c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db800452c4b535845441b2121592d0000000001000000010000
624add735f0f3cf50111080000000000a426b48000000000c9de200efc44
fc250da70963000000090001000100000000000100000695fdc800000ddd
fc44fd760da70001000000000000000000000000000006dc060001000000
000002000000020000000239008d02f8006804d9006f0400003906b80069
0639005c01aa007b02aa007902aa0079031d005604d900680200fff202aa
002d0200008804d901150400003e0400007d04000022040000220400000c
0400001d040000460400005e0400004004000034020000880200001504d9
002804d9004c04d90020038d005905fa002f0639002304e3001b05ac0047
0631001a04e300320473002c061b004006a8003102b2002f02aaffe805cf
003304e300250791002606a60031064a003104d50036064a00300558002d
0433003804e7002b0639001e05c70015080000170556001f055600170556
002402aa00a704d900e902aa005504d9006a0400000002aa00a404000052
046dffea038d005004e3005403d5003302aa00310473004704a800070254
002d01dfffbe047300210254002d0710002a04a8001c045e004404cf0024
047b004f0329002f0364004a029c002e04d3001a0485001e06ac001d0421
0024047300100400002402aa007704d9023302aa006804d9006806390023
0639002305ac004704e3003206a60031064a00310639001e040000520400
005204000052040000520400005204000052038d005003d5003303d50033
03d5003303d50033024c0029024cffe9024c0014024c001a04a8001c045e
0044045e0044045e0044045e0044045e004404d3001a04d3001a04d3001a
04d3001a04000045033300660400007f0400fff60400003804d9010c0506
004e0473002b05fa001605fa001607d5005202aa00a402aa001a0464002d
078d000006aa004905b400220464002c0464002c0464002c0400ffe5049c
003003f4001c05b4006c0696005c0464000c0231ff4202aa003002aa0014
0625004c0610002d04730028038d00670239009a04d900690464000a0400
00120464001b04e500220400006604000061080000df0200000006390023
06390023064a003107fc0048069e00350400ffff08000000040000730400
00390239002d0239002d0464000e03f4003b04730010055600170156fe29
05f4ffb202a6006202a6008104d7002a04dd002b04000046020000880239
002d04000039092700690639002304e300320639002304e3003204e30032
02b2002f02b2001402b2001a02b20022064a0031064a003106520000064a
00310639001e0639001e0639001e024c002902aa001402aafff702aa0011
02aa00300200009302aa007402aa0096030a002f0281008a02aa001404e3
00070254ffe9043300420364004a055600240400002404d902330631001a
045e004c055600170473001004d5004704cf002904d9004a04d900b00266
003b0266ffff026600010600001d0600002e060000180400000e061b0040
0473004702b2002f043300380364004a05ac0047038d005005ac0047038d
005004e30051063900230400005206390023040000520639002304000052
05ac0047038d005005ac0047038d00500631001a04e3005404e3003203d5
003304e3003203d5003304e3003203d5003304e3003203d5003304e30032
03d50033061b004004730047061b004004730047061b0040047300470473
004706a8003104a8000706a8003104a8000702b20010024cffd402b20011
024c000c02b2002f0254002d055c002f0433002d02aaffe801dfffab05cf
00330473002104e300250254002d04e300250254002d04e3002503a6002d
04e300250254002d06a6003104a8001c06a6003104a8001c06a6003104a8
001c04a8001c064a0031045e0044064a0031045e0044064a0031045e0044
0558002d0329002f0558002d0329002f0558002d0329002f043300420364
004a043300420364004a04e7002b029c002e04e7002b029c002e04e7002b
029c00190639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a0639001e04d3001a0639001e04d3001a0800001706ac001d
055600170473001005560024040000240556002404000024043300420364
004a04e7002b029c002e04d9002c0000fce80000fce80000fc900000fc74
0000fc8d0000fcac0000fd640000fc960000fcf00000fc440000fc900000
fd2d0000fcf90000fd1b0000fc7b062500530631001a061b004004730047
04e300250254002d05cf00330473002106a6003104a8001c0558002d0329
002f02aa002d0473002102aa003106a6003104a8001c038d005003d50033
0710002a0329002f029c002e0485001e06ac001d0239002d0239002d0333
01240333012402aa001102aa00a402aa00a402aa001102aa00a402aa00a4
0000fc440000fcac0000fd110000fd110000fce80000fce80000fd330000
fd640000fc960000fcf00000fc900000fc900000fcac0000fcac0000fc74
0000fc8d0000fd330000fd330000fd3300000000000000000000000002aa
002d02000088062500530639002303f4001d03f4002f05b4006c05b40092
0464000a0464ff8c0231ff420231ffe004640012046400340464002f0464
002b0000000008df006607a6006605cf003302b2002f0564002f0816002f
0879002f05c70015087900150b2b00150ddd00150808002f0556001f0808
001f0aba001f04e3002505ac00470631001a079100260254002d04a8002d
06fc002d06d9002d0485001e06d9001e092d001e0b81001e0675002d0421
00240675002408c900240254002d038d005004e300540710002a02b2002f
024c00030239008d0b87001a0a31001a08e30054078d002506c200250433
002d09500031088500310687001c063900230400005202b20014024cffe7
064a0031045e00440639001e04d3001a0639001e04d3001a0639001e04d3
001a0639001e04d3001a0639001e04d3001a063900230400005206390023
04000052078d00000610002d061b00400473004705cf003304730021064a
0031045e0044064a0031045e00440b87001a0a31001a08e30054061b0040
06a6003104a8001c0639002304000052078d00000610002d06aa00490473
00280639002304000052063900230400005204e3003203d5003304e30032
03d5003302b2ffc7024cff9702b2002f024c0000064a0031045e0044064a
0031045e00440558002d032900090558002d0329002f0639001e04d3001a
0639001e04d3001a06a8003104a80007063900230400005204e3003203d5
0033064a0031045e0044064a0031045e0044064a0031045e0044064a0031
045e004405560017047300100400003902b2002f063900230400005204e3
001b046dffea04e3001b046dffea04e3001b046dffea05ac0047038d0050
0631001a04e300540631001a04e300540631001a04e300540631001a04e3
00540631001a04e3005404e3003203d5003304e3003203d5003304e30032
03d5003304e3003203d5003304e3003203d500330473002c02aa0031061b
00400473004706a8003104a8000706a8003104a8000706a8003104a80007
06a8003104a8000706a8003104a8000702b2fff80254ffcf02b2001a024c
ffed05cf00330473002105cf00330473002105cf00330473002104e30025
0254002d04e300250254ffe704e300250254ffe704e300250254ffea0791
00260710002a079100260710002a079100260710002a06a6003104a8001c
06a6003104a8001c06a6003104a8001c06a6003104a8001c064a0031045e
0044064a0031045e0044064a0031045e0044064a0031045e004404d50036
04cf002404d5003604cf00240558002d0329002f0558002d0329002f0558
002d0329002f0558002d0329002f043300420364004a043300420364004a
043300420364004a043300420364004a043300420364004a04e7002b029c
002e04e7002b029c002e04e7002b029c001904e7002b029c001c0639001e
04d3001a0639001e04d3001a0639001e04d3001a0639001e04d3001a0639
001e04d3001a05c700150485001e05c700150485001e0800001706ac001d
0800001706ac001d0800001706ac001d0800001706ac001d0800001706ac
001d0556001f042100240556001f04210024055600170473001005560024
040000240556002404000024055600240400002404a80007029c002206ac
001d0473001002aa003104e3003203d5003304e3003203d50033078d0000
0610002d079100260710002a0000fce80000fce80000fd110000fc960200
001502aa001a0200008806390023040000520400005202b20010024cffe0
024c00290639001e04d3001a042100240558002d0329002f01dfffbe0400
00520631001a04e3005403d50033043300380364004a0000fe5f0000fe78
00007fff00007fff00007fff04d9023309b2023301dfff4e063900230400
0052063900230400005206390023040000520639ff9e0400fe9806390023
040000520639002304000052063900230400005206390023040000520639
002304000052063900230400005206390023040000520639002304000052
04e3003203d5003304e3003203d5003304e3003203d5003304e3003203d5
003304e3fee703d5fe6a04e3003203d5003304e3003203d5003304e30032
03d5003302b2002f024c002902b2002f0254002d064a0031045e0044064a
0031045e0044064a0031045e0044064affad045efeb7064a0031045e0044
064a0031045e0044064a0031045e00440639001e04d3001a0639001e04d3
001a05560017047300100556001704730010055600170473001005560017
047300100200fff50200008b0200001802390090038d005c080003890800
03c5040001c5040001c4040001c402aafdb102aafdb002aafdc502aafdb3
02aafdbd02aafd6b0449003f0000000006000000061b004002b2003305cf
003304e3002504e3002506a600310558002a062a002704e7002704970081
0635003304e3005404730047047300220254002c02b9002c04a8000c0329
0036029c002e048b0041086700400b07002e08f9003c0810005007c20050
0630005005350031075c0031076600310535003107bc00310726003109b1
00310753003109de003107060031099100310495003102aa003104bc0031
04c30031051b0031072d00310733003104e9003106f800310725003106ec
00310809004a0614004a04f9002e061b002e02f5000f02aa004702b0fff3
023d002702f700310275002701bb002502bd003102f5000f018a0022015b
ffee02c5000f018a0022046d001f02f5000f02aa002202fc001e02d20022
020c00280230003401b6002302f5000502be000503eb0005028a000f02bc
000f0255000603d0002e042f0022027500270400003e02e6fff004000022
0400002503d9fff90400002004000046038d004004000040040000340400
002804000082040000290400001304000007040000110400003e04000047
040000400400003a028f002d028f000e028f001b028f0032028f0041028f
002f028f0027028f002d028f0054028f001c028f001e028f000e028f001b
028f0032028f0041028f002f028f0027028f001f028f001f028f001f01c2
005001c20025028f001f028f001f028f001f01c2005001c2002501230046
0133fffc028f003c028f005204100054067400540674001c067400540674
001c0674001e0674000e067400540674001b067400540674001e0674001b
06740041040000be040000be040000be040000be040000be040000be0400
00be040000be040000be040000be040000be040000be040000be040000be
040000be040000be0400000004e5ffe90625000b0473002e0400001e0400
001e0400001e0400001e0400001e0400001e0400001e0400ffec04000039
040000bf0437fff2058e0038058e00450400ffdf0400001805280033062e
005d08ee00290400008903cd008d038d005a0239008c0400000003660051
0593002906ac001601c00089035500a203d5006304d5009202d6008302d6
008304d500b202d600700800000004d901a2040000000800000004000000
0800000002ab000002000000015500000400000002000000019a000000ab
0000000000000000ff8602aa00dd02aa007402aa007402aa000802aaffee
02aafff802aa000002aa002602aa00850000ff7b02aa007e02aa00e502aa
ffc402aa001102aa007802aa007502aa007402aa001002aa001d02aafffa
02aa000c02aa003c02aa00940000ff8702aa008702aa00e802aaffc702aa
002402aa0082063900230639002304e8003304e3001c0441002904410029
0441000a05f2ffee04e3004904e3004904e3004904e3004907dc001c07dc
001c07dc001c04db008204db008206ac003306ac003306ac003306ac0033
05cf003305cf003305cf003305cf0033072a000005d5ffe40791002606a8
003306a80033064a00300681003304d5003305ac004705ac004704e70027
05640018056400180560003305600033056000330560003305f800300556
001f0556001f068100330612000e0626000e0612000e08a4004e08a4004e
0643000006fb003304e8003305920030063e005e08bd00330558ffef0618
000007b00033067d004c064a003005c700150424003302b2003302b2fff8
02aaffe8043300400593003005ff00330721000006da0000068100330842
000008f000330400005204000052047a004403c6003d0334004f0334004f
0334004f046a000003d5003303d5003303d5003303d500330696002e0696
002e0696002e0449003f0449003f0449003f038b005d038b005d050e004f
050e004f050e004f050e004f0431004f0431004f046b004f046b004f04ef
00000497000005df005604ab002f04ab002f047a00440516004f04cf0041
038d0050038d005003c600260435fff30435fff304b8001e04b8001e0435
fff30435fff3061a004403eb001203eb00120516004f0449000004490000
044900000732004f0732004f049c000005cd004f03d1004f0430006003e7
005b0681004f044d000004ba0037043000440364004a0254002b0254ffc4
01dfffc0060800000630002f056f0043056f00370516004f049200120492
001205ec0053047a0044047a00440485001e0324004f08e000f902f5005d
02f5005d0627002304db001c048b00330583003804d80049055600240696
00330658003002a9003305c6003306080023078f002606a60030058b0056
065800300681003304cc0033057c005d04e1002705de000605f80030054f
001f06f60025062700230627002306270023062700230627000906270023
062700230627002306270023082f0023082f0023082f0023082f0009082f
0023082f0023082f0023082f002306270023062700230627002306270023
082f00230565001005e10017060700170680000106b9000106b9000106cd
0001058c000105f000010729000b07ac001707d700170894000108bc0017
08d0001708e6001708ec000108ec000109ed00170a1800170ad500010afd
00170b1100170b2700170b2d00010b2d00010770000107de000108e90033
0345000b02a9003303b6001703e10017049e000104c6001704da001704f0
001704f6000104f6000102a9003302a90029037a000103e8000106f30042
06f3001706f3001708440001086c001707a2000107ce00170720001706c6
000105c3000106ad004205de000606ce0017081c000107ba001707880001
05de000605de000606d0000106b300010711004106ff001606ff00160850
00000878001607ae000007da001607c7000007c70000096f0016096f0016
0ac000000ae800160a1e00000a4a00160a3700000a370000072c001606d2
0000090b0046051e004404ab009204c1ffee042c004403da008e03fe0052
04b4fff80501008d026700c00490001904c100000481fffd044b007c0462
0044045e004403db004004d6004403df00410486001b05a90044049d0038
0587000a05f20035044f00400509001c05aa004406090044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e0044051e0044051e0044051e0044051e0044051e0044051e
0044051e0044051e0044051e0044051e0044051e0044051e0044051e0044
051e0044051e004403da008e03da008e03da008e03da008e03da008e03da
008e03da008e03da008e03da008e04b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4
fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff804b4fff8
04b4fff804b4fff804b4fff804b4fff804b4fff8026700c0026700130267
00c002670085026700c0026700b5026700580267000d0267005702670034
026700080267002a026700240267ffd30267ffd30267ffd3026700330267
fffe0267ffe4046200440462004404620044046200440462004404620044
046200440462004404620044045e0044045e00440486001b0486001b0486
001b0486001b0486001b0486001b0486001b0486001b0486001b0486001b
0486001b0486001b0486001b0486001b0486001b0486001b0486001b0486
001b0486001b05f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f2003505f2003505f2003505f2003505f2003505f2
003505f2003505f2003505f2003505f2003505f2003505f2003505f20035
05f2003505f2003505f20035055e004305720067071c0025050800460200
0014020000140200004b02aa012202aa011302aafff402aa000b02aa010a
02aa00f702aa010a02aa00fa02aa011002aa008502aa007802aa005502aa
00b002aa001c02aa002902aa005c02aa004502aafff402aafff402aafff4
02aa006402aa002506660030049c0044069e001e052000100400008b0000
ff930000ff560000ff6a0000fea40000ff77048a001903c6003d041b0043
049c004f03c6003c035b00440431002d04ab002f028400620284000b0431
004f03c6005305df005605080044049d005603c60054049d00560431004c
035b005103c60026049d00370464000b05df001903c6fff703c6fff803c6
0014048a0019048a0019048a0019048a0019048a0019048a0019048a0019
048a0019048a0019048a001905df000a05df000a041b0043041b0043041b
0043041b0043041b0043049c004f049c004f049c004f03c6003c03c6003c
03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c03c6003c0431
002d0431002d0431002d0431002d0431002d04ab002f04ab002f02840062
0284fff30284fff20284000b0284ffe40284002302840062028400120284
00620284fff20431004f0431004f03c6005303c6005303c6005303c60053
03c6005303c600530508004405080044050800440508004405080044049d
0056049d0056049d0056049d0056049d0056049d0056049d0056049d0056
049d0056049d0056064a00470431004c0431004c0431004c0431004c035b
0051035b0051035b0051035b0051035b005103c6002603c6002604e20026
03c6002603c60026049d0037049d0037049d0037049d0037049d0037049d
0037049d0037049d0037049d0037049d003705df001905df001905df0019
05df001903c6fff803c6fff803c6fff803c6fff803c6001403c6001403c6
001403c6005404a40062026a0030018600660463002e02aa008706660030
06660030049c004406660030049c004406660030049c004406660030049c
0044069e001e05200010069e001e05200010069e001e05200010069e001e
05200010069e001e05200010058a003d069b0046052d00bb056b00820000
0000000000840000008400000084000000840000011000000198000002d8
000004f00000069c0000094800000994000009fc00000a6800000b100000
0b7800000bd400000c2800000c6800000cd400000e4400000f18000010a8
0000123c000013b8000014f800001654000017880000191c00001a3c0000
1aa800001b3000001b9000001be000001c4400001dec00001f74000020b0
0000225800002378000024d40000267c000027ec0000296400002b080000
2bc800002c8400002e7000002f6c0000313c000032cc0000342400003570
000037700000396400003b8400003c9c00003df000003f1c000040f00000
42ec00004440000045a000004668000046cc00004790000047f800004824
00004884000049f800004b9000004cac00004e5000004f700000509c0000
52f0000054a400005598000056b0000058e8000059c800005c3c00005dbc
00005ed400006088000062180000634c0000650400006620000068100000
694c00006b3000006ce800006ebc00006fdc000070b0000070f8000071dc
0000726c0000729c000072d4000074080000744c00007464000074bc0000
74d4000074f80000751c0000754000007580000075a4000075e80000771c
00007744000077680000778c000077d4000077f80000781c000078400000
787400007898000078c0000078e4000079080000795800007988000079ac
000079d000007a0000007a4000007b3800007be800007ce000007e440000
7ff0000080740000816c0000834c0000852000008698000088d400008934
000089b800008a9000008d7c00008f2000008ff80000908c000091040000
918000009338000094680000952000009638000097840000985c00009908
00009a7400009b0000009cb800009e7400009fdc0000a0f80000a1880000
a1c40000a2380000a2dc0000a3cc0000a4a80000a59c0000a6700000a70c
0000a70c0000a7300000a7680000a79c0000aa1c0000ab7c0000abac0000
abd80000ac780000ad180000ad740000add00000ae640000aedc0000af0c
0000af500000af8c0000b0740000b0f80000b16c0000b3400000b5180000
b6880000b6c80000b7280000b7cc0000b9d40000ba040000ba480000ba60
0000bab80000baf00000bb380000bb7c0000bc0c0000bc440000bc880000
bccc0000bd980000bdd00000be140000be580000be9c0000bf800000c014
0000c0b80000c0f80000c1680000c1c00000c22c0000c2bc0000c34c0000
c3d80000c4500000c5980000c6c40000c7080000c7480000c7800000c7c4
0000c8340000c9c00000cb1c0000cb600000cb880000ccd40000ce8c0000
cecc0000cfa80000d0500000d1040000d1ec0000d3640000d4f00000d6bc
0000d8180000d8680000d8a80000d9040000dafc0000dc8c0000dcd00000
dd080000dd480000dd840000df240000df3c0000df540000df6c0000df84
0000df9c0000dfb40000dfcc0000dfe40000dffc0000e0140000e02c0000
e0440000e05c0000e0740000e08c0000e0a40000e0bc0000e0d40000e0ec
0000e1040000e11c0000e1340000e14c0000e1640000e17c0000e1940000
e1ac0000e1c40000e1dc0000e1f40000e20c0000e2240000e23c0000e254
0000e26c0000e2840000e29c0000e2b40000e2cc0000e2e40000e2fc0000
e3140000e4200000e4380000e4500000e4680000e4800000e4980000e4b0
0000e4c80000e4e00000e4f80000e5100000e5280000e5400000e5580000
e5700000e5880000e5a00000e5b80000e5d00000e5e80000e6000000e618
0000e6300000e6480000e6600000e6780000e6900000e6a80000e6c00000
e6d80000e6f00000e7080000e7200000e7380000e7500000e7680000e780
0000e7980000e7b00000e7c80000e7e00000e7f80000e8100000e8280000
e8400000e8580000e8700000e8880000e8a00000e8b80000e8d00000e8e8
0000e9000000e9180000e9300000e9480000e9600000e9780000e9900000
e9a80000e9c00000e9d80000e9f00000ea080000eb780000ebc00000ec00
0000ec380000ecbc0000ece80000ed340000edc00000eedc0000eff00000
f05c0000f0940000f0dc0000f19c0000f23c0000f26c0000f4240000f61c
0000f6340000f6500000f6680000f6800000f6980000f6b00000f6c80000
f6e00000f6f80000f7100000f7400000f8a40000f9a00000fbc40000fdd4
0000fec400010030000102f400010480000105cc000106c4000108100001
0858000108a000010944000109e400010a1000010a5000010a9800010ac0
00010b0000010b4800010bb400010c0000010c4800010c9000010cd80001
0d1800010db800010e4400010f6000011074000110ac000110e400011130
0001117c000112000001122c000112d00001137000011414000114140001
14140001141400011444000114800001163c00011654000116640001167c
0001168c000116a4000116b4000116cc000116dc000116f4000117040001
171c0001172c00011744000117440001175c000117740001178400011794
000117ac000117cc000117e4000117f40001180c0001182c000118540001
186c0001187c00011894000118b4000118c4000118d4000118e4000118f4
000119040001191c0001193c00011954000119640001197c0001199c0001
19c4000119dc000119ec00011a0400011a2400011a3400011a4400011a54
00011a6400011a7c00011a9400011aa400011ac400011ae400011b040001
1b1c00011b3400011b4c00011b6400011b7c00011b9400011bac00011bc4
00011bdc00011bf400011c0c00011c2400011c3c00011c5400011c740001
1c9400011cb400011cd400011cf400011d1400011d3400011d5400011d74
00011d9400011db400011dd400011dec00011e0400011e1c00011e340001
1e4c00011e6400011e7c00011e9400011eb400011ed400011eec00011f04
00011f1c00011f3400011f4c00011f6400011f8400011fa400011fbc0001
1fd400011fec000120040001201c000120340001204c000120640001207c
00012094000120ac000120c4000120dc000120f40001210c000121240001
213c000121540001216c000121840001219c000121b4000121cc000121e4
000121fc000122140001222c000122440001225c000122740001228c0001
22a4000122bc000122d4000122f40001231400012334000123540001236c
00012384000123a4000123c4000123dc000123f400012404000124140001
242c000124440001245c000124740001248c000124a4000124bc000124d4
000124ec000125040001251c000125340001254c000125640001257c0001
2594000125ac000125c4000125dc000125f4000126140001263400012654
000126740001268c000126a4000126bc000126d4000126f4000127140001
272c000127440001275c000127740001278c000127a4000127bc000127d4
000127ec000128040001281c000128340001284c000128640001287c0001
2894000128b4000128d4000128ec000129040001291c000129340001294c
000129640001297c00012994000129b4000129d4000129ec00012a040001
2a1c00012a3400012a4c00012a6400012a7c00012a9400012aac00012ac4
00012adc00012af400012b0c00012b2400012b3c00012b5400012b6c0001
2b8400012ba400012bc400012be400012c0400012c2400012c4400012c64
00012c8400012c9c00012cb400012ccc00012ce400012cfc00012d140001
2d2c00012d4400012d6400012d8400012d9c00012db400012dcc00012de4
00012dfc00012e1400012e3400012e5400012e7400012e9400012eb40001
2ed400012eec00012f0400012f1c00012f3400012f4c00012f6400012f7c
00012f9400012fac00012fc400012fdc00012ff40001300c000130240001
30440001306400013084000130a4000130bc000130d4000130ec00013104
0001311c000131340001314c000131640001317c00013194000131ac0001
31c4000131dc000131f40001320c000132240001323c000132540001326c
000132840001329c000132b4000132cc000132e4000132fc000133140001
332c000133440001335c000133740001338c000133ac000133cc000133ec
0001340c0001341c0001342c000134440001345c0001346c0001347c0001
348c000134a4000134b4000134cc000134dc000134fc0001351c0001353c
0001355c0001357c00013594000135b4000135d4000135ec000136040001
361c00013700000138e8000139000001391800013a8400013c1800013db8
00013e7c00013f1000013f2000013f3000013f4000013f5000013f680001
3f8000013f9800013fb000013fc800013fe0000140000001402000014040
0001406000014080000140a0000140c0000140e000014100000141200001
41400001416000014180000141a0000141c0000141e00001420000014220
00014240000142600001427800014290000142a8000142c0000142d80001
42f00001431000014330000143500001437000014390000143b0000143d0
000143f00001441000014430000144480001446000014478000144900001
44a8000144c0000144d8000144f000014510000145300001455000014570
00014590000145b0000145d0000145f00001461000014630000146480001
46600001467800014690000146a8000146c0000146d8000146f000014708
000147200001473800014750000147600001477000014780000147900001
47a00001489c000148d000014904000149380001496c000149c800014a24
00014af000014bc400014cd000014dd00001503800015038000150380001
51c800015344000155e4000157b80001595000015b4c00015ddc00015f88
0001612c00016264000163d0000165b80001680000016a2c00016b9c0001
6ce800016f040001709c00017298000173ac0001763c000178ec00017afc
00017d2c00017f58000181b0000183a800018694000189a800018bc40001
8e70000190d800019420000196bc00019a3800019cac0001a0600001a1fc
0001a2ec0001a4880001a6200001a6380001a8d00001a8e80001aafc0001
ad1c0001af740001b1a80001b4f40001b7f00001b9b80001bbbc0001bbd0
0001bd3c0001be940001bf580001c0e80001c1c40001c2940001c4880001
c5d80001c6bc0001c7680001c87c0001c9480001cb480001ccc80001cde8
0001cf680001d0a80001d1a00001d3680001d4300001d56c0001d66c0001
d7640001d8400001d9080001d9e40001db840001dcd00001ddd80001df10
0001dfcc0001e0ec0001e26c0001e37c0001e5400001e6b00001e7540001
e91c0001ea600001eb880001ec900001ed9c0001eef00001f0c00001f1ec
0001f3440001f4000001f5c80001f71c0001f8400001f9780001fb340001
fc880001fd1c0001fe900001ffc40001ffd800020098000201a40002031c
0002033000020344000203580002036c0002038000020394000203fc0002
04280002046800020504000205a8000205bc000205d0000205e4000205f8
0002060c000206a0000206e0000208e000020a5800020b4400020dac0002
106000021334000216480002197400021ca800021ed000022200000224b4
000227c800022b8800022e1c00022f7c00023150000233280002356c0002
37200002391400023b0800023d6c00023fec00024264000244340002462c
0002484800024a8000024d1000024f0400024f2c00024f9c000251740002
531800025354000253a80002543c000254b80002552c00025574000255b8
0002573000025a4c00025c8c00025dd000025f7400026108000261fc0002
644c000265b40002694c00026cbc00026d2800026ee000026fd800027018
00027054000271b4000273a8000274500002749c000274b4000275b80002
762800027654000276c0000277080002781c00027c6400027cc400027cec
00027d1400027d1400027d1400027d1400027d1400027d1400027d140002
7d1400027d1400027d1400027d1400027dbc00027e5c00027e9c00027edc
00027f2000028038000280a8000280f00002814400028264000283180002
83e00002846c000284cc000284f800028594000285cc000286080002864c
00028764000287f40002883c0002888c000289ac00028a5400028b2c0002
8bb800028c1400028c4000028ce000028dec00028f34000290c800029304
000293d8000293f000029504000296500002981c00029acc00029cd00002
9ef80002a1500002a3580002a3700002a4fc0002a7000002a8c00002a8d8
0002a8f00002a9080002aab00002aac80002ac9c0002ae600002b0600002
b1d40002b3ac0002b6040002b8300002b9780002bb6c0002bd140002bdf4
0002bfcc0002c0cc0002c20c0002c3780002c4780002c4900002c4a80002
c4c00002c7140002c8100002c9040002cab00002cc1c0002ce000002cf98
0002d2500002d4d80002d65c0002d9000002da940002dbf40002dcb00002
de900002e04c0002e2c80002e59c0002e7480002e8fc0002ea000002eb20
0002ec2c0002ee340002ef080002f0540002f1580002f2b40002f4c00002
f6800002f8380002fa4c0002fd300002fea0000300540003017400030184
0003024c000302640003039c00030498000305d0000307c00003091c0003
0ab400030c5000030dd400030dec00031054000312bc000315240003168c
00031878000319b0000319c8000319e0000319f800031b0c00031b240003
1c8000031ddc00031f680003206000032070000320800003229c000323c4
000324f0000326a400032778000329380003294800032a3000032a480003
2b8c00032d1400032dfc00032e1400032fc4000330e00003322000033378
000335040003367800033834000339a400033b4000033cf800033f140003
408400034190000342f00003448400034620000348600003496c00034abc
00034b7000034d0c00034dbc00034fb80003527c00035420000356100003
577c00035998000359b000035bec00035d7c00035f2800036020000360e4
000363e4000364300003647c00036584000367d0000368a4000369140003
6a9c00036b7400036d6c00036f2400036fe8000371800003728c0003747c
00037674000377f00003793800037af000037c8800037d5c00037e600003
7f58000381ac000382b00003843c000384540003846c000384840003849c
000384b4000384cc000384e4000384fc0003851400038534000385540003
857400038594000385b4000385d4000385f4000386140003862c00038644
0003865c000386740003868c000386a8000386c4000386e0000386f80003
87100003872800038744000387600003877c00038798000387b4000387d0
000387e80003880000038818000388340003884c00038864000388880003
88ac000388cc000388ec0003890c0003893000038950000389700003898c
000389a8000389c0000389dc00038bb400038bd000038bec00038c040003
8c1c00038c3400038c5000038c6800038c8000038c9800038cb000038ccc
00038ce800038d0400038d2000038d3c00038d5400038d6c00038d840003
8da000038db800038dd000038dec00038e0800038e2000038e3c00038e54
00038e7000038e8800038ea000038eb800038ed400038ef0000390e40003
92e00003951c0003976c000399bc00039c0c00039e5c0003a0f80003a36c
0003a5e80003a8a40003ab780003ae480003b11c0003b3ec0003b7080003
b9fc0003bbf80003bdec0003c0200003c1280003c2f40003c3b80003c508
0003c60c0003c7f80003c9340003c9f80003ca880003cb740003cc040003
ccec0003cf140003d0440003d1b40003d2980003d3e00003d4f80003d664
0003d8640003d93c0003db0c0003dcd00003de600003e0080003e1e40003
e3940003e3ac0003e3c40003e3dc0003e3f40003e40c0003e4240003e43c
0003e4540003e46c0003e4840003e49c0003e4bc0003e4dc0003e4fc0003
e51c0003e53c0003e55c0003e57c0003e59c0003e5b40003e5cc0003e5ec
0003e6040003e6240003e63c0003e65c0003e6740003e68c0003e6a40003
e6bc0003e6d40003e6ec0003e7040003e71c0003e7340003e74c0003e764
0003e77c0003e7940003e7ac0003e7c40003e7dc0003e7f40003e80c0003
e8240003e83c0003e85c0003e87c0003e89c0003e8bc0003e8dc0003e8fc
0003e91c0003e93c0003e95c0003e9740003e9940003e9ac0003e9cc0003
e9e40003eb780003eb900003eba80003ebc00003ebd80003ebf00003ec08
0003ec200003ec380003ec500003ec680003ec800003ec980003ecb00003
ecc80003ece00003ecf80003ed100003ed280003ed400003ed580003ed70
0003ed880003eda00003edb80003edd00003ede80003ee000003ee180003
ee300003ee480003ee600003ee780003ee900003eea80003eec00003eed8
0003eef00003ef080003ef200003ef380003ef500003ef680003ef800003
ef980003efb00003efc80003efe00003eff80003f0100003f0280003f040
0003f0580003f0700003f0880003f0a00003f0b80003f0d00003f0e80003
f1000003f1200003f1400003f1600003f1800003f1a00003f1c00003f1e0
0003f2000003f2200003f2380003f2580003f2780003f3dc0003f4d00003
f69c0003f8240003f8800003f8b80003f8f40003f9280003f95c0003fa94
0003fc000003fc940003fd3c0003fdd00003fe6c0003fea00003fed00003
ff8400040038000400ec000401a00004020c000402f8000403c8000404e4
0004062400040764000407b0000407dc0004097c00040b0800040c9c0004
0e4000041018000410a4000410e400041120000411b00004127c000413b0
000415bc0004168c000417f00004198c00041ad000041c0400041db80004
1e5800041efc00042020000420f40004221800042390000424b800042608
000427b40004293c00042aa400042b8400042c7000042d2400042e380004
2f4c00043018000430f00004310800043120000431380004315000043168
0004318000043198000431b8000431d0000433a8000436a0000436b80004
36d0000436e800043700000438d0000438e80004390000043aa000043ab0
00043ac800043ae000043af800043b1000043b2800043b4000043b580004
3b7000043d9000043da800043dc000043dd800043df000043e0800043e20
00044090000440a8000440c0000440d8000440f000044108000441200004
41380004415000044288000442a0000442b8000442d0000442e800044300
0004431800044330000443480004447000044488000444a0000444b80004
44d0000444e8000445000004451800044530000445480004456000044578
00044590000445a8000447240004473c0004498c000449a4000449bc0004
49d4000449ec00044a0400044a1c00044a3400044a4c00044c3000044c48
00044c6000044c7800044c9000044dc800044de000044df800044e100004
4e2800044e4000044e5800044e7000044e8800044ea00004502c00045044
0004505c000450740004508c000450a4000450bc000450d4000450ec0004
51040004511c0004513400045288000452a0000453e4000454ac0004573c
000457f40004580c000458240004583c000458540004586c000458840004
589c000458b4000458cc000458e4000458fc000459140004592c00045944
0004595c000459740004598c000459a4000459bc00045c2000045df80004
5f5c0004607c0001000006dc00b4001000c2000700020010001300460000
07e806fd000400010000006e052e0001000000000000006c000000010000
000000010008006c0001000000000002000700740001000000000003001d
007b0001000000000004000800980001000000000005000700a000010000
00000006000e00a70001000000000007003100b500010000000001020009
00e60001000000000103001000ef000100000000011f001400ff00010000
000001230015011300010000000001280017012800010000000100020008
013f0001000000010007002e014700010000000101020009017500010000
000101030013017e000100000001011f001a019100010000000101230021
01ab0001000000020002000801cc0001000000020007003b01d400010000
000201020009020f000100000002010300170218000100000002011f0013
022f0001000000020123001f024200010000000300020007026100010000
00030007002f02680001000000030102000802970001000000030103000f
029f000100000003011f001502ae0001000000030123002002c300010000
00040002000702e30001000000040007003902ea00010000000401020009
032300010000000401030011032c000100000004011f0020033d00010000
000401230018035d00010000000500020006037500010000000500070035
037b0001000000050102000903b00001000000050103001103b900010000
0005011f001003ca0001000000050123001803da00010000000600020007
03f20001000000060007002f03f900010000000601020009042800010000
0006010300110431000100000006011f002104420001000000060123001d
04630001000000070002000a04800001000000070007003b048a00010000
00070102000904c50001000000070103001504ce000100000007011f0016
04e30001000000070123001f04f900010000000800020006051800010000
000801020009051e000100000008010300100527000100000008011f0021
05370001000000080123001d055800010000000900020006057500010000
000900070033057b0001000000090102000905ae00010000000901030011
05b7000100000009011f001005c80001000000090123001705d800010000
000d0002000805ef00010000000d0007003305f700010000000d0102000a
062a00010000000d01030015063400010000000d011f0011064900010000
000d01230015065a00010000001200020008066f0001000000120007002e
067700010001000b0002000a06a500010001000b0102000806af00010001
000b0103001006b700010001000b011f001406c700010001000b0123001e
06db0001000200130002000606f90001000200130102000a06ff00010002
0013010300080709000100020013011f000c07110001000200130123000a
071d00010003001700020004072700010003001701020004072b00010003
001701030009072f000100030017011f0009073800010003001701230018
074100010004000c00000047075900010004000c0002000407a000010004
000c0007002b07a400010004001f0000005707cf00010004001f0007002e
082600010005000a00000047085400010005000a00020004089b00010005
000a00070026089f0001001900210002000408c500010019002101020004
08c90001001900210103000a08cd000100190021011f000808d700010019
00210123000c08df000300010409000000d808eb00030001040900010010
09c30003000104090002000e09d30003000104090003003a09e100030001
0409000400100a1b0003000104090005000e0a2b0003000104090006001c
0a39000300010409000700620a55436f7079726967687420a92031393931
2d39392c2032303036204170706c6520436f6d70757465722c20496e632e
20436f7079726967687420a920313939312d3932205479706520536f6c75
74696f6e732c20496e632e20416c6c207269676874732072657365727665
642e50616c6174696e6f526567756c617250616c6174696e6f3b20372e30
643465363b20323031312d30342d323750616c6174696e6f372e30643465
3650616c6174696e6f2d526f6d616e50616c6174696e6f20697320612072
6567697374657265642074726164656d61726b206f66204c696e6f747970
652041474c6967617475726573436f6d6d6f6e204c696761747572657343
686172616374657220416c7465726e61746573436f6d6d61204469616372
6974696320466f726d73436564696c6c612044696163726974696320466f
726d735374616e6461726450616c6174696e6f2065737420756e65206d61
7271756520648e706f738e65206465204c696e6f747970652041474c6967
6174757265734c696761747572657320636f7572616e746573416c746572
6e617469766573206465206361726163748f726573466f726d6573206469
61637269746971756573206465206c612076697267756c655374616e6461
726450616c6174696e6f206973742065696e2065696e676574726167656e
657320576172656e7a65696368656e20646572204c696e6f747970652041
474c696761747572656e476562728a7563686c69636865204c6967617475
72656e416c7465726e6174697665205a65696368656e4b6f6d6d6120616c
73206469616b726974697363686573205a65696368656e4e6f726d616c65
50616c6174696e6f208f20756e206d61726368696f207265676973747261
746f206469204c696e6f747970652041474c656761747572654c65676174
75726520636f6d756e6943617261747465726920616c7465726e61746976
69466f726d6520646961637269746963686520706572206c652076697267
6f6c654e6f726d61616c50616c6174696e6f2069732065656e2067657265
6769737472656572642068616e64656c736d65726b2076616e204c696e6f
747970652041474c696761747572656e4e6f726d616c65206c6967617475
72656e416c7465726e6174696576652077656572676176652076616e2074
656b656e734469616b7269746973636865206b6f6d6d6174656b656e734e
6f726d616c50616c6174696e6f208a722065747420726567697374726572
617420766172756d8a726b6520669a72204c696e6f747970652041474c69
6761747572657256616e6c696761206c69676174757265725465636b656e
616c7465726e617469764b6f6d6d61206469616b72697469736b6120666f
726d6572526567756c617250616c6174696e6f20657320756e61206d6172
63612072656769737472616461206465204c696e6f747970652041474c69
676164757261734c696761647572617320636f6d756e6573466f726d6173
20616c7465726e6174697661732064652063617261637465726573466f72
6d6173206469616372927469636173206465206c6120636f6d61416c6d69
6e64656c696750616c6174696e6f20657220657420726567697374726572
657420766172656dbe726b652074696c68bf72656e6465204c696e6f7479
70652041474c6967617475726572416c6d696e64656c696765206c696761
7475726572416c7465726e617469766520736b726966747465676e4b6f6d
6d61206d6564206469616b72697469736b207564666f726d6e696e674e6f
726d616c4c69676164757261734c696761647572617320436f6d756e7346
6f726d617320416c7465726e617469766173206465204361726163746572
6573466f726d61732044696163729274696361732064612056927267756c
6156616e6c696750616c6174696e6f206572206574207265676973747265
727420766172656d65726b6520666f72204c696e6f747970652041474c69
6761747572657256616e6c696765206c69676174757265725465676e616c
7465726e6174697665724b6f6d6d616469616b72697469736b6520666f72
6d65724e6f726d61616c6950616c6174696e6f206f6e204c696e6f747970
652041473a6e2072656b69737465729a697479207461766172616d65726b
6b694c696761747575726974546176616c6c69736574206c696761747575
7269744d65726b6b6976616968746f6568646f74436f6d6d612044696163
726974696320466f726d735374616e6461726450616c6174696e6f206573
7420756e65206d617271756520648e706f738e65206465204c696e6f7479
7065204147838c834d83858389815b838a834b8360838388ea94ca934982
c8838a834b8360838395b68e9a82cc836f838a8347815b83568387839383
4a8393837d835f83438341834e838a83658342834a838b837d815b834ebc
d0b7c7c5e9b373a672bfefb6b5b6b0b160a5ceb373a672a672a4b8b4c0a5
cea672a7ceb372c249bcd0adb5b2c5c0cfb9ddc7d5c0dac0cfb9dd20c7d5
c0dab9aec0da20b4ebc4a1c4deb8b620b9dfc0bd20b1b8bab020c7a5bdc3
20c7fcbdc428632920313939312d39392c2032303036204170706c652043
6f6d70757465722c20496e632e2028632920313939312d39322054797065
20536f6c7574696f6e732c20496e632ed9c7cfea9850616c6174696e6f8c
a0e7eaa0e5c7d1e3c9a0e5d3cce4c9a0caced5a0984c696e6f7479706520
41478c28436f707972696768742920313939312d39392c20323030362041
70706c6520436f6d70757465722c20496e632e2028436f70797269676874
2920313939312d3932205479706520536f6c7574696f6e732c20496e632e
50616c6174696e6fa0d9e4c7e5caa0caccc7d1e9a0cbc8caa0d4cfe7eca0
d4d1e3ca204c696e6f7479706520414728632920313939312d39392c2032
303036204170706c6520436f6d70757465722c20496e632e202863292031
3939312d3932205479706520536f6c7574696f6e732c20496e632ef8e2e9
ec50616c6174696e6f20e4e9f0e5a0f1e9eeefa0f8f9e5eda0f9ec204c69
6e6f74797065204147b3a3b9e6c1acd7d6b9abb9b2b5c4c1acd7d6d7d6b7
fbb1b8d1a1b6bab5e3d6d8d2f4d0cecabd0043006f007000790072006900
6700680074002000a900200031003900390031002d00390039002c002000
320030003000360020004100700070006c006500200043006f006d007000
75007400650072002c00200049006e0063002e00200043006f0070007900
720069006700680074002000a900200031003900390031002d0039003200
20005400790070006500200053006f006c007500740069006f006e007300
2c00200049006e0063002e00200041006c006c0020007200690067006800
740073002000720065007300650072007600650064002e00500061006c00
6100740069006e006f0052006500670075006c0061007200500061006c00
6100740069006e006f003b00200037002e00300064003400650036003b00
200032003000310031002d00300034002d0032003700500061006c006100
740069006e006f0037002e0030006400340065003600500061006c006100
740069006e006f002d0052006f006d0061006e00500061006c0061007400
69006e006f00200069007300200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f00660020004c0069006e006f0074007900700065002000410047000000
b8003c2bb800322bb802bab26e231fb802c0b273321fb802bfb26e241fbd
02b502b30014001f02b402b3b2141fdfb802b3b4010402131fb802a4b7d2
1f1fc360311f00ba01bc0001028eb27c181f4109029002850018001f028f
02840018001f028ab2cb181fb80288b2a6181fb802864039761a1f2fa63f
a64fa65fa66fa67fa68fa69fa6afa6bfa60a3f76af76bf76c0f1041f7c2f
7c3f7c03ff7c012f7c3f7c4f7c5f7c5fcba0cb0610411c02850001000f02
84001f0284004f02850050028500cf0284000500000285004f0284006f02
84008f02850090028500a002850006009d0155b2071fb1b80184b2031f67
b801afb2081fc1bc0123000d001f0142017bb6051f95d7071fd7bc01b200
4f001f010b0108b20d1fd7bc01b2004f001f013501b2b40d1f110840411d
0233021200d9000d020100d9000d01e500d9000d01a900d9000d019e00d9
000d017000d9000d016700d9000d015d00d9000d015b00d9000d0139400b
d90dc4d90d8cd90d78d90db8012f400b5d0def5d0dc65d0d795d0d411302
0c00a2000d01bd00a2000d01a500a2000d018600a2000d016800a2000d01
3000a2000d011c401aa20de9a20dc8a20d70a20d69a20de35a0de15a0d63
5a0d575a0db8012cb20f0009410901f700600801001f01f30089019a001f
01f2b2d2891fbc01ee0084019a001f01a2b286721fb8019fb286cd1f4115
019d00860801001f019c0086019a001f019b00600401001f019a00600801
001f0197007a0401001f0193b284891fbc018d00840125001f018cb284e4
1fb8018ab277cd1fbc018400640125001f0161b2d2891fb8015fb284ab1f
b8015eb284cd1fbc015a0068019a001f0138b2862d1f41110134008902ab
001f012d006802ab001f012b00640156001f012a00640201001f011bb286
cd1fb80118400977bb1ffe86791ffcd2b80401b21ffbd2b80125b21ff884
b80156b61ff677241ff568b80401b21ff464b80156b21fec89b80201400b
1feb84621fea84891fe777b80801b21fe464b80401400f1fd1d2e41fd084
891fcf849e1fc577b8019a40171fbd86811fbc779e1fb864931fb764811f
aa84621fa864b80801b21fa1d2b80401b21f9e68b80201b21f92d2b80201
b61f8b84cd1f8764b80125b21f7f64b80801400b1f7e86431f7d84931f75
84b80801b21f7477b8019ab21f6f68b80401b41fd260191fb80191b26018
1fb8028b401760291f6857281f86603c1f7a6e2f1f6d64e41f5e84931fb8
02874010a92d1fa977281f9f77af77bf7703896eb8010040271f6e603b1f
d06001606e1e1f306e406e506e03606e706e806e906e0455180918099f02
9f030290be02130007009001ed00070090013d40430790e60790da079090
07908f07908207906a07906207905f07905c072408220820081e081c081a
08180816081408120810080e080c080a080808060804080208000814b8ff
e04032000001001416000001001606100000010006040000010004100000
01001002000001000200000001000002010802004a0030410b0233004002
33005002330003008002330090023300020173744bb0c063004b6220b0fb
5323b80105515ab005234218b9000101ff858d16763f183f123e11394644
3e113946443e113946443e113946443e11394660443e113946443e113946
60442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b73014b5079bc001f01980007001f0194b6071fe8071f8d072b2b
2b2b4b5379bc00900198000700900194b60790e807908d072b2b2b2b181d
b0964b5358b0aa1d59b0324b5358b0ff1d5974752b742b2b742b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00456953424b5058b1080042592b2b2b2b2b2b2b
2b2b2b73747573747573732b2b2b2b2b2b752b2b2b742b2b2b2b2b0000>
[16157 16169 16337 16321 16357 16245 16037 16229 16341 15637 15849 16061 16057
16149 16017 16357 16369 12173 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 3 <> Palatino-Roman AddT42Char 
1 2936 15 <0001fff2fecf018e0105000c0024bb000c029f000802a2b30805ad09b802
a1b4000c0b000d10d4d83910f4f439003ff43130033e0137363f01363717
020f010e4c4012090f6c164a1a7cb255fee87e8b4422721b071a1cfedfd2
2700>Palatino-Roman AddT42Char 
1 3028 16 <0001002d01b60271024a00050033400e01040202050302eb000747474a03
b80106b50049066799182b4e10f44dfd4e456544e6002f4dfd0112393900
12393931301335372115072d2d02173001b60e860f850000>Palatino-Roman AddT42Char 
1 12604 49 <00010031ffdd0661058d004f009f400909400941021e471616b802c24052
3c421442423c42473c1e163c161e42285d21561e772c5d3356385636f151
4c5d455642770756115d005d2f099f09020976501e4200122d5727571157
14582a5816282c0312023c4b5701574e584c00083809003f3f3ce4ededc4
3f173ce4e4ededed111239390110f45decece4fde4ed10f4e4e4ecfde4ec
11123939071004763c180710012b100476c0183130017133353637363736
37363511342726272e01273516333237161f010116171617113427262726
27262735163332371506070607060706151114132f0126272627262f0101
111417161716171617152623223969210e060a040604081c122f51a72b49
485528cf012e91583826070409070e21687679725d68210e060a04060567
180605071f532781fd3b070409070e2168586a743f010f060d1455846003
2f210a12191009013f04046f35fffe94ae64422602db628453140d060e01
3f04043f010e060e1356845ffe1f92fe711e05020405235e30a3034ffd01
628553130e060e013f07>Palatino-Roman AddT42Char 
1 15856 57 <00010015fff605a3058d003100894053181718471919772c2d142c2d2c18
471717600203140303020203000a2d2c2631000a300a020a4731bc000030
00020047cf2601269a332c2d18191703020709310f21270309570c582458
0e2226030a02310008003f3c3f173ce4e4fd173c111217390110f65d76d4
5d18fd76c45d18111239391112393907102b1076c41810072b107608c431
30052627012627262726273516333237150e021514171617090136373635
342726273516333237150e0107060701070e010702b01e5ffeac360d0910
1658b55651c27a270f0e2b20013901053934161a1486974c4e894c1e0d09
41fec84d181e120a57f9034986150d060a06400808470206110b0b298551
fcea028f8da647111808070a40060640030e150f93fd00c53b5639000000
>Palatino-Roman AddT42Char 
2 2408 68 <00020052ffef03cf03c20033004100ac4031060b0c404940692c7625792c
7637763884258a2c9b2ce425e426e4270e09251925021c562a1d416e180e
56201030100210b802854015434000217f018f019f010301013b7a202330
230223b8028e402a4200402a411d34212a1d2a0920052e152e252e352e45
2e05f42e012e830907175a1c1a58180a3e84200b003fed3fe43ced3fed5d
71111239392f1acd10c9101acc0110f65dfd392f5d1ac91a10fc5de4c4fd
3c3ce4313000715d13273635342736373633321617161507111417161716
1f011526232207370e0123222635343e0137362437362e012322060f0106
050e010706070615141633323637d93501017f513e4d729c261a0408060d
0a2041523e3c6405cc4c3a79872f42223a010580013072523b590a121b01
be82b82617111a524943834102ad0e17282a19531d1556503861b7fed630
150f07060206390707b09a27816b457243101b3e0f5f6a44200b243cbf16
361d1122323d4a534d4d0000>Palatino-Roman AddT42Char 
2 2780 69 <0002ffeaffea041605d20031004200d3404a393e4b3e5c3e8c2f9c2fa91d
a91ecb1dcb1ed71dd71ed63bdc3ed541eb3e0f0522782678277536753789
268927b61db61eb826b83bc926c93bf221f2220f3c7a0024102420243024
0424b8028a402f443032311a561b15b3326e0e8504403121007307560004
10042004300440046004700480049004b004d004f0040c04b8028f400e43
301c2d2036321c0340390d5a0eb8012c400d12004084200700310b39832d
0b003fed3fc43fed3ff5ed11121739111239390110f45de4f41ac81a10e5
fde43ce411123910f65ded3130015d005d17363736351134272627262726
233536373633321615140f01060f0115373e0133321e0115140607060f01
0e01232226270713111416171e0133323635342e01232206820c01060604
07050b0f7be2580d07070802010501028a1b7c466eaa5b34291e15925964
4e43724051990b1c2a6f3e919c4a82515f96047e21d92601bda7b2780e0a
04073b1c2a060908070d21b37e9cc687172c67bc72589e3e2f1169422524
2d4c0292fe89321c17232ae0a5759e4f6d00>Palatino-Roman AddT42Char 
2 3472 71 <00020054fff004a305cc002e003f00e540740041b916bb17b93be61de537
06293b293c34203421343744374438533753387a237c30882383279327a4
27b427c916c923c427c934c93cd816d327d637d638d83ce527ea30e638fc
1c1e3b2115181518151e0113562a5628152f6e0e6b05b30f090100092009
5009600970099009a009c0090809b80290401041367a0f1e4f1e02201e30
1eef1e031eb8028e400c403d2f393215281a25005a01b8012c4011040032
8325070e5a1258130f0a39841a0b003fed3f3ce4ed3fed3ff5ed11123939
111239390110f65d71ed10fc5d71e4e4fd3c3ce4e4cc11123907101ac831
30005d015d01353e013717060f0111141e0217152623220736370e010706
23222e01353436373e0233321617113427262726132e0123220e01151416
33323e0137363502a76f99490d04050407122a687a322b85030228872650
3d71be673f301bc077463f79390c040b142f449548528a49b680436a500b
08054e390c21180955f3a0fd8e66951d120936070745751d74251470d585
64b3311c72331f2001078b1e0b0509fd8c4b4554aa77b7ce386c422cad00
>Palatino-Roman AddT42Char 
2 5512 76 <0002002d000002260580000b002f005e401060067006800690060406fe00
040c5a0db8018740170f071c5a225a1f58211d0a09fe035610561d6b0f31
0131b80285400b126e0c6b216b28562c562ab90284003010f4e4e4e4e4fd
e45de4e4f4ed003f3ce4eded3ff4ed3fed5d313001321615140623222635
34360335363717061d01121716171e01171617152623220735373e013736
3734133534272e0101212f41422e2f4242c5c28416080501010a05101006
69985b50b65f1517060b03060a061f0580422f2e42422e2f42fdb739163e
10d571b6fefc153217090d0401023907073901010d0a14330d0112b0951c
0f0f0000>Palatino-Roman AddT42Char 
2 6036 78 <00010021fff6048305d200500146409f46244625432646314535050a310a
32023302340235023602380c3c0c3d0c3e1b31143314342b252b31243333
334033403440355a3d5a3e6c3d6c3e6c3f732f73307033703470357b3c7b
3d7b3e832f83308033803480358e3c8e3d8e3ebb40dc3ddc3e2c123c803c
923c03e23cf23c029d3c013532322f413c3222323522263532326e413c14
41322f413c2f2a32353238413c423222222126262a2a38423cb8ffe84019
3c4f380138521ab3455621426e07560c56136b006b60090109b802844010
5132382b404142212221214d26125a13b8012c401516002b5a2a26064c5a
015a4f584d000a385a393c0b003fd4ed3f3ce4eded3f3ced3ff4ed111239
2fc41ad4c41a1112390110f45de4e4e4e4fd3ce4e410d45dc0381112392f
c011123910c01112391112391112390708102b1001c0070810c0070810c0
057171723130015d005d3335373e01373637361311342726272627262335
36373633321615140f01060f01111736373637163332371506070607060f
0116171e0233150e01072e012726270715121716171e0117161715262322
275e1617060b020106060407050b0f7be2580d07070802010501020b3564
43ea4d1514513a10163d60876651c7963d3a3d4a6642224063cb830b0501
010b0410100768846b683901010d0a14330d0112019fa7b2780e0a04073b
1c2a060908070d21b37e9cfe6e06215439db030338030507273d705153c3
99330a2d0e17101c3b66d075053bfefc153217090d04010239080000>Palatino-Roman AddT42Char 
2 6604 79 <0001002d0000022405d2002e004fb30f300130b8028540142b6b1bb32356
216e07560c56126b006b60090109b80284b32f125a13b8012c400b16002a
5a015a2d582b000a003f3ce4eded3ff4ed0110f45de4ede4e4fde4e4e4e4
5d31303335373e0137363736131134272627262726233536373633321615
140f01060f0111121716171e0117161715262322335e1617060b02010606
0407050b0f7be2580d07070802010501020501010b041010076888676239
01010d0a14330d0112019fa7b2780e0a04073b1c2a060908070d21b37e9c
fdf9fefc153217090d0401023908>Palatino-Roman AddT42Char 
2 6828 80 <0001002a000006ef03c3007e010c403ba33ba33ce42df42404d526d62702
842601131d13261349134a136c231d236c3524794579688a450b49252526
6c211c1c1d1c1d2526047b22105a11b8012c402b155647842b076a842207
7a5d573b04015a3f585a587d587b5c58403c05000a2642251d661c40b343
6e3b80b80285b5345600310131b80291402d005801586b505625734d6e0f
5c1f5c2f5cbf5ccf5c055c6b635600660166007b017b6b73566e5619561c
706e66b80291400e106b006b0c560756600970090209b90284007f10f45d
e4e4e4e4e4fd3ce4e4e4e45d105de4e45dfde4e4e45df45de4e4c4fde411
1239111239003f173ce4e4e4fd173c3fed3fedf4f4ed111217390507101a
c90710c93130005d0171725d3335373e0137363734133534272e02073536
373633321615140706073736373e01333216173736373e0133321617161d
0117161516171e011716171526232207133735342e012322070e011d0117
161716171e01171617152623220735373e01373637361335342e0123220e
0107061d01121516171e01171617152623222a5f1517060b030603030d20
72ca5d1407070801040283190617562f6096286e250e1a602f729a160e03
03020a04111006687e2e2c850903226d4853433220030201020a04101007
68935948be5f1617060b0201052864463c6b3a060a06020a04101106688a
61563901010d0a14330d011277505c3b160b01391c2d0a0a0a0709305f78
16030d165e5c6622080f1a794d33a9688b79153217090d04010239060601
146c56a87b4c30256491438b79153217090d0401023908083901010d0a14
330d01124e817747334c2b45613dfefc153217090d04010239080000>Palatino-Roman AddT42Char 
2 7840 82 <00020044ffe1041a03c7000f001d00b74057b602bc09b512ba19c502cc09
c312cb19d901da04d60ee504e80cec0df907fb09f915f916f51c13041a01
9512a408a412aa19e411e6160649081b64030714640a0b177a0006200630
060306cb1f107a2000300002007c1e10f45ded10f65ded003fed3fed3130
43794038011d082612260e0f0d0f0c0f030619261509175f01130b105f00
1a04175f011c02105f001607145f00110f145f0018051b5f011d011b5f01
2b2b2b2b012b2b2b2b2b2a2b2b81005d01715d13340033320015140e0123
222e01272637141e0133323635342e0123220644011ddfd2010888f89574
a1641a2ebd529b5b749c5d90577b9901cce0011bfef8d192f2894e763e6d
c67bfe75b8bf9fe75fb2>Palatino-Roman AddT42Char 
2 8956 85 <0001002f0000030003c3003c008540230b280b290b2aa41fa420a421d628
d629fb28fb290a2b282b29022838161d3823115a12b80187402c17562c7a
2307385a015a3b5839000a402921285626263e0a3832561a561d306e116b
006b08560d565f0a010ab90284003d10f45de4e4e4e4fd3ce4e4cc111239
2ff41ac81a003f3ce4eded3fedf4f4ed111239111239313000715d333536
373e01373637123d0134272e02073536373633321615140706073e01373e
0133321f010607232e012322061d0114171e02171617152623222f710911
11050a020603020d2172ca5d140707080105012d4c111e4e2a2a29060f02
2d173d2e4d6c0501080d0f1e84b07c80390202030d0c1731010b0c77505c
3b160b01391c2d0a0a0a07093d8034660f1a1f120e8565302c7f7f6742af
3e220f0509093907>Palatino-Roman AddT42Char 
2 10484 89 <0001001efff6045a03ac0031009e405d182e292e02184718141b1bf6312e
142e312e18181b4714146e0400140404001b2814041804000a2e31285f28
e0280228491800831b312b313f310331af0a010a321b14180f2e0409310f
232903095a26580c580e2428030a061831000a003f3cc03f173ce4e4fd17
3c11123939111239390110d45dd45dfd3976d45d18111239111239111239
123907102b107608c0180705102b100876c03130015d05262f01032e0127
26273516333237150e011514171317161737363736373635342726273516
333237150e0107060f01060301fe270f52cd141c110e3ca64c54926c2628
7a1d31126409523010040d1868952a239c3e29140e5e6019940a6623bf01
dd2d1e0404023c07073c0316131e63fed0447728e314cd773f110d11070d
033c07073c03172418c0cd37fea00000>Palatino-Roman AddT42Char 
1 0 0 <0002010000000500050000030007005bb10504b80128b2000607bb012800
02000101d0400b0303000a0947474a020605b80128b60303027b000704b8
0128b401004908d5b901dd00182b4e10f43c4df53c10fd3c10f53c4e1045
6544e6003f3c4d10fd3cf53c10f53c3130211121112521112101000400fc
2003c0fc400500fb002004c0>Palatino-Roman AddT42Char 
Palatino-Roman /CharStrings get begin
/space 3 def
/comma 15 def
/hyphen 16 def
/N 49 def
/V 57 def
/a 68 def
/b 69 def
/d 71 def
/i 76 def
/k 78 def
/l 79 def
/m 80 def
/o 82 def
/r 85 def
/v 89 def
end
Palatino-Roman /Encoding get
dup 32 /space put
dup 44 /comma put
dup 45 /hyphen put
dup 78 /N put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/DFQKSA+Palatino-Roman /Palatino-Roman findfont ct_VMDictPut/DFQKSA+Palatino-Roman*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen 32{/.notdef}rp /N 7{/.notdef}rp /V 10{/.notdef}rp /a /b /.notdef /d 4{/.notdef}rp /i /.notdef /k /l /m /.notdef /o 2{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]DFQKSA+Palatino-Roman nfDFQKSA+Palatino-Roman*1 [14 0 0 -14 0 0 ]msf864.886 254.592 mo(--Vladimir Nabokov)sh989.293 254.592 mo(,)shDFQKRZ+Palatino-Italic*1 [14 0 0 -14 0 0 ]msf992.793 254.592 mo( Ada or Ardor)sh%ADOBeginClientInjection: EndPageContent "AI11"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11"
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/1 ]]
] del_res
/DFQKSA+Palatino-Roman*1 uf/DFQKSA+Palatino-Roman uf/Palatino-Roman uf/DFQKRZ+Palatino-Italic*1 uf/DFQKRZ+Palatino-Italic uf/Palatino-Italic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 3
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize Tabloid
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
